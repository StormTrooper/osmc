From 3b87857ce7635b3e81760e128dc31054be2126fc Mon Sep 17 00:00:00 2001
From: "Ch1llb0/skin.osmc" <36623079+Ch1llb0@users.noreply.github.com>
Date: Wed, 20 Mar 2019 01:34:54 +0100
Subject: [PATCH] Widget headings improvements

Include_Home_OSMC.xml:
- remove reloading indicator for widgets

Includes_Widgets.xml:
- always show widget headings (when focused and non-focused)
- add reload indicator to widget headings
- change widget heading animations to match widget animations

script-skinshortcuts-static.xml:
- adjust game widget heading to match new widget headings
- remove special non-focused heading
- add location to weather widget heading

template.xml:
- remove special non-focused heading
- add location to weather widget heading

addon.xml:
- update changelog

Changelog.md:
- update changelog
---
 16x9/Include_Home_OSMC.xml           |   7 -
 16x9/Includes_Widgets.xml            | 242 ++++++++++++++++++++-------
 16x9/script-skinshortcuts-static.xml | 148 ++++++++--------
 Changelog.md                         |  10 ++
 addon.xml                            |   2 +-
 shortcuts/template.xml               |   4 +-
 6 files changed, 272 insertions(+), 141 deletions(-)

diff --git a/16x9/Include_Home_OSMC.xml b/16x9/Include_Home_OSMC.xml
index 856c7a9..ebd0cbf 100644
--- a/16x9/Include_Home_OSMC.xml
+++ b/16x9/Include_Home_OSMC.xml
@@ -80,13 +80,6 @@
 			<include>skinshortcuts-template-vertical</include>
 		</control>
 
-		<!-- Reloading indicator -->
-		<control type="group">
-			<left>1820</left>
-			<top>668</top>
-			<include>skinshortcuts-template-reloading</include>
-		</control>
-
 		<!-- Sub Menu -->
 		<control type="group" id="9010">
 			<animation effect="slide" time="200" end="-200,0" condition="Integer.IsEqual(Container(9001).NumItems,0)">Conditional</animation>
diff --git a/16x9/Includes_Widgets.xml b/16x9/Includes_Widgets.xml
index 5419fab..02757ff 100755
--- a/16x9/Includes_Widgets.xml
+++ b/16x9/Includes_Widgets.xml
@@ -588,7 +588,7 @@
 			<left>590</left>
 			<top>680</top>
 			<width>1218</width>
-			<height>280</height>
+			<height>326</height>
 			<include content="widgetHeading-content">
 				<param name="container">$PARAM[container]</param>
 			</include>
@@ -597,67 +597,195 @@
 
 	<include name="widgetHeading-content">
 		<definition>
-			<visible>Integer.IsGreater(Container($PARAM[container]).NumItems,0)</visible>
-			<include>VisibleFadeAnimation</include>
+			<animation type="Visible">
+				<effect type="fade" start="0" end="100" time="200" />
+				<effect type="slide" start="1800,0" end="0,0" time="400" />
+			</animation>
+			<animation type="Hidden">
+				<effect type="fade" start="100" end="0" time="200" />
+				<effect type="slide" start="0,0" end="1800,0" time="400" />
+			</animation>
 
-			<!-- Indicators -->
-			<control type="group">
-				<visible>Integer.IsGreater(Container($PARAM[container]).NumItems,1)</visible>
-				<include>VisibleFadeAnimation</include>
-				<control type="button">
-					<top>15</top>
-					<left>0</left>
-					<width>30</width>
-					<height>16</height>
-					<onleft>9000</onleft>
-					<onright>9000</onright>
-					<onup>9000</onup>
-					<ondown>9000</ondown>
-					<texturenofocus colordiffuse="$VAR[TextColor2]">up.png</texturenofocus>
-					<texturefocus>up.png</texturefocus>
-					<onclick>Control.Move($PARAM[container],-1)</onclick>
+			
+			<!-- Widget has focus -->
+			<control type="grouplist">
+				<orientation>vertical</orientation>
+				<usecontrolcoords>true</usecontrolcoords>
+				<animation type="Conditional" condition="ControlGroup(9002).HasFocus">
+					<effect type="fade" start="0" end="100" time="200" />
+					<effect type="slide" start="1800,0" end="0,0" time="400" />
+				</animation>
+				<animation type="Conditional" condition="!ControlGroup(9002).HasFocus">
+					<effect type="fade" start="100" end="0" time="200" />
+					<effect type="slide" start="0,0" end="1800,0" time="400" />
+				</animation>
+
+				<!-- Widget details -->
+				<control type="textbox">
+					<width>1218</width>
+					<height>auto</height>
+					<font>Font33</font>
+					<align>right</align>
+					<aligny>top</aligny>
+					<label>$VAR[widgetDetails]</label>
+					<textcolor>$VAR[TextColor1]</textcolor>
+				</control>
+				
+				<!-- Indicators + Widget heading -->
+				<control type="grouplist">
+					<height>46</height>
+					<width>1218</width>
+					<itemgap>10</itemgap>
+					<align>right</align>
+					<orientation>horizontal</orientation>
+					<usecontrolcoords>true</usecontrolcoords>
+					<visible>Integer.IsGreater(Container($PARAM[container]).NumItems,1)</visible>
+					<control type="label">
+						<width>auto</width>
+						<height>46</height>
+						<font>Font33</font>
+						<align>right</align>
+						<aligny>top</aligny>
+						<label>$INFO[Container($PARAM[container]).ListItem.Label]</label>
+						<textcolor>$VAR[TextColor2]</textcolor>
+					</control>
+					<control type="button">
+						<top>15</top>
+						<width>30</width>
+						<height>16</height>
+						<onleft>9000</onleft>
+						<onright>9000</onright>
+						<onup>9000</onup>
+						<ondown>9000</ondown>
+						<texturenofocus colordiffuse="$VAR[TextColor2]">up.png</texturenofocus>
+						<texturefocus>up.png</texturefocus>
+						<onclick>Control.Move($PARAM[container],-1)</onclick>
+					</control>
+					<control type="button">
+						<top>15</top>
+						<width>30</width>
+						<height>16</height>
+						<onleft>9000</onleft>
+						<onright>9000</onright>
+						<onup>9000</onup>
+						<ondown>9000</ondown>
+						<texturenofocus colordiffuse="$VAR[TextColor2]">down.png</texturenofocus>
+						<texturefocus>down.png</texturefocus>
+						<onclick>Control.Move($PARAM[container],1)</onclick>
+					</control>
 				</control>
-				<control type="button">
-					<top>15</top>
-					<left>40</left>
-					<width>30</width>
-					<height>16</height>
-					<onleft>9000</onleft>
-					<onright>9000</onright>
-					<onup>9000</onup>
-					<ondown>9000</ondown>
-					<texturenofocus colordiffuse="$VAR[TextColor2]">down.png</texturenofocus>
-					<texturefocus>down.png</texturefocus>
-					<onclick>Control.Move($PARAM[container],1)</onclick>
+				
+				<!-- Widget heading -->
+				<control type="label">
+					<width>1218</width>
+					<height>46</height>
+					<font>Font33</font>
+					<align>right</align>
+					<aligny>top</aligny>
+					<visible>Integer.IsEqual(Container($PARAM[container]).NumItems,1)</visible>
+					<label>$INFO[Container($PARAM[container]).ListItem.Label]</label>
+					<textcolor>$VAR[TextColor2]</textcolor>
+					<scroll>true</scroll>
 				</control>
+				
 			</control>
-
-			<!-- Widget heading -->
-			<control type="label">
-				<top>0</top>
-				<left>80</left>
-				<width>auto</width>
-				<height>132</height>
-				<font>Font33</font>
-				<align>left</align>
-				<aligny>top</aligny>
-				<label>$INFO[Container($PARAM[container]).ListItem.Label]</label>
-				<textcolor>$VAR[TextColor2]</textcolor>
-				<visible>ControlGroup(9002).HasFocus + String.IsEqual(Window.Property(changeWidget-$PARAM[container]),True)</visible>
-				<include>VisibleFadeAnimation</include>
+			<!-- Reloading indicator -->
+			<control type="group">
+				<animation type="Conditional" condition="ControlGroup(9002).HasFocus">
+					<effect type="fade" start="0" end="100" time="200" />
+					<effect type="slide" start="1800,0" end="0,0" time="400" />
+				</animation>
+				<animation type="Conditional" condition="!ControlGroup(9002).HasFocus">
+					<effect type="fade" start="100" end="0" time="200" />
+					<effect type="slide" start="0,0" end="1800,0" time="400" />
+				</animation>
+				<left>1230</left>
+				<top>-12</top>
+				<include>skinshortcuts-template-reloading</include>
 			</control>
-
-			<!-- Widget details -->
-			<control type="fadelabel">
-				<top>0</top>
-				<right>0</right>
-				<width>1080</width>
-				<height>132</height>
-				<font>Font33</font>
-				<align>right</align>
-				<aligny>top</aligny>
-				<label>$VAR[widgetDetails]</label>
-				<textcolor>$VAR[TextColor1]</textcolor>
+			
+			<!-- Widget does not have focus -->
+			<control type="group">
+				<animation type="Conditional" condition="!ControlGroup(9002).HasFocus">
+					<effect type="fade" start="0" end="100" time="200" />
+					<effect type="slide" start="1800,0" end="0,0" time="400" />
+				</animation>
+				<animation type="Conditional" condition="ControlGroup(9002).HasFocus">
+					<effect type="fade" start="100" end="0" time="200" />
+					<effect type="slide" start="0,0" end="1800,0" time="400" />
+				</animation>
+				
+				<!-- Indicators + Widget heading -->
+				<control type="grouplist">
+					<height>46</height>
+					<width>1218</width>
+					<itemgap>10</itemgap>
+					<align>right</align>
+					<orientation>horizontal</orientation>
+					<usecontrolcoords>true</usecontrolcoords>
+					<visible>Integer.IsGreater(Container($PARAM[container]).NumItems,1)</visible>
+					<control type="label">
+						<width>auto</width>
+						<height>46</height>
+						<font>Font33</font>
+						<align>right</align>
+						<aligny>top</aligny>
+						<label>$INFO[Container($PARAM[container]).ListItem.Label]</label>
+						<textcolor>$VAR[TextColor2]</textcolor>
+					</control>
+					<control type="button">
+						<top>15</top>
+						<width>30</width>
+						<height>16</height>
+						<onleft>9000</onleft>
+						<onright>9000</onright>
+						<onup>9000</onup>
+						<ondown>9000</ondown>
+						<texturenofocus colordiffuse="$VAR[TextColor2]">up.png</texturenofocus>
+						<texturefocus>up.png</texturefocus>
+						<onclick>Control.Move($PARAM[container],-1)</onclick>
+					</control>
+					<control type="button">
+						<top>15</top>
+						<width>30</width>
+						<height>16</height>
+						<onleft>9000</onleft>
+						<onright>9000</onright>
+						<onup>9000</onup>
+						<ondown>9000</ondown>
+						<texturenofocus colordiffuse="$VAR[TextColor2]">down.png</texturenofocus>
+						<texturefocus>down.png</texturefocus>
+						<onclick>Control.Move($PARAM[container],1)</onclick>
+					</control>
+				</control>
+				
+				<!-- Widget heading -->
+				<control type="label">
+					<width>1218</width>
+					<height>46</height>
+					<font>Font33</font>
+					<align>right</align>
+					<aligny>top</aligny>
+					<visible>Integer.IsEqual(Container($PARAM[container]).NumItems,1)</visible>
+					<label>$INFO[Container($PARAM[container]).ListItem.Label]</label>
+					<textcolor>$VAR[TextColor2]</textcolor>
+					<scroll>true</scroll>
+				</control>
+				
+			</control>
+			<!-- Reloading indicator -->
+			<control type="group">
+				<animation type="Conditional" condition="!ControlGroup(9002).HasFocus">
+					<effect type="fade" start="0" end="100" time="200" />
+					<effect type="slide" start="1800,0" end="0,0" time="400" />
+				</animation>
+				<animation type="Conditional" condition="ControlGroup(9002).HasFocus">
+					<effect type="fade" start="100" end="0" time="200" />
+					<effect type="slide" start="0,0" end="1800,0" time="400" />
+				</animation>
+				<left>1230</left>
+				<top>-12</top>
+				<include>skinshortcuts-template-reloading</include>
 			</control>
 			
 		</definition>
diff --git a/16x9/script-skinshortcuts-static.xml b/16x9/script-skinshortcuts-static.xml
index 2a12d47..6027cb3 100644
--- a/16x9/script-skinshortcuts-static.xml
+++ b/16x9/script-skinshortcuts-static.xml
@@ -1236,70 +1236,80 @@
 		</control>
 		<control type="group">
 			<left>590</left>
-			<top>700</top>
+			<top>680</top>
 			<width>1218</width>
-			<height>280</height>
+			<height>326</height>
 			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
 			<visible>Integer.IsGreater(Container(10006).NumItems,0)</visible>
-			<animation effect="fade" start="0" end="100" time="200">Visible</animation>
+			<animation type="Visible">
+				<effect type="fade" start="0" end="100" time="200" />
+				<effect type="slide" start="1800,0" end="0,0" time="400" />
+			</animation>
+			<animation type="Hidden">
+				<effect type="fade" start="100" end="0" time="200" />
+				<effect type="slide" start="0,0" end="1800,0" time="400" />
+			</animation>
 
-			<!-- Indicators -->
-			<control type="group">
-				<visible>Integer.IsGreater(Container(10006).NumItems,1)</visible>
-				<include>VisibleFadeAnimation</include>
-				<control type="button">
-					<top>15</top>
-					<left>0</left>
-					<width>30</width>
-					<height>16</height>
-					<onleft>9000</onleft>
-					<onright>9000</onright>
-					<onup>9000</onup>
-					<ondown>9000</ondown>
-					<texturenofocus colordiffuse="$VAR[TextColor2]">up.png</texturenofocus>
-					<texturefocus>up.png</texturefocus>
-					<onclick>Control.Move(10006,-1)</onclick>
+			
+			<!-- Widget has focus -->
+			<control type="grouplist">
+				<orientation>vertical</orientation>
+				<usecontrolcoords>true</usecontrolcoords>
+				<animation type="Conditional" condition="ControlGroup(9002).HasFocus">
+					<effect type="fade" start="0" end="100" time="200" />
+					<effect type="slide" start="1800,0" end="0,0" time="400" />
+				</animation>
+				<animation type="Conditional" condition="!ControlGroup(9002).HasFocus">
+					<effect type="fade" start="100" end="0" time="200" />
+					<effect type="slide" start="0,0" end="1800,0" time="400" />
+				</animation>
+
+				<!-- Widget details -->
+				<control type="textbox">
+					<width>1218</width>
+					<height>auto</height>
+					<font>Font33</font>
+					<align>right</align>
+					<aligny>top</aligny>
+					<label>$VAR[widgetDetails]</label>
+					<textcolor>$VAR[TextColor1]</textcolor>
 				</control>
-				<control type="button">
-					<top>15</top>
-					<left>40</left>
-					<width>30</width>
-					<height>16</height>
-					<onleft>9000</onleft>
-					<onright>9000</onright>
-					<onup>9000</onup>
-					<ondown>9000</ondown>
-					<texturenofocus colordiffuse="$VAR[TextColor2]">down.png</texturenofocus>
-					<texturefocus>down.png</texturefocus>
-					<onclick>Control.Move(10006,1)</onclick>
+				
+				<!-- Widget heading -->
+				<control type="label">
+					<width>1218</width>
+					<height>46</height>
+					<font>Font33</font>
+					<align>right</align>
+					<aligny>top</aligny>
+					<label>$LOCALIZE[35049]</label>
+					<textcolor>$VAR[TextColor2]</textcolor>
 				</control>
+				
 			</control>
-
-			<!-- Widget heading -->
-			<control type="label">
-				<top>0</top>
-				<right>0</right>
-				<width>1000</width>
-				<height>280</height>
-				<font>Font33</font>
-				<align>right</align>
-				<aligny>top</aligny>
-				<label>$LOCALIZE[35049]</label>
-				<textcolor>$VAR[TextColor2]</textcolor>
-				<visible>!ControlGroup(9002).HasFocus</visible>
-			</control>
-
-			<!-- Widget details -->
-			<control type="label">
-				<top>0</top>
-				<right>0</right>
-				<width>1000</width>
-				<height>280</height>
-				<font>Font33</font>
-				<align>right</align>
-				<aligny>top</aligny>
-				<label>$VAR[widgetDetails]</label>
-				<textcolor>$VAR[TextColor1]</textcolor>
+			
+			<!-- Widget does not have focus -->
+			<control type="group">
+				<animation type="Conditional" condition="!ControlGroup(9002).HasFocus">
+					<effect type="fade" start="0" end="100" time="200" />
+					<effect type="slide" start="1800,0" end="0,0" time="400" />
+				</animation>
+				<animation type="Conditional" condition="ControlGroup(9002).HasFocus">
+					<effect type="fade" start="100" end="0" time="200" />
+					<effect type="slide" start="0,0" end="1800,0" time="400" />
+				</animation>
+				
+				<!-- Widget heading -->
+				<control type="label">
+					<width>1218</width>
+					<height>46</height>
+					<font>Font33</font>
+					<align>right</align>
+					<aligny>top</aligny>
+					<label>$LOCALIZE[35049]</label>
+					<textcolor>$VAR[TextColor2]</textcolor>
+				</control>
+				
 			</control>
 		</control>
 		<control id="10008" type="list">
@@ -3119,72 +3129,64 @@
 		<description>This is a fake template which is needed to trick Skin Shortcuts into building the submenuOther templates</description>
 	</include>
 	<variable name="widgetDetails">
-		<value condition="Control.IsVisible(10001) + String.IsEqual(Container(10001).ListItem.Property(widgetID),1-1) + !Control.HasFocus(10101)">[COLOR $VAR[TextColor2]]$INFO[Container(10001).ListItem.Label][/COLOR]</value>
 		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + Integer.IsEqual(Container(10101).NumItems,0)">$LOCALIZE[20186]...</value>
-		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + False">[COLOR $VAR[TextColor1]]$INFO[Container(10101).ListItem.Property(outlook)][/COLOR]</value>
+		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10101).ListItem.Property(outlook)][/COLOR]</value>
 		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !String.IsEmpty(Container(10101).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10101).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10101).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10101).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !String.IsEmpty(Container(10101).ListItem.Season)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10101).ListItem.TVShowTitle][/LIGHT][CR]$VAR[SEContainer10101] &#8226; $INFO[Container(10101).ListItem.Title][/COLOR]</value>
 		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !String.IsEmpty(Container(10101).ListItem.ChannelName) + !String.IsEmpty(Container(10101).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10101).ListItem.Label][CR][LIGHT]$INFO[Container(10101).ListItem.Title] ($INFO[Container(10101).ListItem.StartTime] - $INFO[Container(10101).ListItem.EndTime])[CR]$INFO[Container(10101).ListItem.NextTitle] ($INFO[Container(10101).ListItem.NextStartTime] - $INFO[Container(10101).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !String.IsEmpty(Container(10101).ListItem.ChannelName)">[COLOR $VAR[TextColor1]]$INFO[Container(10101).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !String.IsEmpty(Container(10101).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10101).ListItem.Label][CR][LIGHT]$INFO[Container(10101).ListItem.StartDate] $INFO[Container(10101).ListItem.StartTime][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101)">[COLOR $VAR[TextColor1]]$INFO[Container(10101).ListItem.Label][/COLOR]</value>
-		<value condition="Control.IsVisible(10002) + String.IsEqual(Container(10002).ListItem.Property(widgetID),2-1) + !Control.HasFocus(10201)">[COLOR $VAR[TextColor2]]$INFO[Container(10002).ListItem.Label][/COLOR]</value>
 		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + Integer.IsEqual(Container(10201).NumItems,0)">$LOCALIZE[20186]...</value>
-		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + False">[COLOR $VAR[TextColor1]]$INFO[Container(10201).ListItem.Property(outlook)][/COLOR]</value>
+		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10201).ListItem.Property(outlook)][/COLOR]</value>
 		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !String.IsEmpty(Container(10201).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10201).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10201).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10201).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !String.IsEmpty(Container(10201).ListItem.Season)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10201).ListItem.TVShowTitle][/LIGHT][CR]$VAR[SEContainer10201] &#8226; $INFO[Container(10201).ListItem.Title][/COLOR]</value>
 		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !String.IsEmpty(Container(10201).ListItem.ChannelName) + !String.IsEmpty(Container(10201).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10201).ListItem.Label][CR][LIGHT]$INFO[Container(10201).ListItem.Title] ($INFO[Container(10201).ListItem.StartTime] - $INFO[Container(10201).ListItem.EndTime])[CR]$INFO[Container(10201).ListItem.NextTitle] ($INFO[Container(10201).ListItem.NextStartTime] - $INFO[Container(10201).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !String.IsEmpty(Container(10201).ListItem.ChannelName)">[COLOR $VAR[TextColor1]]$INFO[Container(10201).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !String.IsEmpty(Container(10201).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10201).ListItem.Label][CR][LIGHT]$INFO[Container(10201).ListItem.StartDate] $INFO[Container(10201).ListItem.StartTime][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201)">[COLOR $VAR[TextColor1]]$INFO[Container(10201).ListItem.Label][/COLOR]</value>
-		<value condition="Control.IsVisible(10004) + String.IsEqual(Container(10004).ListItem.Property(widgetID),4-1) + !Control.HasFocus(10401)">[COLOR $VAR[TextColor2]]$INFO[Container(10004).ListItem.Label][/COLOR]</value>
 		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + Integer.IsEqual(Container(10401).NumItems,0)">$LOCALIZE[20186]...</value>
-		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + False">[COLOR $VAR[TextColor1]]$INFO[Container(10401).ListItem.Property(outlook)][/COLOR]</value>
+		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10401).ListItem.Property(outlook)][/COLOR]</value>
 		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10401).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10401).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10401).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.Season)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10401).ListItem.TVShowTitle][/LIGHT][CR]$VAR[SEContainer10401] &#8226; $INFO[Container(10401).ListItem.Title][/COLOR]</value>
 		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.ChannelName) + !String.IsEmpty(Container(10401).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10401).ListItem.Label][CR][LIGHT]$INFO[Container(10401).ListItem.Title] ($INFO[Container(10401).ListItem.StartTime] - $INFO[Container(10401).ListItem.EndTime])[CR]$INFO[Container(10401).ListItem.NextTitle] ($INFO[Container(10401).ListItem.NextStartTime] - $INFO[Container(10401).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.ChannelName)">[COLOR $VAR[TextColor1]]$INFO[Container(10401).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10401).ListItem.Label][CR][LIGHT]$INFO[Container(10401).ListItem.StartDate] $INFO[Container(10401).ListItem.StartTime][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401)">[COLOR $VAR[TextColor1]]$INFO[Container(10401).ListItem.Label][/COLOR]</value>
-		<value condition="Control.IsVisible(10006) + String.IsEqual(Container(10006).ListItem.Property(widgetID),4-1) + !Control.HasFocus(10601)">[COLOR $VAR[TextColor2]]$INFO[Container(10006).ListItem.Label][/COLOR]</value>
 		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + Integer.IsEqual(Container(10601).NumItems,0)">$LOCALIZE[20186]...</value>
-		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + False">[COLOR $VAR[TextColor1]]$INFO[Container(10601).ListItem.Property(outlook)][/COLOR]</value>
+		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10601).ListItem.Property(outlook)][/COLOR]</value>
 		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !String.IsEmpty(Container(10601).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10601).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10601).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10601).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !String.IsEmpty(Container(10601).ListItem.Season)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10601).ListItem.TVShowTitle][/LIGHT][CR]$VAR[SEContainer10601] &#8226; $INFO[Container(10601).ListItem.Title][/COLOR]</value>
 		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !String.IsEmpty(Container(10601).ListItem.ChannelName) + !String.IsEmpty(Container(10601).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10601).ListItem.Label][CR][LIGHT]$INFO[Container(10601).ListItem.Title] ($INFO[Container(10601).ListItem.StartTime] - $INFO[Container(10601).ListItem.EndTime])[CR]$INFO[Container(10601).ListItem.NextTitle] ($INFO[Container(10601).ListItem.NextStartTime] - $INFO[Container(10601).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !String.IsEmpty(Container(10601).ListItem.ChannelName)">[COLOR $VAR[TextColor1]]$INFO[Container(10601).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !String.IsEmpty(Container(10601).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10601).ListItem.Label][CR][LIGHT]$INFO[Container(10601).ListItem.StartDate] $INFO[Container(10601).ListItem.StartTime][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601)">[COLOR $VAR[TextColor1]]$INFO[Container(10601).ListItem.Label][/COLOR]</value>
-		<value condition="Control.IsVisible(10008) + String.IsEqual(Container(10008).ListItem.Property(widgetID),8-1) + !Control.HasFocus(10801)">[COLOR $VAR[TextColor2]]$INFO[Container(10008).ListItem.Label][/COLOR]</value>
 		<value condition="Control.IsVisible(10008) + Control.HasFocus(10801) + Integer.IsEqual(Container(10801).NumItems,0)">$LOCALIZE[20186]...</value>
-		<value condition="Control.IsVisible(10008) + Control.HasFocus(10801) + False">[COLOR $VAR[TextColor1]]$INFO[Container(10801).ListItem.Property(outlook)][/COLOR]</value>
+		<value condition="Control.IsVisible(10008) + Control.HasFocus(10801) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10801).ListItem.Property(outlook)][/COLOR]</value>
 		<value condition="Control.IsVisible(10008) + Control.HasFocus(10801) + !String.IsEmpty(Container(10801).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10801).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10801).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10801).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10008) + Control.HasFocus(10801) + !String.IsEmpty(Container(10801).ListItem.Season)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10801).ListItem.TVShowTitle][/LIGHT][CR]$VAR[SEContainer10801] &#8226; $INFO[Container(10801).ListItem.Title][/COLOR]</value>
 		<value condition="Control.IsVisible(10008) + Control.HasFocus(10801) + !String.IsEmpty(Container(10801).ListItem.ChannelName) + !String.IsEmpty(Container(10801).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10801).ListItem.Label][CR][LIGHT]$INFO[Container(10801).ListItem.Title] ($INFO[Container(10801).ListItem.StartTime] - $INFO[Container(10801).ListItem.EndTime])[CR]$INFO[Container(10801).ListItem.NextTitle] ($INFO[Container(10801).ListItem.NextStartTime] - $INFO[Container(10801).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10008) + Control.HasFocus(10801) + !String.IsEmpty(Container(10801).ListItem.ChannelName)">[COLOR $VAR[TextColor1]]$INFO[Container(10801).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10008) + Control.HasFocus(10801) + !String.IsEmpty(Container(10801).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10801).ListItem.Label][CR][LIGHT]$INFO[Container(10801).ListItem.StartDate] $INFO[Container(10801).ListItem.StartTime][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10008) + Control.HasFocus(10801)">[COLOR $VAR[TextColor1]]$INFO[Container(10801).ListItem.Label][/COLOR]</value>
-		<value condition="Control.IsVisible(10009) + String.IsEqual(Container(10009).ListItem.Property(widgetID),9-1) + !Control.HasFocus(10901)">[COLOR $VAR[TextColor2]]$INFO[Container(10009).ListItem.Label][/COLOR]</value>
 		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + Integer.IsEqual(Container(10901).NumItems,0)">$LOCALIZE[20186]...</value>
-		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + True">[COLOR $VAR[TextColor1]]$INFO[Container(10901).ListItem.Property(outlook)][/COLOR]</value>
+		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + True">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10901).ListItem.Property(outlook)][/COLOR]</value>
 		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !String.IsEmpty(Container(10901).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10901).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10901).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10901).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !String.IsEmpty(Container(10901).ListItem.Season)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10901).ListItem.TVShowTitle][/LIGHT][CR]$VAR[SEContainer10901] &#8226; $INFO[Container(10901).ListItem.Title][/COLOR]</value>
 		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !String.IsEmpty(Container(10901).ListItem.ChannelName) + !String.IsEmpty(Container(10901).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10901).ListItem.Label][CR][LIGHT]$INFO[Container(10901).ListItem.Title] ($INFO[Container(10901).ListItem.StartTime] - $INFO[Container(10901).ListItem.EndTime])[CR]$INFO[Container(10901).ListItem.NextTitle] ($INFO[Container(10901).ListItem.NextStartTime] - $INFO[Container(10901).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !String.IsEmpty(Container(10901).ListItem.ChannelName)">[COLOR $VAR[TextColor1]]$INFO[Container(10901).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !String.IsEmpty(Container(10901).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(10901).ListItem.Label][CR][LIGHT]$INFO[Container(10901).ListItem.StartDate] $INFO[Container(10901).ListItem.StartTime][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901)">[COLOR $VAR[TextColor1]]$INFO[Container(10901).ListItem.Label][/COLOR]</value>
-		<value condition="Control.IsVisible(100010) + String.IsEqual(Container(100010).ListItem.Property(widgetID),10-1) + !Control.HasFocus(101001)">[COLOR $VAR[TextColor2]]$INFO[Container(100010).ListItem.Label][/COLOR]</value>
 		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + Integer.IsEqual(Container(101001).NumItems,0)">$LOCALIZE[20186]...</value>
-		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + False">[COLOR $VAR[TextColor1]]$INFO[Container(101001).ListItem.Property(outlook)][/COLOR]</value>
+		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(101001).ListItem.Property(outlook)][/COLOR]</value>
 		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !String.IsEmpty(Container(101001).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(101001).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(101001).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(101001).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !String.IsEmpty(Container(101001).ListItem.Season)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101001).ListItem.TVShowTitle][/LIGHT][CR]$VAR[SEContainer101001] &#8226; $INFO[Container(101001).ListItem.Title][/COLOR]</value>
 		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !String.IsEmpty(Container(101001).ListItem.ChannelName) + !String.IsEmpty(Container(101001).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(101001).ListItem.Label][CR][LIGHT]$INFO[Container(101001).ListItem.Title] ($INFO[Container(101001).ListItem.StartTime] - $INFO[Container(101001).ListItem.EndTime])[CR]$INFO[Container(101001).ListItem.NextTitle] ($INFO[Container(101001).ListItem.NextStartTime] - $INFO[Container(101001).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !String.IsEmpty(Container(101001).ListItem.ChannelName)">[COLOR $VAR[TextColor1]]$INFO[Container(101001).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !String.IsEmpty(Container(101001).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(101001).ListItem.Label][CR][LIGHT]$INFO[Container(101001).ListItem.StartDate] $INFO[Container(101001).ListItem.StartTime][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001)">[COLOR $VAR[TextColor1]]$INFO[Container(101001).ListItem.Label][/COLOR]</value>
-		<value condition="Control.IsVisible(100011) + String.IsEqual(Container(100011).ListItem.Property(widgetID),11-1) + !Control.HasFocus(101101)">[COLOR $VAR[TextColor2]]$INFO[Container(100011).ListItem.Label][/COLOR]</value>
 		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + Integer.IsEqual(Container(101101).NumItems,0)">$LOCALIZE[20186]...</value>
-		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + False">[COLOR $VAR[TextColor1]]$INFO[Container(101101).ListItem.Property(outlook)][/COLOR]</value>
+		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(101101).ListItem.Property(outlook)][/COLOR]</value>
 		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !String.IsEmpty(Container(101101).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(101101).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(101101).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(101101).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
 		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !String.IsEmpty(Container(101101).ListItem.Season)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101101).ListItem.TVShowTitle][/LIGHT][CR]$VAR[SEContainer101101] &#8226; $INFO[Container(101101).ListItem.Title][/COLOR]</value>
 		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !String.IsEmpty(Container(101101).ListItem.ChannelName) + !String.IsEmpty(Container(101101).ListItem.StartTime)">[COLOR $VAR[TextColor1]]$INFO[Container(101101).ListItem.Label][CR][LIGHT]$INFO[Container(101101).ListItem.Title] ($INFO[Container(101101).ListItem.StartTime] - $INFO[Container(101101).ListItem.EndTime])[CR]$INFO[Container(101101).ListItem.NextTitle] ($INFO[Container(101101).ListItem.NextStartTime] - $INFO[Container(101101).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
diff --git a/Changelog.md b/Changelog.md
index 64b87b9..589f131 100644
--- a/Changelog.md
+++ b/Changelog.md
@@ -27,6 +27,7 @@ _Improved_
 - add song/album year to music player
 - add wide list as music view
 - add music OSD album art size switch
+- adjust widget headings to always show and adjust animations to match widget animations
 
 _Fixed_
 - show proper game widget title when not using skinshortcuts script
@@ -294,6 +295,7 @@ Include_Home_OSMC.xml:
 - change submenu animations for new submenu indicator behaviour
 - add submenu indicator
 - add scrolling to focused main menu list labels
+- remove reloading indicator for widgets
 
 Includes.xml:
 - add player icon to now playing dialog
@@ -309,6 +311,9 @@ Includes.xml:
 
 Includes_Widgets.xml:
 - replace colors by new color variables
+- always show widget headings (when focused and non-focused)
+- add reload indicator to widget headings
+- change widget heading animations to match widget animations
 
 LoginScreen.xml:
 - replace colors by new color variables
@@ -415,6 +420,9 @@ script.skinshortcuts-static-xml:
 - hack game widget to show proper widget title
 - replace colors by new color variables
 - change standard TV shows widget to "Random TV shows"
+- adjust game widget heading to match new widget headings
+- remove special non-focused heading
+- add location to weather widget heading
 
 script-skinshortcuts.xml:
 - replace colors by new color variables
@@ -583,6 +591,8 @@ overrides.xml:
 
 template.xml:
 - replace colors by new color variables
+- remove special non-focused heading
+- add location to weather widget heading
 
 addon.xml:
 - bump version to 18.0.0
\ No newline at end of file
diff --git a/addon.xml b/addon.xml
index a7a189c..b71ba68 100644
--- a/addon.xml
+++ b/addon.xml
@@ -14,7 +14,7 @@
 		<platform>all</platform>
 		<summary lang="en">The default skin for OSMC</summary>
 		<description lang="en">Original skin: Andy Morton[CR]Original design: Simon Brunton[CR]Skinner: Julian Michel</description>
-		<news>OSMC Kodi v18 update[CR][CR][B]New[/B][CR]- add new v18 subtitle settings OSD during fullscreen video playback[CR]- add new games section to match v18 requirements[CR]- add games section[CR]- add new resolution select button/dialog in video player[CR]- add player icon to now playing dialog[CR]- add new dependency button in addon info dialog to match v18 requirements[CR]- new color options (color sets, background gradients, adjustable opacity)[CR]- add PVR channel number input dialog[CR]- add PVR timeshift status dialog[CR]- add welcome dialog on non-OSMC devices[CR]- add director button to video info dialog[CR]- add new views (wide low, wall small, wall low, wall info, list info)[CR]- add new sub-menu indicator icon[CR]- add "Random TV shows" widget as new standard for TV shows home menu entry[CR]- add new dialog navigation indicators[CR][CR][B]Improved[/B][CR]- adjust syntax, values, labels and infobools to match v18 requirements[CR]- adjust PVR section to match v18 requirements[CR]- highlighting color now adjusts according to text color[CR]- streamline OSD animations[CR]- add missing adjustable plot fonts[CR]- let favourites dialog behave like a normal window[CR]- add file path and name to refresh button in video info dialog[CR]- add song/album year to music player[CR]- add wide list as music view[CR]- add music OSD album art size switch[CR][CR][B]Fixed[/B][CR]- show proper game widget title when not using skinshortcuts script[CR]- highlighting is now more consistent[CR]- fix current position/time remaining and current time/end time for PVR playback[CR]- hide deprecated previous/next channel buttons in PVR playback OSD[CR]- fix background of subtitle settings window[CR]- fix layout of PVR playback dialogs[CR]- fix dialog list navigation</news>
+		<news>OSMC Kodi v18 update[CR][CR][B]New[/B][CR]- add new v18 subtitle settings OSD during fullscreen video playback[CR]- add new games section to match v18 requirements[CR]- add games section[CR]- add new resolution select button/dialog in video player[CR]- add player icon to now playing dialog[CR]- add new dependency button in addon info dialog to match v18 requirements[CR]- new color options (color sets, background gradients, adjustable opacity)[CR]- add PVR channel number input dialog[CR]- add PVR timeshift status dialog[CR]- add welcome dialog on non-OSMC devices[CR]- add director button to video info dialog[CR]- add new views (wide low, wall small, wall low, wall info, list info)[CR]- add new sub-menu indicator icon[CR]- add "Random TV shows" widget as new standard for TV shows home menu entry[CR]- add new dialog navigation indicators[CR][CR][B]Improved[/B][CR]- adjust syntax, values, labels and infobools to match v18 requirements[CR]- adjust PVR section to match v18 requirements[CR]- highlighting color now adjusts according to text color[CR]- streamline OSD animations[CR]- add missing adjustable plot fonts[CR]- let favourites dialog behave like a normal window[CR]- add file path and name to refresh button in video info dialog[CR]- add song/album year to music player[CR]- add wide list as music view[CR]- add music OSD album art size switch[CR]- adjust widget headings to always show and adjust animations to match widget animations[CR][CR][B]Fixed[/B][CR]- show proper game widget title when not using skinshortcuts script[CR]- highlighting is now more consistent[CR]- fix current position/time remaining and current time/end time for PVR playback[CR]- hide deprecated previous/next channel buttons in PVR playback OSD[CR]- fix background of subtitle settings window[CR]- fix layout of PVR playback dialogs[CR]- fix dialog list navigation</news>
 	</extension>
 	<assets>
 		<icon>icon.png</icon>
diff --git a/shortcuts/template.xml b/shortcuts/template.xml
index 9fc3a5d..64bb20b 100644
--- a/shortcuts/template.xml
+++ b/shortcuts/template.xml
@@ -626,14 +626,12 @@
 		<property name="isWeather">False</property>
 		<variables>			
 			<variable name="widgetDetails">
-				<!-- Not selected -->
-				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + String.IsEqual(Container(1000$SKINSHORTCUTS[auto-rootID]).ListItem.Property(widgetID),$SKINSHORTCUTS[auto-rootID]-$SKINSHORTCUTS[id]) + !Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id])">[COLOR $VAR[TextColor2]]$INFO[Container(1000$SKINSHORTCUTS[auto-rootID]).ListItem.Label][/COLOR]</value>
 
 				<!-- Selected, not loaded -->
 				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + Integer.IsEqual(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).NumItems,0)">$LOCALIZE[20186]...</value>
 
 				<!-- Weather widget -->
-				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + $SKINSHORTCUTS[isWeather]">[COLOR $VAR[TextColor1]]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Property(outlook)][/COLOR]</value>
+				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + $SKINSHORTCUTS[isWeather]">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Property(outlook)][/COLOR]</value>
 				<!-- TVShow/Season Widget -->
 				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + !String.IsEmpty(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
 				<!-- Episodes Widget -->
