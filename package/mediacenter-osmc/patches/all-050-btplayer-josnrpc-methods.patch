From 464b19e568447d2273476c9d898e2140de5c4b1c Mon Sep 17 00:00:00 2001
From: Gerald Barker <gezb@users.noreply.github.com>
Date: Fri, 4 Dec 2015 17:07:24 +0000
Subject: [PATCH 2/3] BTPlayer JSONRPC methods

---
 .../interfaces/json-rpc/JSONServiceDescription.cpp |   6 +-
 xbmc/interfaces/json-rpc/Makefile                  |   1 +
 xbmc/interfaces/json-rpc/OSMCOperations.cpp        | 107 +++++++++++++++++++++
 xbmc/interfaces/json-rpc/OSMCOperations.h          |  37 +++++++
 xbmc/interfaces/json-rpc/schema/methods.json       |  20 ++++
 xbmc/interfaces/json-rpc/schema/version.txt        |   2 +-
 6 files changed, 171 insertions(+), 2 deletions(-)
 create mode 100644 xbmc/interfaces/json-rpc/OSMCOperations.cpp
 create mode 100644 xbmc/interfaces/json-rpc/OSMCOperations.h

diff --git a/xbmc/interfaces/json-rpc/JSONServiceDescription.cpp b/xbmc/interfaces/json-rpc/JSONServiceDescription.cpp
index 57d30df..cc7ab74 100644
--- a/xbmc/interfaces/json-rpc/JSONServiceDescription.cpp
+++ b/xbmc/interfaces/json-rpc/JSONServiceDescription.cpp
@@ -40,6 +40,7 @@
 #include "FavouritesOperations.h"
 #include "TextureOperations.h"
 #include "SettingsOperations.h"
+#include "OSMCOperations.h"
 
 using namespace JSONRPC;
 
@@ -233,7 +234,10 @@ JsonRpcMethodMap CJSONServiceDescription::m_methodMaps[] = {
 
 // XBMC operations
   { "XBMC.GetInfoLabels",                           CXBMCOperations::GetInfoLabels },
-  { "XBMC.GetInfoBooleans",                         CXBMCOperations::GetInfoBooleans }
+  { "XBMC.GetInfoBooleans",                         CXBMCOperations::GetInfoBooleans },
+// OSMC operations
+  { "OSMC.StartBTPlayer",                           COSMCOperations::StartBTPlayer },
+  { "OSMC.StopBTPlayer",                           COSMCOperations::StopBTPlayer }
 };
 
 JSONSchemaTypeDefinition::JSONSchemaTypeDefinition()
diff --git a/xbmc/interfaces/json-rpc/Makefile b/xbmc/interfaces/json-rpc/Makefile
index 70746d7..9e1d07c 100644
--- a/xbmc/interfaces/json-rpc/Makefile
+++ b/xbmc/interfaces/json-rpc/Makefile
@@ -17,6 +17,7 @@ SRCS=AddonsOperations.cpp \
      TextureOperations.cpp \
      VideoLibrary.cpp \
      XBMCOperations.cpp \
+     OSMCOperations.cpp \
 
 LIB=json-rpc.a
 
diff --git a/xbmc/interfaces/json-rpc/OSMCOperations.cpp b/xbmc/interfaces/json-rpc/OSMCOperations.cpp
new file mode 100644
index 0000000..d5c59bc
--- /dev/null
+++ b/xbmc/interfaces/json-rpc/OSMCOperations.cpp
@@ -0,0 +1,107 @@
+/*
+ *      Copyright (C) 2005-2013 Team XBMC
+ *      http://xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "OSMCOperations.h"
+#include "Application.h"
+#include "messaging/ApplicationMessenger.h"
+#include "FileItem.h"
+#include "cores/IPlayer.h"
+#include "cores/playercorefactory/PlayerCoreConfig.h"
+#include "cores/playercorefactory/PlayerCoreFactory.h"
+#include "utils/Variant.h"
+#include "URL.h"
+
+using namespace JSONRPC;
+using namespace KODI::MESSAGING;
+
+JSONRPC_STATUS COSMCOperations::StartBTPlayer(const std::string &method, ITransportLayer *transport, IClient *client, const CVariant &parameterObject, CVariant &result)
+{
+
+  CVariant optionArtist = parameterObject["artist"];
+  CVariant optionTitle = parameterObject["track"];
+  CVariant optionAlbum = parameterObject["album"];
+
+  CFileItemList list;
+  CFileItemPtr item;
+  CURL url("/tmp/dummyA2dpFile");
+  item.reset(new CFileItem(url.Get(), false));
+  item->GetMusicInfoTag()->SetArtist(optionArtist.asString());
+  item->GetMusicInfoTag()->SetTitle(optionTitle.asString());
+  item->GetMusicInfoTag()->SetAlbum(optionAlbum.asString());
+  item->GetMusicInfoTag()->SetLoaded(true);
+  list.Add(item);
+
+  // Find the "playerid"
+  PLAYERCOREID btPlayerId = 0;
+  VECPLAYERCORES players;
+  CPlayerCoreFactory::GetInstance().GetPlayers(players, true, false);
+  for (VECPLAYERCORES::const_iterator itPlayer = players.begin(); itPlayer != players.end(); ++itPlayer)
+  {
+    PLAYERCOREID playerId = *itPlayer;
+    const CPlayerCoreConfig* playerConfig = CPlayerCoreFactory::GetInstance().GetPlayerConfig(playerId);
+    if (playerConfig == NULL)
+      continue;
+
+    if (playerConfig->GetType() == EPC_BTPLAYER)
+    {
+      btPlayerId = playerId;
+    }
+  }
+  // check if the there's actually a player with the given player ID
+  if (CPlayerCoreFactory::GetInstance().GetPlayerConfig(btPlayerId) == NULL)
+    return InvalidParams;
+
+  // set the next player to be used
+  g_application.m_eForcedNextPlayer = btPlayerId;
+  auto l = new CFileItemList(); //don't delete
+  l->Copy(list);
+
+  CApplicationMessenger::GetInstance().SendMsg(TMSG_MEDIA_PLAY, -1, -1, static_cast<void*>(l));
+  return ACK;
+  }
+
+JSONRPC_STATUS COSMCOperations::StopBTPlayer(const std::string &method, ITransportLayer *transport, IClient *client, const CVariant &parameterObject, CVariant &result)
+{
+
+  // Find the "playerid"
+  PLAYERCOREID btPlayerId = 0;
+  VECPLAYERCORES players;
+  CPlayerCoreFactory::GetInstance().GetPlayers(players, true, false);
+  for (VECPLAYERCORES::const_iterator itPlayer = players.begin(); itPlayer != players.end(); ++itPlayer)
+  {
+    PLAYERCOREID playerId = *itPlayer;
+    const CPlayerCoreConfig* playerConfig = CPlayerCoreFactory::GetInstance().GetPlayerConfig(playerId);
+    if (playerConfig == NULL)
+      continue;
+
+    if (playerConfig->GetType() == EPC_BTPLAYER)
+    {
+      btPlayerId = playerId;
+    }
+  }
+  // check if the there's actually a player with the given player ID
+  if (CPlayerCoreFactory::GetInstance().GetPlayerConfig(btPlayerId) == NULL)
+    return InvalidParams;
+
+  CApplicationMessenger::GetInstance().SendMsg(TMSG_MEDIA_STOP, static_cast<int>(parameterObject["playerid"].asInteger()));
+
+  return ACK;
+ }
+
diff --git a/xbmc/interfaces/json-rpc/OSMCOperations.h b/xbmc/interfaces/json-rpc/OSMCOperations.h
new file mode 100644
index 0000000..7b5d03e
--- /dev/null
+++ b/xbmc/interfaces/json-rpc/OSMCOperations.h
@@ -0,0 +1,37 @@
+#pragma once
+/*
+ *      Copyright (C) 2005-2013 Team XBMC
+ *      http://xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "JSONRPC.h"
+#include "FileItemHandler.h"
+#include "music/tags/MusicInfoTag.h"
+
+namespace JSONRPC
+{
+  class COSMCOperations : CFileItemHandler
+  {
+
+  public:
+    static JSONRPC_STATUS StartBTPlayer(const std::string &method, ITransportLayer *transport, IClient *client, const CVariant &parameterObject, CVariant &result);
+    static JSONRPC_STATUS StopBTPlayer(const std::string &method, ITransportLayer *transport, IClient *client, const CVariant &parameterObject, CVariant &result);
+  protected:
+    MUSIC_INFO::CMusicInfoTag m_tag;
+  };
+}
diff --git a/xbmc/interfaces/json-rpc/schema/methods.json b/xbmc/interfaces/json-rpc/schema/methods.json
index 6aae3d8..10b1748 100644
--- a/xbmc/interfaces/json-rpc/schema/methods.json
+++ b/xbmc/interfaces/json-rpc/schema/methods.json
@@ -2390,4 +2390,24 @@
     ],
     "returns": "string"
   }
+  "OSMC.StartBTPlayer": {
+    "type": "method",
+    "description": "Starts the BTPlayer passing in the track info",
+    "transport": "Response",
+    "permission": "ControlPlayback",
+      "params": [
+	  { "name": "artist", "type": "string", "required": true },
+	  { "name": "track",  "type": "string", "required": true },
+	  { "name": "album",  "type": "string", "required": true }
+      ],
+    "returns": "string"
+  },
+    "OSMC.StopBTPlayer": {
+    "type": "method",
+    "description": "Stop the BTPlayer",
+    "transport": "Response",
+    "permission": "ControlPlayback",
+    "params": [],
+    "returns": "string"
+  }
 }
diff --git a/xbmc/interfaces/json-rpc/schema/version.txt b/xbmc/interfaces/json-rpc/schema/version.txt
index b02bea9..4b3b8be 100644
--- a/xbmc/interfaces/json-rpc/schema/version.txt
+++ b/xbmc/interfaces/json-rpc/schema/version.txt
@@ -1 +1 @@
-6.32.3
+6.32.4
-- 
2.5.0

