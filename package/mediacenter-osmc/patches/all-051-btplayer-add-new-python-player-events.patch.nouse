From 3d3df5696299cc6dcc1f9a608819caefcfa8c835 Mon Sep 17 00:00:00 2001
From: Gerald Barker <gezbgit config --global user.email>
Date: Sat, 13 Feb 2016 17:35:52 +0000
Subject: [PATCH 3/3] [BTPlayer] add new Player python events onNextItem and
 onPrevItem

---
 xbmc/Application.cpp                | 27 +++++++++++++++++++++++++++
 xbmc/Application.h                  |  2 ++
 xbmc/cores/IPlayerCallback.h        |  3 +++
 xbmc/interfaces/legacy/Player.cpp   | 26 ++++++++++++++++++++++++--
 xbmc/interfaces/legacy/Player.h     | 20 +++++++++++++++++++-
 xbmc/interfaces/python/XBPython.cpp | 24 ++++++++++++++++++++++++
 xbmc/interfaces/python/XBPython.h   |  3 +++
 7 files changed, 102 insertions(+), 3 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 0e3d6da..6979628 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -2255,6 +2255,19 @@ bool CApplication::OnAction(const CAction &action)
     return true;
   }
 
+  // fire python events if needed
+  if (m_pPlayer->IsPlaying())
+  {
+      if (action.GetID() == ACTION_NEXT_ITEM)
+      {
+          OnNextItem();
+      }
+      if (action.GetID() == ACTION_PREV_ITEM)
+      {
+          OnPrevItem();
+      }
+  }
+
   // Now check with the playlist player if action can be handled.
   // In case of the action PREV_ITEM, we only allow the playlist player to take it if we're less than 3 seconds into playback.
   if (!(action.GetID() == ACTION_PREV_ITEM && m_pPlayer->CanSeek() && GetTime() > 3) )
@@ -3777,6 +3790,20 @@ void CApplication::OnPlayBackSeekChapter(int iChapter)
 #endif
 }
 
+void CApplication::OnNextItem()
+{
+#ifdef HAS_PYTHON
+	g_pythonParser.OnNextItem();
+#endif
+}
+
+void CApplication::OnPrevItem()
+{
+#ifdef HAS_PYTHON
+	g_pythonParser.OnPrevItem();
+#endif
+}
+
 bool CApplication::IsPlayingFullScreenVideo() const
 {
   return m_pPlayer->IsPlayingVideo() && g_graphicsContext.IsFullScreenVideo();
diff --git a/xbmc/Application.h b/xbmc/Application.h
index d7e5eee..99e2cc5 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -173,6 +173,8 @@ public:
   virtual void OnPlayBackSeek(int iTime, int seekOffset) override;
   virtual void OnPlayBackSeekChapter(int iChapter) override;
   virtual void OnPlayBackSpeedChanged(int iSpeed) override;
+  virtual void OnNextItem() override;
+  virtual void OnPrevItem() override;
 
   virtual int  GetMessageMask() override;
   virtual void OnApplicationMessage(KODI::MESSAGING::ThreadMessage* pMsg) override;
diff --git a/xbmc/cores/IPlayerCallback.h b/xbmc/cores/IPlayerCallback.h
index a89d8b7..fbe14dc 100644
--- a/xbmc/cores/IPlayerCallback.h
+++ b/xbmc/cores/IPlayerCallback.h
@@ -33,4 +33,7 @@ public:
   virtual void OnPlayBackSeek(int iTime, int seekOffset) {};
   virtual void OnPlayBackSeekChapter(int iChapter) {};
   virtual void OnPlayBackSpeedChanged(int iSpeed) {};
+  virtual void OnNextItem() {};
+  virtual void OnPrevItem() {};
+
 };
diff --git a/xbmc/interfaces/legacy/Player.cpp b/xbmc/interfaces/legacy/Player.cpp
index 6793815..9993901 100644
--- a/xbmc/interfaces/legacy/Player.cpp
+++ b/xbmc/interfaces/legacy/Player.cpp
@@ -233,9 +233,21 @@ namespace XBMCAddon
     }
 
     void Player::OnQueueNextItem()
-    { 
+    {
+        XBMC_TRACE;
+        invokeCallback(new CallbackFunction<Player>(this,&Player::onQueueNextItem));
+    }
+
+    void Player::OnNextItem()
+    {
       XBMC_TRACE;
-      invokeCallback(new CallbackFunction<Player>(this,&Player::onQueueNextItem));
+      invokeCallback(new CallbackFunction<Player>(this,&Player::onNextItem));
+    }
+
+    void Player::OnPrevItem()
+    {
+        XBMC_TRACE;
+        invokeCallback(new CallbackFunction<Player>(this,&Player::onPrevItem));
     }
 
     void Player::OnPlayBackSpeedChanged(int speed)
@@ -286,6 +298,16 @@ namespace XBMCAddon
       XBMC_TRACE;
     }
 
+    void Player::onNextItem()
+    {
+      XBMC_TRACE;
+    }
+
+    void Player::onPrevItem()
+    {
+      XBMC_TRACE;
+    }
+
     void Player::onPlayBackSpeedChanged(int speed)
     { 
       XBMC_TRACE;
diff --git a/xbmc/interfaces/legacy/Player.h b/xbmc/interfaces/legacy/Player.h
index cae1f48..f13c6a9 100644
--- a/xbmc/interfaces/legacy/Player.h
+++ b/xbmc/interfaces/legacy/Player.h
@@ -65,7 +65,7 @@ namespace XBMCAddon
 
     public:
 #ifndef SWIG
-	  static PlayParameter defaultPlayParameter;
+         static PlayParameter defaultPlayParameter;
 #endif
 
       // Construct a Player proxying the given generated binding. The 
@@ -171,6 +171,22 @@ namespace XBMCAddon
       virtual void onQueueNextItem();
 
       /**
+      * onNextItem() -- onNextItem method.
+      *
+      * Will be called when a user selects Next track
+      */
+      // Player_OnNextItem
+      virtual void onNextItem();
+
+      /**
+      * onPrevItem() -- onPrevItem method.
+      *
+      * Will be called when a user selects Previous track
+      */
+      // Player_OnPrevItem
+      virtual void onPrevItem();
+
+      /**
        * onPlayBackSpeedChanged(speed) -- onPlayBackSpeedChanged method.
        * 
        * speed          : integer - current speed of player.
@@ -355,6 +371,8 @@ namespace XBMCAddon
       SWIGHIDDENVIRTUAL void    OnPlayBackSpeedChanged(int iSpeed);
       SWIGHIDDENVIRTUAL void    OnPlayBackSeek(int iTime, int seekOffset);
       SWIGHIDDENVIRTUAL void    OnPlayBackSeekChapter(int iChapter);
+      SWIGHIDDENVIRTUAL void    OnNextItem();
+      SWIGHIDDENVIRTUAL void    OnPrevItem();
 #endif
 
     protected:
diff --git a/xbmc/interfaces/python/XBPython.cpp b/xbmc/interfaces/python/XBPython.cpp
index b1f8b74..1cdb8c5 100644
--- a/xbmc/interfaces/python/XBPython.cpp
+++ b/xbmc/interfaces/python/XBPython.cpp
@@ -229,6 +229,30 @@ void XBPython::OnQueueNextItem()
   }
 }
 
+// message all registered callbacks that next item has been selected
+void XBPython::OnNextItem()
+{
+	XBMC_TRACE;
+	LOCK_AND_COPY(std::vector<PVOID>, tmp, m_vecPlayerCallbackList);
+	for (PlayerCallbackList::iterator it = tmp.begin(); (it != tmp.end()); ++it)
+	{
+		if (CHECK_FOR_ENTRY(m_vecPlayerCallbackList, (*it)))
+			((IPlayerCallback*)(*it))->OnNextItem();
+	}
+}
+
+// message all registered callbacks that prev item has been selected
+void XBPython::OnPrevItem()
+{
+	XBMC_TRACE;
+	LOCK_AND_COPY(std::vector<PVOID>, tmp, m_vecPlayerCallbackList);
+	for (PlayerCallbackList::iterator it = tmp.begin(); (it != tmp.end()); ++it)
+	{
+		if (CHECK_FOR_ENTRY(m_vecPlayerCallbackList, (*it)))
+			((IPlayerCallback*)(*it))->OnPrevItem();
+	}
+}
+
 void XBPython::RegisterPythonPlayerCallBack(IPlayerCallback* pCallback)
 {
   XBMC_TRACE;
diff --git a/xbmc/interfaces/python/XBPython.h b/xbmc/interfaces/python/XBPython.h
index d54a762..2f26caa 100644
--- a/xbmc/interfaces/python/XBPython.h
+++ b/xbmc/interfaces/python/XBPython.h
@@ -74,6 +74,9 @@ public:
   virtual void OnPlayBackSeek(int iTime, int seekOffset);
   virtual void OnPlayBackSeekChapter(int iChapter);
   virtual void OnQueueNextItem();
+  virtual void OnNextItem();
+  virtual void OnPrevItem();
+
 
   virtual void Announce(ANNOUNCEMENT::AnnouncementFlag flag, const char *sender, const char *message, const CVariant &data);
   void RegisterPythonPlayerCallBack(IPlayerCallback* pCallback);
-- 
2.1.4

