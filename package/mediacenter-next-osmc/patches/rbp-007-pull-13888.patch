From 0997291f7157284394ddb34521f7ee8c9265fa1f Mon Sep 17 00:00:00 2001
From: Max Kellermann <max.kellermann@gmail.com>
Date: Sat, 12 May 2018 12:10:20 +0200
Subject: [PATCH 1/9] guilib/GUIMessage: make the class "final"

Nobody derives from this class.  This removes some overhead and
clarifies the role of this class.
---
 xbmc/guilib/GUIMessage.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/xbmc/guilib/GUIMessage.h b/xbmc/guilib/GUIMessage.h
index 3146de9ddf9e..31346e1fc28c 100644
--- a/xbmc/guilib/GUIMessage.h
+++ b/xbmc/guilib/GUIMessage.h
@@ -358,14 +358,14 @@ class CFileItemList;
  \ingroup winmsg
  \brief
  */
-class CGUIMessage
+class CGUIMessage final
 {
 public:
   CGUIMessage(int dwMsg, int senderID, int controlID, int param1 = 0, int param2 = 0);
   CGUIMessage(int msg, int senderID, int controlID, int param1, int param2, CFileItemList* item);
   CGUIMessage(int msg, int senderID, int controlID, int param1, int param2, const CGUIListItemPtr &item);
   CGUIMessage(const CGUIMessage& msg);
-  virtual ~CGUIMessage(void);
+  ~CGUIMessage(void);
   CGUIMessage& operator = (const CGUIMessage& msg);
 
   int GetControlId() const ;

From 0b34f1de3a06605d68e76d3f080f966536635908 Mon Sep 17 00:00:00 2001
From: Max Kellermann <max.kellermann@gmail.com>
Date: Sat, 12 May 2018 12:12:30 +0200
Subject: [PATCH 2/9] guilib/GUIMessage: don't override copy
 constructor/operator

The implementations auto-generated by the C++ compiler are better than
that and less fragile.
---
 xbmc/guilib/GUIMessage.cpp | 23 ++---------------------
 1 file changed, 2 insertions(+), 21 deletions(-)

diff --git a/xbmc/guilib/GUIMessage.cpp b/xbmc/guilib/GUIMessage.cpp
index 72d072091099..8f23d809bf08 100644
--- a/xbmc/guilib/GUIMessage.cpp
+++ b/xbmc/guilib/GUIMessage.cpp
@@ -54,10 +54,7 @@ CGUIMessage::CGUIMessage(int msg, int senderID, int controlID, int param1, int p
   m_item = item;
 }
 
-CGUIMessage::CGUIMessage(const CGUIMessage& msg)
-{
-  *this = msg;
-}
+CGUIMessage::CGUIMessage(const CGUIMessage& msg) = default;
 
 CGUIMessage::~CGUIMessage(void) = default;
 
@@ -97,23 +94,7 @@ int CGUIMessage::GetSenderId() const
   return m_senderID;
 }
 
-
-CGUIMessage& CGUIMessage::operator = (const CGUIMessage& msg)
-{
-  if (this == &msg) return * this;
-
-  m_message = msg.m_message;
-  m_controlID = msg.m_controlID;
-  m_param1 = msg.m_param1;
-  m_param2 = msg.m_param2;
-  m_pointer = msg.m_pointer;
-  m_strLabel = msg.m_strLabel;
-  m_senderID = msg.m_senderID;
-  m_params = msg.m_params;
-  m_item = msg.m_item;
-  return *this;
-}
-
+CGUIMessage& CGUIMessage::operator = (const CGUIMessage& msg) = default;
 
 void CGUIMessage::SetParam1(int param1)
 {

From a8d32dd3ceb89c198c4a2e1ccd33aa276c99c336 Mon Sep 17 00:00:00 2001
From: Max Kellermann <max.kellermann@gmail.com>
Date: Mon, 15 Jan 2018 20:18:35 +0100
Subject: [PATCH 3/9] guilib/GUIBaseContainer: use std::list for
 CGUIListItemLayout

This reduces the overhead, because resizing the std::vector will
create lots of temporary CGUIListItemLayout copies.  A std::list never
needs to move its items.

These lists are very small, so the overhead for iterating it is
negligible, but copying a CGUIListItemLayout (which is not movable) is
very expensive because a rather large tree of objects needs to be
copied.
---
 xbmc/guilib/GUIBaseContainer.h | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/xbmc/guilib/GUIBaseContainer.h b/xbmc/guilib/GUIBaseContainer.h
index 39442d27dbe2..e271d764df4b 100644
--- a/xbmc/guilib/GUIBaseContainer.h
+++ b/xbmc/guilib/GUIBaseContainer.h
@@ -27,6 +27,7 @@
 
 #include <utility>
 #include <vector>
+#include <list>
 
 #include "GUIListItemLayout.h"
 #include "IGUIContainer.h"
@@ -153,8 +154,8 @@ class CGUIBaseContainer : public IGUIContainer
 
   int m_pageControl;
 
-  std::vector<CGUIListItemLayout> m_layouts;
-  std::vector<CGUIListItemLayout> m_focusedLayouts;
+  std::list<CGUIListItemLayout> m_layouts;
+  std::list<CGUIListItemLayout> m_focusedLayouts;
 
   CGUIListItemLayout *m_layout;
   CGUIListItemLayout *m_focusedLayout;

From b4ccf02f64579491c8f340d89e20ae1f51aa7b33 Mon Sep 17 00:00:00 2001
From: Max Kellermann <max.kellermann@gmail.com>
Date: Sat, 12 May 2018 11:53:00 +0200
Subject: [PATCH 4/9] guilib/GUIBaseContainer: forward-declare class
 CGUIListItemLayout

Reduce header dependencies and speed up the build.
---
 xbmc/guilib/GUIBaseContainer.cpp         | 3 +++
 xbmc/guilib/GUIBaseContainer.h           | 3 ++-
 xbmc/guilib/GUIFixedListContainer.cpp    | 1 +
 xbmc/guilib/GUIListContainer.cpp         | 1 +
 xbmc/guilib/GUIListContainer.h           | 3 +++
 xbmc/guilib/GUIPanelContainer.cpp        | 1 +
 xbmc/guilib/GUIWrappingListContainer.cpp | 1 +
 7 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/xbmc/guilib/GUIBaseContainer.cpp b/xbmc/guilib/GUIBaseContainer.cpp
index b9377931cc31..15ac6472d1d9 100644
--- a/xbmc/guilib/GUIBaseContainer.cpp
+++ b/xbmc/guilib/GUIBaseContainer.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIBaseContainer.h"
+#include "GUIListItemLayout.h"
 #include "ServiceBroker.h"
 #include "utils/CharsetConverter.h"
 #include "GUIInfoManager.h"
@@ -63,6 +64,8 @@ CGUIBaseContainer::CGUIBaseContainer(int parentID, int controlID, float posX, fl
   m_lastRenderTime = 0;
 }
 
+CGUIBaseContainer::CGUIBaseContainer(const CGUIBaseContainer &) = default;
+
 CGUIBaseContainer::~CGUIBaseContainer(void)
 {
   delete m_listProvider;
diff --git a/xbmc/guilib/GUIBaseContainer.h b/xbmc/guilib/GUIBaseContainer.h
index e271d764df4b..ef78fca4bbaf 100644
--- a/xbmc/guilib/GUIBaseContainer.h
+++ b/xbmc/guilib/GUIBaseContainer.h
@@ -29,7 +29,6 @@
 #include <vector>
 #include <list>
 
-#include "GUIListItemLayout.h"
 #include "IGUIContainer.h"
 #include "utils/Stopwatch.h"
 
@@ -40,11 +39,13 @@
 
 class IListProvider;
 class TiXmlNode;
+class CGUIListItemLayout;
 
 class CGUIBaseContainer : public IGUIContainer
 {
 public:
   CGUIBaseContainer(int parentID, int controlID, float posX, float posY, float width, float height, ORIENTATION orientation, const CScroller& scroller, int preloadItems);
+  CGUIBaseContainer(const CGUIBaseContainer &);
   ~CGUIBaseContainer(void) override;
 
   bool OnAction(const CAction &action) override;
diff --git a/xbmc/guilib/GUIFixedListContainer.cpp b/xbmc/guilib/GUIFixedListContainer.cpp
index 2c8b8864cdb3..b1342eca8450 100644
--- a/xbmc/guilib/GUIFixedListContainer.cpp
+++ b/xbmc/guilib/GUIFixedListContainer.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIFixedListContainer.h"
+#include "GUIListItemLayout.h"
 #include "input/Key.h"
 
 CGUIFixedListContainer::CGUIFixedListContainer(int parentID, int controlID, float posX, float posY, float width, float height, ORIENTATION orientation, const CScroller& scroller, int preloadItems, int fixedPosition, int cursorRange)
diff --git a/xbmc/guilib/GUIListContainer.cpp b/xbmc/guilib/GUIListContainer.cpp
index 55e29fa890d9..da9286930285 100644
--- a/xbmc/guilib/GUIListContainer.cpp
+++ b/xbmc/guilib/GUIListContainer.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIListContainer.h"
+#include "GUIListItemLayout.h"
 #include "input/Key.h"
 #include "utils/StringUtils.h"
 
diff --git a/xbmc/guilib/GUIListContainer.h b/xbmc/guilib/GUIListContainer.h
index ce8d17e7026b..19fbc58b7bf0 100644
--- a/xbmc/guilib/GUIListContainer.h
+++ b/xbmc/guilib/GUIListContainer.h
@@ -27,6 +27,9 @@
 
 #include "GUIBaseContainer.h"
 
+class CLabelInfo;
+class CTextureInfo;
+
 /*!
  \ingroup controls
  \brief
diff --git a/xbmc/guilib/GUIPanelContainer.cpp b/xbmc/guilib/GUIPanelContainer.cpp
index aa468cd4a673..8a3a176c5c0b 100644
--- a/xbmc/guilib/GUIPanelContainer.cpp
+++ b/xbmc/guilib/GUIPanelContainer.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIPanelContainer.h"
+#include "GUIListItemLayout.h"
 #include "guilib/guiinfo/GUIInfoLabels.h"
 #include "input/Key.h"
 #include "utils/StringUtils.h"
diff --git a/xbmc/guilib/GUIWrappingListContainer.cpp b/xbmc/guilib/GUIWrappingListContainer.cpp
index 4f7a1fd1e549..71148b5dab8f 100644
--- a/xbmc/guilib/GUIWrappingListContainer.cpp
+++ b/xbmc/guilib/GUIWrappingListContainer.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIWrappingListContainer.h"
+#include "GUIListItemLayout.h"
 #include "FileItem.h"
 #include "input/Key.h"
 

From 07c4c50bf9c3044adfc9a4a241c125d58803eba7 Mon Sep 17 00:00:00 2001
From: Max Kellermann <max.kellermann@gmail.com>
Date: Sat, 12 May 2018 11:29:39 +0200
Subject: [PATCH 5/9] guilib/GUIListItemLayout: make "final"

Nobody derives from this class, and most instances are managed in a
STL container, where polymorphism is impossible.  This removes some
overhead and clarifies the role of this class.
---
 xbmc/guilib/GUIListItemLayout.cpp | 2 --
 xbmc/guilib/GUIListItemLayout.h   | 5 ++---
 2 files changed, 2 insertions(+), 5 deletions(-)

diff --git a/xbmc/guilib/GUIListItemLayout.cpp b/xbmc/guilib/GUIListItemLayout.cpp
index 00e18bcff8de..eb2a214ede74 100644
--- a/xbmc/guilib/GUIListItemLayout.cpp
+++ b/xbmc/guilib/GUIListItemLayout.cpp
@@ -49,8 +49,6 @@ CGUIListItemLayout::CGUIListItemLayout(const CGUIListItemLayout &from, CGUIContr
   m_group.SetParentControl(control);
 }
 
-CGUIListItemLayout::~CGUIListItemLayout() = default;
-
 bool CGUIListItemLayout::IsAnimating(ANIMATION_TYPE animType)
 {
   return m_group.IsAnimating(animType);
diff --git a/xbmc/guilib/GUIListItemLayout.h b/xbmc/guilib/GUIListItemLayout.h
index a8991b1817f6..766776fec40d 100644
--- a/xbmc/guilib/GUIListItemLayout.h
+++ b/xbmc/guilib/GUIListItemLayout.h
@@ -28,12 +28,11 @@ class CGUIListItem;
 class CFileItem;
 class CLabelInfo;
 
-class CGUIListItemLayout
+class CGUIListItemLayout final
 {
 public:
   CGUIListItemLayout();
   CGUIListItemLayout(const CGUIListItemLayout &from, CGUIControl *control);
-  virtual ~CGUIListItemLayout();
   void LoadLayout(TiXmlElement *layout, int context, bool focused, float maxWidth, float maxHeight);
   void Process(CGUIListItem *item, int parentID, unsigned int currentTime, CDirtyRegionList &dirtyregions);
   void Render(CGUIListItem *item, int parentID);
@@ -57,7 +56,7 @@ class CGUIListItemLayout
   bool MoveRight();
 
 #ifdef _DEBUG
-  virtual void DumpTextureUse();
+  void DumpTextureUse();
 #endif
   bool CheckCondition();
 protected:

From 51ee9ab687383faaf0a13f1fb3d4cad1caa0a4af Mon Sep 17 00:00:00 2001
From: Max Kellermann <max.kellermann@gmail.com>
Date: Sat, 12 May 2018 11:33:25 +0200
Subject: [PATCH 6/9] guilib/GUIListGroup: make class "final"

Eliminate some overhead because this is a leaf class.
---
 xbmc/guilib/GUIListGroup.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/guilib/GUIListGroup.h b/xbmc/guilib/GUIListGroup.h
index 57070d14621a..5829e38e1ede 100644
--- a/xbmc/guilib/GUIListGroup.h
+++ b/xbmc/guilib/GUIListGroup.h
@@ -31,7 +31,7 @@
  \ingroup controls
  \brief a group of controls within a list/panel container
  */
-class CGUIListGroup : public CGUIControlGroup
+class CGUIListGroup final : public CGUIControlGroup
 {
 public:
   CGUIListGroup(int parentID, int controlID, float posX, float posY, float width, float height);

From 85a2727ffb25ab2d516849b238343bb641c86711 Mon Sep 17 00:00:00 2001
From: Max Kellermann <max.kellermann@gmail.com>
Date: Sat, 12 May 2018 12:22:46 +0200
Subject: [PATCH 7/9] guilib/GUIControl: use forward declarations

Reduce header dependencies and speed up the build.
---
 xbmc/dialogs/GUIDialogButtonMenu.cpp                     | 1 +
 xbmc/dialogs/GUIDialogExtendedProgressBar.cpp            | 1 +
 xbmc/dialogs/GUIDialogKaiToast.cpp                       | 1 +
 xbmc/dialogs/GUIDialogSelect.cpp                         | 1 +
 xbmc/dialogs/GUIDialogSubMenu.cpp                        | 1 +
 xbmc/games/controllers/windows/GUIControllerList.cpp     | 1 +
 xbmc/guilib/GUIBaseContainer.cpp                         | 1 +
 xbmc/guilib/GUIBaseContainer.h                           | 1 +
 xbmc/guilib/GUIButtonControl.h                           | 1 +
 xbmc/guilib/GUIControl.cpp                               | 3 +++
 xbmc/guilib/GUIControl.h                                 | 5 +++--
 xbmc/guilib/GUIControlGroup.cpp                          | 1 +
 xbmc/guilib/GUIControlGroupList.cpp                      | 2 ++
 xbmc/guilib/GUIFadeLabelControl.cpp                      | 1 +
 xbmc/guilib/GUIImage.cpp                                 | 1 +
 xbmc/guilib/GUILabelControl.cpp                          | 1 +
 xbmc/guilib/GUIListContainer.cpp                         | 1 +
 xbmc/guilib/GUIMoverControl.cpp                          | 1 +
 xbmc/guilib/GUIMultiImage.cpp                            | 1 +
 xbmc/guilib/GUIPanelContainer.cpp                        | 1 +
 xbmc/guilib/GUIProgressControl.cpp                       | 1 +
 xbmc/guilib/GUIResizeControl.cpp                         | 1 +
 xbmc/guilib/GUIScrollBarControl.cpp                      | 1 +
 xbmc/guilib/GUISpinControl.cpp                           | 1 +
 xbmc/guilib/GUITextBox.cpp                               | 1 +
 xbmc/guilib/GUIWindow.h                                  | 1 +
 xbmc/guilib/GUIWrappingListContainer.cpp                 | 1 +
 xbmc/network/GUIDialogAccessPoints.cpp                   | 1 +
 xbmc/peripherals/dialogs/GUIDialogPeripheralSettings.cpp | 1 +
 xbmc/profiles/windows/GUIWindowSettingsProfile.cpp       | 1 +
 xbmc/profiles/windows/GUIWindowSettingsProfile.h         | 2 ++
 xbmc/pvr/dialogs/GUIDialogPVRClientPriorities.cpp        | 1 +
 xbmc/pvr/dialogs/GUIDialogPVRGuideSearch.cpp             | 1 +
 xbmc/pvr/dialogs/GUIDialogPVRRecordingInfo.cpp           | 1 +
 xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.cpp       | 1 +
 xbmc/pvr/windows/GUIEPGGridContainer.cpp                 | 2 ++
 xbmc/pvr/windows/GUIWindowPVRTimersBase.cpp              | 1 +
 xbmc/settings/windows/GUIWindowTestPattern.cpp           | 1 +
 xbmc/windows/GUIWindowSystemInfo.cpp                     | 1 +
 39 files changed, 46 insertions(+), 2 deletions(-)

diff --git a/xbmc/dialogs/GUIDialogButtonMenu.cpp b/xbmc/dialogs/GUIDialogButtonMenu.cpp
index 26f1ad447b47..f288b90546ae 100644
--- a/xbmc/dialogs/GUIDialogButtonMenu.cpp
+++ b/xbmc/dialogs/GUIDialogButtonMenu.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIDialogButtonMenu.h"
+#include "guilib/GUIMessage.h"
 
 #define CONTROL_BUTTON_LABEL  3100
 
diff --git a/xbmc/dialogs/GUIDialogExtendedProgressBar.cpp b/xbmc/dialogs/GUIDialogExtendedProgressBar.cpp
index b320e42dfdd1..2cc37222a068 100644
--- a/xbmc/dialogs/GUIDialogExtendedProgressBar.cpp
+++ b/xbmc/dialogs/GUIDialogExtendedProgressBar.cpp
@@ -20,6 +20,7 @@
 
 #include <cmath>
 #include "GUIDialogExtendedProgressBar.h"
+#include "guilib/GUIMessage.h"
 #include "guilib/GUIProgressControl.h"
 #include "threads/SingleLock.h"
 #include "threads/SystemClock.h"
diff --git a/xbmc/dialogs/GUIDialogKaiToast.cpp b/xbmc/dialogs/GUIDialogKaiToast.cpp
index 8f923c1d0062..bbc2a48426dd 100644
--- a/xbmc/dialogs/GUIDialogKaiToast.cpp
+++ b/xbmc/dialogs/GUIDialogKaiToast.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIDialogKaiToast.h"
+#include "guilib/GUIMessage.h"
 #include "peripherals/Peripherals.h"
 #include "threads/SingleLock.h"
 #include "utils/TimeUtils.h"
diff --git a/xbmc/dialogs/GUIDialogSelect.cpp b/xbmc/dialogs/GUIDialogSelect.cpp
index acee1d0c344c..54ed00862be7 100644
--- a/xbmc/dialogs/GUIDialogSelect.cpp
+++ b/xbmc/dialogs/GUIDialogSelect.cpp
@@ -21,6 +21,7 @@
 #include "GUIDialogSelect.h"
 #include "FileItem.h"
 #include "input/Key.h"
+#include "guilib/GUIMessage.h"
 #include "guilib/LocalizeStrings.h"
 #include "utils/StringUtils.h"
 
diff --git a/xbmc/dialogs/GUIDialogSubMenu.cpp b/xbmc/dialogs/GUIDialogSubMenu.cpp
index 0961cc4e37a0..b944ab59e6a6 100644
--- a/xbmc/dialogs/GUIDialogSubMenu.cpp
+++ b/xbmc/dialogs/GUIDialogSubMenu.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIDialogSubMenu.h"
+#include "guilib/GUIMessage.h"
 
 CGUIDialogSubMenu::CGUIDialogSubMenu(int id, const std::string &xmlFile)
     : CGUIDialog(id, xmlFile.c_str())
diff --git a/xbmc/games/controllers/windows/GUIControllerList.cpp b/xbmc/games/controllers/windows/GUIControllerList.cpp
index 9b4497e92977..59a803bd7990 100644
--- a/xbmc/games/controllers/windows/GUIControllerList.cpp
+++ b/xbmc/games/controllers/windows/GUIControllerList.cpp
@@ -36,6 +36,7 @@
 #include "games/controllers/guicontrols/GUIControllerButton.h"
 #include "games/controllers/guicontrols/GUIGameController.h"
 #include "games/GameServices.h"
+#include "guilib/GUIMessage.h"
 #include "guilib/GUIButtonControl.h"
 #include "guilib/GUIControlGroupList.h"
 #include "guilib/GUIWindow.h"
diff --git a/xbmc/guilib/GUIBaseContainer.cpp b/xbmc/guilib/GUIBaseContainer.cpp
index 15ac6472d1d9..a7adf48ffbf7 100644
--- a/xbmc/guilib/GUIBaseContainer.cpp
+++ b/xbmc/guilib/GUIBaseContainer.cpp
@@ -20,6 +20,7 @@
 
 #include "GUIBaseContainer.h"
 #include "GUIListItemLayout.h"
+#include "GUIMessage.h"
 #include "ServiceBroker.h"
 #include "utils/CharsetConverter.h"
 #include "GUIInfoManager.h"
diff --git a/xbmc/guilib/GUIBaseContainer.h b/xbmc/guilib/GUIBaseContainer.h
index ef78fca4bbaf..2d297be9ea03 100644
--- a/xbmc/guilib/GUIBaseContainer.h
+++ b/xbmc/guilib/GUIBaseContainer.h
@@ -30,6 +30,7 @@
 #include <list>
 
 #include "IGUIContainer.h"
+#include "GUIAction.h"
 #include "utils/Stopwatch.h"
 
 /*!
diff --git a/xbmc/guilib/GUIButtonControl.h b/xbmc/guilib/GUIButtonControl.h
index d530e9e1368e..30c068226ff1 100644
--- a/xbmc/guilib/GUIButtonControl.h
+++ b/xbmc/guilib/GUIButtonControl.h
@@ -33,6 +33,7 @@
 #include "GUITexture.h"
 #include "GUILabel.h"
 #include "GUIControl.h"
+#include "GUIAction.h"
 
 /*!
  \ingroup controls
diff --git a/xbmc/guilib/GUIControl.cpp b/xbmc/guilib/GUIControl.cpp
index f62765e5c0c6..3324597aac35 100644
--- a/xbmc/guilib/GUIControl.cpp
+++ b/xbmc/guilib/GUIControl.cpp
@@ -19,6 +19,8 @@
  */
 
 #include "GUIControl.h"
+#include "GUIMessage.h"
+#include "GUIAction.h"
 
 #include "GUIInfoManager.h"
 #include "utils/log.h"
@@ -90,6 +92,7 @@ CGUIControl::CGUIControl(int parentID, int controlID, float posX, float posY, fl
   m_controlStats = nullptr;
 }
 
+CGUIControl::CGUIControl(const CGUIControl &) = default;
 
 CGUIControl::~CGUIControl(void) = default;
 
diff --git a/xbmc/guilib/GUIControl.h b/xbmc/guilib/GUIControl.h
index 4c72d7c00755..82cbe4eee295 100644
--- a/xbmc/guilib/GUIControl.h
+++ b/xbmc/guilib/GUIControl.h
@@ -31,15 +31,15 @@
 
 #include "utils/Color.h"
 #include "windowing/GraphicContext.h" // needed by any rendering operation (all controls)
-#include "GUIMessage.h"     // needed by practically all controls
 #include "VisibleEffect.h"  // needed for the CAnimation members
 #include "guiinfo/GUIInfoTypes.h" // needed for CGUIInfoColor to handle infolabel'ed colors
 #include "DirtyRegion.h"
-#include "GUIAction.h"
 
 class CGUIListItem; // forward
 class CAction;
 class CMouseEvent;
+class CGUIMessage;
+class CGUIAction;
 
 enum ORIENTATION { HORIZONTAL = 0, VERTICAL };
 
@@ -90,6 +90,7 @@ class CGUIControl
 public:
   CGUIControl();
   CGUIControl(int parentID, int controlID, float posX, float posY, float width, float height);
+  CGUIControl(const CGUIControl &);
   virtual ~CGUIControl(void);
   virtual CGUIControl *Clone() const=0;
 
diff --git a/xbmc/guilib/GUIControlGroup.cpp b/xbmc/guilib/GUIControlGroup.cpp
index eae88476f4d2..a3d859212ef4 100644
--- a/xbmc/guilib/GUIControlGroup.cpp
+++ b/xbmc/guilib/GUIControlGroup.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIControlGroup.h"
+#include "GUIMessage.h"
 
 #include <cassert>
 #include <utility>
diff --git a/xbmc/guilib/GUIControlGroupList.cpp b/xbmc/guilib/GUIControlGroupList.cpp
index 83931da206df..636e2917e01a 100644
--- a/xbmc/guilib/GUIControlGroupList.cpp
+++ b/xbmc/guilib/GUIControlGroupList.cpp
@@ -19,6 +19,8 @@
  */
 
 #include "GUIControlGroupList.h"
+#include "GUIMessage.h"
+#include "GUIAction.h"
 #include "input/Key.h"
 #include "guilib/guiinfo/GUIInfoLabels.h"
 #include "GUIControlProfiler.h"
diff --git a/xbmc/guilib/GUIFadeLabelControl.cpp b/xbmc/guilib/GUIFadeLabelControl.cpp
index 88e58d87bedd..c9ae3e0219d7 100644
--- a/xbmc/guilib/GUIFadeLabelControl.cpp
+++ b/xbmc/guilib/GUIFadeLabelControl.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIFadeLabelControl.h"
+#include "GUIMessage.h"
 #include "utils/Random.h"
 
 using namespace KODI::GUILIB;
diff --git a/xbmc/guilib/GUIImage.cpp b/xbmc/guilib/GUIImage.cpp
index e565cf25c727..097453baf93b 100644
--- a/xbmc/guilib/GUIImage.cpp
+++ b/xbmc/guilib/GUIImage.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIImage.h"
+#include "GUIMessage.h"
 #include "utils/log.h"
 
 #include <cassert>
diff --git a/xbmc/guilib/GUILabelControl.cpp b/xbmc/guilib/GUILabelControl.cpp
index 99107044d5ce..29ba18cc5116 100644
--- a/xbmc/guilib/GUILabelControl.cpp
+++ b/xbmc/guilib/GUILabelControl.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUILabelControl.h"
+#include "GUIMessage.h"
 #include "utils/CharsetConverter.h"
 #include "utils/Color.h"
 #include "utils/StringUtils.h"
diff --git a/xbmc/guilib/GUIListContainer.cpp b/xbmc/guilib/GUIListContainer.cpp
index da9286930285..7c2a82f12ca3 100644
--- a/xbmc/guilib/GUIListContainer.cpp
+++ b/xbmc/guilib/GUIListContainer.cpp
@@ -20,6 +20,7 @@
 
 #include "GUIListContainer.h"
 #include "GUIListItemLayout.h"
+#include "GUIMessage.h"
 #include "input/Key.h"
 #include "utils/StringUtils.h"
 
diff --git a/xbmc/guilib/GUIMoverControl.cpp b/xbmc/guilib/GUIMoverControl.cpp
index 619f66552b32..351c14004913 100644
--- a/xbmc/guilib/GUIMoverControl.cpp
+++ b/xbmc/guilib/GUIMoverControl.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIMoverControl.h"
+#include "GUIMessage.h"
 #include "input/Key.h"
 #include "utils/TimeUtils.h"
 
diff --git a/xbmc/guilib/GUIMultiImage.cpp b/xbmc/guilib/GUIMultiImage.cpp
index 30ccdf63d7b0..db7b3a9da8c3 100644
--- a/xbmc/guilib/GUIMultiImage.cpp
+++ b/xbmc/guilib/GUIMultiImage.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIMultiImage.h"
+#include "GUIMessage.h"
 #include "ServiceBroker.h"
 #include "TextureManager.h"
 #include "filesystem/Directory.h"
diff --git a/xbmc/guilib/GUIPanelContainer.cpp b/xbmc/guilib/GUIPanelContainer.cpp
index 8a3a176c5c0b..796fff4273a7 100644
--- a/xbmc/guilib/GUIPanelContainer.cpp
+++ b/xbmc/guilib/GUIPanelContainer.cpp
@@ -20,6 +20,7 @@
 
 #include "GUIPanelContainer.h"
 #include "GUIListItemLayout.h"
+#include "GUIMessage.h"
 #include "guilib/guiinfo/GUIInfoLabels.h"
 #include "input/Key.h"
 #include "utils/StringUtils.h"
diff --git a/xbmc/guilib/GUIProgressControl.cpp b/xbmc/guilib/GUIProgressControl.cpp
index 41216ff7bdc5..896787b08b3f 100644
--- a/xbmc/guilib/GUIProgressControl.cpp
+++ b/xbmc/guilib/GUIProgressControl.cpp
@@ -21,6 +21,7 @@
 #include "GUIProgressControl.h"
 #include "GUIInfoManager.h"
 #include "GUIListItem.h"
+#include "GUIMessage.h"
 #include "utils/StringUtils.h"
 
 CGUIProgressControl::CGUIProgressControl(int parentID, int controlID,
diff --git a/xbmc/guilib/GUIResizeControl.cpp b/xbmc/guilib/GUIResizeControl.cpp
index 2608fca92518..3e3b059b5b84 100644
--- a/xbmc/guilib/GUIResizeControl.cpp
+++ b/xbmc/guilib/GUIResizeControl.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIResizeControl.h"
+#include "GUIMessage.h"
 #include "input/Key.h"
 #include "utils/TimeUtils.h"
 
diff --git a/xbmc/guilib/GUIScrollBarControl.cpp b/xbmc/guilib/GUIScrollBarControl.cpp
index 9e3f8a05026f..a46c45f8f221 100644
--- a/xbmc/guilib/GUIScrollBarControl.cpp
+++ b/xbmc/guilib/GUIScrollBarControl.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIScrollBarControl.h"
+#include "GUIMessage.h"
 #include "input/Key.h"
 #include "utils/StringUtils.h"
 
diff --git a/xbmc/guilib/GUISpinControl.cpp b/xbmc/guilib/GUISpinControl.cpp
index 30ea44d40ebc..aeed306099dd 100644
--- a/xbmc/guilib/GUISpinControl.cpp
+++ b/xbmc/guilib/GUISpinControl.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUISpinControl.h"
+#include "GUIMessage.h"
 #include "input/Key.h"
 #include "utils/StringUtils.h"
 #include <stdio.h>
diff --git a/xbmc/guilib/GUITextBox.cpp b/xbmc/guilib/GUITextBox.cpp
index 3cee71a8c943..7b80065fcee3 100644
--- a/xbmc/guilib/GUITextBox.cpp
+++ b/xbmc/guilib/GUITextBox.cpp
@@ -20,6 +20,7 @@
 
 #include "GUITextBox.h"
 #include "GUIInfoManager.h"
+#include "GUIMessage.h"
 #include "guilib/GUIComponent.h"
 #include "utils/XBMCTinyXML.h"
 #include "utils/MathUtils.h"
diff --git a/xbmc/guilib/GUIWindow.h b/xbmc/guilib/GUIWindow.h
index 955913a671d5..ddae891a622c 100644
--- a/xbmc/guilib/GUIWindow.h
+++ b/xbmc/guilib/GUIWindow.h
@@ -28,6 +28,7 @@
  *
  */
 
+#include "GUIAction.h"
 #include "GUIControlGroup.h"
 #include <memory>
 #include "threads/CriticalSection.h"
diff --git a/xbmc/guilib/GUIWrappingListContainer.cpp b/xbmc/guilib/GUIWrappingListContainer.cpp
index 71148b5dab8f..579eedf7e951 100644
--- a/xbmc/guilib/GUIWrappingListContainer.cpp
+++ b/xbmc/guilib/GUIWrappingListContainer.cpp
@@ -20,6 +20,7 @@
 
 #include "GUIWrappingListContainer.h"
 #include "GUIListItemLayout.h"
+#include "GUIMessage.h"
 #include "FileItem.h"
 #include "input/Key.h"
 
diff --git a/xbmc/network/GUIDialogAccessPoints.cpp b/xbmc/network/GUIDialogAccessPoints.cpp
index 1d646e2e7b29..48bc75e1ac24 100644
--- a/xbmc/network/GUIDialogAccessPoints.cpp
+++ b/xbmc/network/GUIDialogAccessPoints.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIDialogAccessPoints.h"
+#include "guilib/GUIMessage.h"
 #include "guilib/GUIKeyboardFactory.h"
 #if defined(TARGET_ANDROID)
 #include "platform/android/network/NetworkAndroid.h"
diff --git a/xbmc/peripherals/dialogs/GUIDialogPeripheralSettings.cpp b/xbmc/peripherals/dialogs/GUIDialogPeripheralSettings.cpp
index bd13a74d1bd3..8b3d2ecb7096 100644
--- a/xbmc/peripherals/dialogs/GUIDialogPeripheralSettings.cpp
+++ b/xbmc/peripherals/dialogs/GUIDialogPeripheralSettings.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIDialogPeripheralSettings.h"
+#include "guilib/GUIMessage.h"
 
 #include <utility>
 
diff --git a/xbmc/profiles/windows/GUIWindowSettingsProfile.cpp b/xbmc/profiles/windows/GUIWindowSettingsProfile.cpp
index d7eeeafe1390..b6ecf1f78e57 100644
--- a/xbmc/profiles/windows/GUIWindowSettingsProfile.cpp
+++ b/xbmc/profiles/windows/GUIWindowSettingsProfile.cpp
@@ -30,6 +30,7 @@
 #include "utils/URIUtils.h"
 #include "GUIPassword.h"
 #include "windows/GUIWindowLoginScreen.h"
+#include "guilib/GUIMessage.h"
 #include "guilib/GUIComponent.h"
 #include "guilib/GUIWindowManager.h"
 #include "filesystem/Directory.h"
diff --git a/xbmc/profiles/windows/GUIWindowSettingsProfile.h b/xbmc/profiles/windows/GUIWindowSettingsProfile.h
index 2a4e4f323301..de740b5cd6e4 100644
--- a/xbmc/profiles/windows/GUIWindowSettingsProfile.h
+++ b/xbmc/profiles/windows/GUIWindowSettingsProfile.h
@@ -22,6 +22,8 @@
 
 #include "guilib/GUIWindow.h"
 
+class CFileItemList;
+
 class CGUIWindowSettingsProfile :
       public CGUIWindow
 {
diff --git a/xbmc/pvr/dialogs/GUIDialogPVRClientPriorities.cpp b/xbmc/pvr/dialogs/GUIDialogPVRClientPriorities.cpp
index 8fcc8dc94ee2..8390a5012df8 100644
--- a/xbmc/pvr/dialogs/GUIDialogPVRClientPriorities.cpp
+++ b/xbmc/pvr/dialogs/GUIDialogPVRClientPriorities.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIDialogPVRClientPriorities.h"
+#include "guilib/GUIMessage.h"
 
 #include <cstdlib>
 
diff --git a/xbmc/pvr/dialogs/GUIDialogPVRGuideSearch.cpp b/xbmc/pvr/dialogs/GUIDialogPVRGuideSearch.cpp
index 8044d1c4bf84..d34376a6dffc 100644
--- a/xbmc/pvr/dialogs/GUIDialogPVRGuideSearch.cpp
+++ b/xbmc/pvr/dialogs/GUIDialogPVRGuideSearch.cpp
@@ -24,6 +24,7 @@
 
 #include "ServiceBroker.h"
 #include "addons/kodi-addon-dev-kit/include/kodi/xbmc_pvr_types.h"
+#include "guilib/GUIMessage.h"
 #include "guilib/GUIEditControl.h"
 #include "guilib/LocalizeStrings.h"
 #include "utils/StringUtils.h"
diff --git a/xbmc/pvr/dialogs/GUIDialogPVRRecordingInfo.cpp b/xbmc/pvr/dialogs/GUIDialogPVRRecordingInfo.cpp
index 7018ad3d75a3..4d34fb993473 100644
--- a/xbmc/pvr/dialogs/GUIDialogPVRRecordingInfo.cpp
+++ b/xbmc/pvr/dialogs/GUIDialogPVRRecordingInfo.cpp
@@ -19,6 +19,7 @@
  */
 
 #include "GUIDialogPVRRecordingInfo.h"
+#include "guilib/GUIMessage.h"
 
 #include "FileItem.h"
 #include "ServiceBroker.h"
diff --git a/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.cpp b/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.cpp
index 1338d9eb1170..8b85f739c7ed 100644
--- a/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.cpp
+++ b/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.cpp
@@ -21,6 +21,7 @@
 #include "GUIDialogPVRRecordingSettings.h"
 
 #include "ServiceBroker.h"
+#include "guilib/GUIMessage.h"
 #include "guilib/LocalizeStrings.h"
 #include "messaging/helpers/DialogHelper.h"
 #include "settings/lib/Setting.h"
diff --git a/xbmc/pvr/windows/GUIEPGGridContainer.cpp b/xbmc/pvr/windows/GUIEPGGridContainer.cpp
index ab9b658fb861..e0fb9a77711b 100644
--- a/xbmc/pvr/windows/GUIEPGGridContainer.cpp
+++ b/xbmc/pvr/windows/GUIEPGGridContainer.cpp
@@ -27,6 +27,8 @@
 #include "guilib/DirtyRegion.h"
 #include "guilib/GUIControlFactory.h"
 #include "guilib/GUIListItem.h"
+#include "guilib/GUIMessage.h"
+#include "guilib/GUIAction.h"
 #include "input/Key.h"
 #include "utils/MathUtils.h"
 #include "utils/StringUtils.h"
diff --git a/xbmc/pvr/windows/GUIWindowPVRTimersBase.cpp b/xbmc/pvr/windows/GUIWindowPVRTimersBase.cpp
index 5e7e97811544..227a7b130641 100644
--- a/xbmc/pvr/windows/GUIWindowPVRTimersBase.cpp
+++ b/xbmc/pvr/windows/GUIWindowPVRTimersBase.cpp
@@ -22,6 +22,7 @@
 
 #include "GUIInfoManager.h"
 #include "ServiceBroker.h"
+#include "guilib/GUIMessage.h"
 #include "guilib/GUIComponent.h"
 #include "input/Key.h"
 #include "messaging/helpers/DialogOKHelper.h"
diff --git a/xbmc/settings/windows/GUIWindowTestPattern.cpp b/xbmc/settings/windows/GUIWindowTestPattern.cpp
index 1fbc0c98210f..b2ca9647f5d9 100644
--- a/xbmc/settings/windows/GUIWindowTestPattern.cpp
+++ b/xbmc/settings/windows/GUIWindowTestPattern.cpp
@@ -21,6 +21,7 @@
 #include "GUIWindowTestPattern.h"
 #include "ServiceBroker.h"
 #include "input/Key.h"
+#include "guilib/GUIMessage.h"
 #include "guilib/WindowIDs.h"
 #include "windowing/WinSystem.h"
 
diff --git a/xbmc/windows/GUIWindowSystemInfo.cpp b/xbmc/windows/GUIWindowSystemInfo.cpp
index 26852d4c1d87..f96ea3e83dcc 100644
--- a/xbmc/windows/GUIWindowSystemInfo.cpp
+++ b/xbmc/windows/GUIWindowSystemInfo.cpp
@@ -20,6 +20,7 @@
 
 #include "GUIWindowSystemInfo.h"
 #include "GUIInfoManager.h"
+#include "guilib/GUIMessage.h"
 #include "guilib/GUIComponent.h"
 #include "guilib/WindowIDs.h"
 #include "guilib/LocalizeStrings.h"

From 0b2c48bf7600445f3820d9e83bfc8683bc697a07 Mon Sep 17 00:00:00 2001
From: Max Kellermann <max.kellermann@gmail.com>
Date: Sat, 12 May 2018 12:47:27 +0200
Subject: [PATCH 8/9] guilib/GUIControl: use emplace_back() instead of
 push_back()

Eliminate temporary instance.
---
 xbmc/guilib/GUIControl.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/guilib/GUIControl.cpp b/xbmc/guilib/GUIControl.cpp
index 3324597aac35..12690d614084 100644
--- a/xbmc/guilib/GUIControl.cpp
+++ b/xbmc/guilib/GUIControl.cpp
@@ -166,7 +166,7 @@ void CGUIControl::DoProcess(unsigned int currentTime, CDirtyRegionList &dirtyreg
 
   if (changed)
   {
-    dirtyregions.push_back(CDirtyRegion(dirtyRegion));
+    dirtyregions.emplace_back(dirtyRegion);
   }
 }
 

From 602d39eb249368afe0edce71e60fdd99505f8e92 Mon Sep 17 00:00:00 2001
From: Max Kellermann <max.kellermann@gmail.com>
Date: Mon, 14 May 2018 10:38:39 +0200
Subject: [PATCH 9/9] guilib/GUIVisualisationControl: add missing includes

---
 xbmc/guilib/GUIVisualisationControl.h | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/xbmc/guilib/GUIVisualisationControl.h b/xbmc/guilib/GUIVisualisationControl.h
index 478ba21d6f92..1672512b6705 100644
--- a/xbmc/guilib/GUIVisualisationControl.h
+++ b/xbmc/guilib/GUIVisualisationControl.h
@@ -24,6 +24,10 @@
 #include "cores/AudioEngine/Interfaces/IAudioCallback.h"
 #include "utils/rfft.h"
 
+#include <string>
+#include <vector>
+#include <list>
+
 #define AUDIO_BUFFER_SIZE 512 // MUST BE A POWER OF 2!!!
 #define MAX_AUDIO_BUFFERS 16
 
