From 628ddff2a6e1501f151c7f55ab3467d5d9ff5516 Mon Sep 17 00:00:00 2001
From: fritsch <Peter.Fruehberger@gmail.com>
Date: Mon, 25 Mar 2019 09:47:26 +0100
Subject: [PATCH] CThreads: Reacquire Lock after WaitForThreadExit has finished

---
 xbmc/threads/Thread.cpp | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/xbmc/threads/Thread.cpp b/xbmc/threads/Thread.cpp
index 00ea6c2c8122..43d36b56ec22 100644
--- a/xbmc/threads/Thread.cpp
+++ b/xbmc/threads/Thread.cpp
@@ -150,7 +150,13 @@ void CThread::StopThread(bool bWait /*= true*/)
   CSingleLock lock(m_CriticalSection);
   if (m_ThreadId && bWait && !IsCurrentThread(m_ThreadId))
   {
-    lock.Leave();
+    // We will leave the critical Section before WaitingForThreadExit.
+    // But we have to Reacquire it after the wait so that CThread::staticThread
+    // does not get removed its thread->m_CriticalSection before it can unlock
+    // it. As CThread::staticThread holds the lock already at this point when
+    // sending the term signal, StopThread will synchronize so that CThread-Object
+    // is not removed prior the staticThread is accessing its members
+    CSingleExit exit(m_CriticalSection);
     WaitForThreadExit(0xFFFFFFFF);
   }
 }
