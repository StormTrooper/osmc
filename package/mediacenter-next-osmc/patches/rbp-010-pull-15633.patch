From 6315183cbc9a8530e095ffd4b6326e6393aa5b9a Mon Sep 17 00:00:00 2001
From: Arne Morten Kvarving <spiff@kodi.tv>
Date: Wed, 27 Feb 2019 14:21:53 +0100
Subject: [PATCH 1/3] various uninited variable usage

according to valgrind.
---
 xbmc/pictures/ExifParse.h                    |  2 +-
 xbmc/pictures/SlideShowPicture.cpp           |  2 +-
 xbmc/pictures/SlideShowPicture.h             | 10 +++++-----
 xbmc/windowing/X11/WinSystemX11GLContext.cpp |  3 ++-
 4 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/xbmc/pictures/ExifParse.h b/xbmc/pictures/ExifParse.h
index 094d87d03ecd..6da3bf26bbbe 100644
--- a/xbmc/pictures/ExifParse.h
+++ b/xbmc/pictures/ExifParse.h
@@ -12,7 +12,7 @@ class CExifParse
 
   private:
     ExifInfo_t *m_ExifInfo = nullptr;
-    double m_FocalPlaneXRes;
+    double m_FocalPlaneXRes = 0.0;
     double m_FocalPlaneUnits = 0.0;
     unsigned m_LargestExifOffset = 0;          // Last exif data referenced (to check if thumbnail is at end)
     int m_ExifImageWidth = 0;
diff --git a/xbmc/pictures/SlideShowPicture.cpp b/xbmc/pictures/SlideShowPicture.cpp
index 48331ba41e0e..05848191d263 100644
--- a/xbmc/pictures/SlideShowPicture.cpp
+++ b/xbmc/pictures/SlideShowPicture.cpp
@@ -552,7 +552,7 @@ void CSlideShowPic::Process(unsigned int currentTime, CDirtyRegionList &dirtyreg
   // now render the image in the top right corner if we're zooming
   if (m_fZoomAmount == 1 || m_bIsComic)
   {
-    const float empty[4] = {0};
+    const float empty[4] = {};
     UpdateVertices(m_bx, m_by, empty, empty, dirtyregions);
     UpdateVertices(m_sx, m_sy, empty, empty, dirtyregions);
     UpdateVertices(m_ox, m_oy, empty, empty, dirtyregions);
diff --git a/xbmc/pictures/SlideShowPicture.h b/xbmc/pictures/SlideShowPicture.h
index 13258a0016c8..454207600bf6 100644
--- a/xbmc/pictures/SlideShowPicture.h
+++ b/xbmc/pictures/SlideShowPicture.h
@@ -27,9 +27,9 @@ class CSlideShowPic
 
   struct TRANSITION
   {
-    TRANSITION_EFFECT type;
-    int start;
-    int length;
+    TRANSITION_EFFECT type = TRANSITION_NONE;
+    int start = 0;
+    int length = 0;
   };
 
   CSlideShowPic();
@@ -108,14 +108,14 @@ class CSlideShowPic
   float m_ox[4], m_oy[4];
 
   // transition and display effects
-  DISPLAY_EFFECT m_displayEffect;
+  DISPLAY_EFFECT m_displayEffect = EFFECT_NONE;
   TRANSITION m_transitionStart;
   TRANSITION m_transitionEnd;
   TRANSITION m_transitionTemp; // used for rotations + zooms
   float m_fAngle; // angle (between 0 and 2pi to display the image)
   float m_fTransitionAngle;
   float m_fTransitionZoom;
-  int m_iCounter;
+  int m_iCounter = 0;
   int m_iTotalFrames;
   bool m_bPause;
   bool m_bNoEffect;
diff --git a/xbmc/windowing/X11/WinSystemX11GLContext.cpp b/xbmc/windowing/X11/WinSystemX11GLContext.cpp
index b4a6387f7b83..5b0b155736b9 100644
--- a/xbmc/windowing/X11/WinSystemX11GLContext.cpp
+++ b/xbmc/windowing/X11/WinSystemX11GLContext.cpp
@@ -287,7 +287,8 @@ bool CWinSystemX11GLContext::RefreshGLContext(bool force)
         m_vaapiProxy.reset(X11::VaapiProxyCreate());
         X11::VaapiProxyConfig(m_vaapiProxy.get(), GetDisplay(),
                               static_cast<CGLContextEGL*>(m_pGLContext)->m_eglDisplay);
-        bool general, deepColor;
+        bool general = false;
+        bool deepColor = false;
         X11::VAAPIRegisterRender(m_vaapiProxy.get(), general, deepColor);
         if (general)
         {

From a0935c2399ea36a328917f4c6c8215ff22b238e2 Mon Sep 17 00:00:00 2001
From: Arne Morten Kvarving <spiff@kodi.tv>
Date: Thu, 28 Feb 2019 08:58:21 +0100
Subject: [PATCH 2/3] fixed: do not try to list empty directory in directory
 provider

---
 xbmc/listproviders/DirectoryProvider.cpp | 1 +
 1 file changed, 1 insertion(+)

diff --git a/xbmc/listproviders/DirectoryProvider.cpp b/xbmc/listproviders/DirectoryProvider.cpp
index 7fcaf8b52c38..86ea1b65c821 100644
--- a/xbmc/listproviders/DirectoryProvider.cpp
+++ b/xbmc/listproviders/DirectoryProvider.cpp
@@ -190,6 +190,7 @@ bool CDirectoryProvider::Update(bool forceRefresh)
   fireJob |= UpdateURL();
   fireJob |= UpdateSort();
   fireJob |= UpdateLimit();
+  fireJob &= !m_currentUrl.empty();
 
   CSingleLock lock(m_section);
   if (m_updateState == INVALIDATED)

From 21c5ac5892fb6c350852854ae2f9cceec45a4672 Mon Sep 17 00:00:00 2001
From: Arne Morten Kvarving <spiff@kodi.tv>
Date: Thu, 28 Feb 2019 08:59:02 +0100
Subject: [PATCH 3/3] fixed: put add-on instance creation/destruction in a
 critical section

if not, unloading/loading of so files leads to calls to
no longer existent function pointers.
---
 xbmc/addons/binary-addons/AddonInstanceHandler.cpp | 5 +++++
 xbmc/addons/binary-addons/AddonInstanceHandler.h   | 1 +
 2 files changed, 6 insertions(+)

diff --git a/xbmc/addons/binary-addons/AddonInstanceHandler.cpp b/xbmc/addons/binary-addons/AddonInstanceHandler.cpp
index 753475c4b8cf..b0d9c1f7d3ed 100644
--- a/xbmc/addons/binary-addons/AddonInstanceHandler.cpp
+++ b/xbmc/addons/binary-addons/AddonInstanceHandler.cpp
@@ -15,6 +15,8 @@
 namespace ADDON
 {
 
+CCriticalSection IAddonInstanceHandler::m_cdSec;
+
 IAddonInstanceHandler::IAddonInstanceHandler(ADDON_TYPE type, const BinaryAddonBasePtr& addonBase, KODI_HANDLE parentInstance/* = nullptr*/, const std::string& instanceID/* = ""*/)
   : m_type(type),
     m_parentInstance(parentInstance),
@@ -76,6 +78,8 @@ ADDON_STATUS IAddonInstanceHandler::CreateInstance(KODI_HANDLE instance)
   if (!m_addon)
     return ADDON_STATUS_UNKNOWN;
 
+  CSingleLock lock(m_cdSec);
+
   ADDON_STATUS status = m_addon->CreateInstance(m_type, m_instanceId, instance, m_parentInstance);
   if (status != ADDON_STATUS_OK)
   {
@@ -89,6 +93,7 @@ ADDON_STATUS IAddonInstanceHandler::CreateInstance(KODI_HANDLE instance)
 
 void IAddonInstanceHandler::DestroyInstance()
 {
+  CSingleLock lock(m_cdSec);
   if (m_addon)
     m_addon->DestroyInstance(m_instanceId);
 }
diff --git a/xbmc/addons/binary-addons/AddonInstanceHandler.h b/xbmc/addons/binary-addons/AddonInstanceHandler.h
index d9d80152ed7c..8ee9b3062c7c 100644
--- a/xbmc/addons/binary-addons/AddonInstanceHandler.h
+++ b/xbmc/addons/binary-addons/AddonInstanceHandler.h
@@ -45,6 +45,7 @@ namespace ADDON
     KODI_HANDLE m_parentInstance;
     BinaryAddonBasePtr m_addonBase;
     AddonDllPtr m_addon;
+    static CCriticalSection m_cdSec;
   };
 
 } /* namespace ADDON */
