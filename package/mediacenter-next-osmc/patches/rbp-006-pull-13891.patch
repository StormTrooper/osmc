From 8103933cd0fa2cc0f0fd8af93a6dcb6719cb7657 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Mon, 14 May 2018 20:41:45 +0200
Subject: [PATCH] GUIMediaWindow: prevent vecItems from being updated by more
 than a single task

---
 xbmc/windows/GUIMediaWindow.cpp | 17 +++++++++++++++--
 xbmc/windows/GUIMediaWindow.h   |  3 +++
 2 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/xbmc/windows/GUIMediaWindow.cpp b/xbmc/windows/GUIMediaWindow.cpp
index d79fb5d4aa4c..bcac8c237c0f 100644
--- a/xbmc/windows/GUIMediaWindow.cpp
+++ b/xbmc/windows/GUIMediaWindow.cpp
@@ -916,18 +916,31 @@ bool CGUIMediaWindow::Update(const std::string &strDirectory, bool updateFilterP
 
 bool CGUIMediaWindow::Refresh(bool clearCache /* = false */)
 {
+  if (m_vecItemsUpdating)
+  {
+    CLog::Log(LOGWARNING, "CGUIMediaWindow::Update - updating in progress");
+    return false;
+  }
+
   std::string strCurrentDirectory = m_vecItems->GetPath();
   if (strCurrentDirectory == "?")
     return false;
 
+  m_vecItemsUpdating = true;
+
   if (clearCache)
     m_vecItems->RemoveDiscCache(GetID());
 
+  bool ret = true;
+
   // get the original number of items
   if (!Update(strCurrentDirectory, false))
-    return false;
+  {
+    ret = false;
+  }
 
-  return true;
+  m_vecItemsUpdating = false;
+  return ret;
 }
 
 /*!
diff --git a/xbmc/windows/GUIMediaWindow.h b/xbmc/windows/GUIMediaWindow.h
index a569f7990e65..579cd17d8e37 100644
--- a/xbmc/windows/GUIMediaWindow.h
+++ b/xbmc/windows/GUIMediaWindow.h
@@ -27,6 +27,8 @@
 #include "playlists/SmartPlayList.h"
 #include "view/GUIViewControl.h"
 
+#include <atomic>
+
 class CFileItemList;
 class CGUIViewState;
 
@@ -189,6 +191,7 @@ class CGUIMediaWindow : public CGUIWindow
   CFileItemList* m_unfilteredItems;        ///< \brief items prior to filtering using FilterItems()
   CDirectoryHistory m_history;
   std::unique_ptr<CGUIViewState> m_guiState;
+  std::atomic_bool m_vecItemsUpdating = {false};
 
   // save control state on window exit
   int m_iLastControl;
