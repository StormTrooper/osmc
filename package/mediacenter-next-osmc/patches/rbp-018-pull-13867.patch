From e4f4797549bb8baf26cc9bf2644c5be89b9b1c66 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Wed, 9 May 2018 19:11:40 +0200
Subject: [PATCH] make sure not to delete a CThread object while spawn thread
 is in process

---
 xbmc/threads/Thread.cpp | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/xbmc/threads/Thread.cpp b/xbmc/threads/Thread.cpp
index e195b4565a11..09d67b8b0997 100644
--- a/xbmc/threads/Thread.cpp
+++ b/xbmc/threads/Thread.cpp
@@ -39,7 +39,7 @@ static thread_local CThread* currentThread;
 //////////////////////////////////////////////////////////////////////
 
 CThread::CThread(const char* ThreadName)
-: m_StopEvent(true,true), m_TermEvent(true), m_StartEvent(true)
+: m_StopEvent(true,true), m_TermEvent(true), m_StartEvent(true, true)
 {
   m_bStop = false;
 
@@ -56,7 +56,7 @@ CThread::CThread(const char* ThreadName)
 }
 
 CThread::CThread(IRunnable* pRunnable, const char* ThreadName)
-: m_StopEvent(true,true), m_TermEvent(true), m_StartEvent(true)
+: m_StopEvent(true, true), m_TermEvent(true), m_StartEvent(true, true)
 {
   m_bStop = false;
 
@@ -154,6 +154,8 @@ bool CThread::IsAutoDelete() const
 
 void CThread::StopThread(bool bWait /*= true*/)
 {
+  m_StartEvent.Wait();
+
   m_bStop = true;
   m_StopEvent.Set();
   CSingleLock lock(m_CriticalSection);
