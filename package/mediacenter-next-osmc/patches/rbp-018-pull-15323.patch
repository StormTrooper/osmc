From e8d7408719e42bbd37f096dbe881d78906653ec5 Mon Sep 17 00:00:00 2001
From: DaveTBlake <oak99sky@yahoo.co.uk>
Date: Thu, 24 Jan 2019 15:07:06 +0000
Subject: [PATCH] [JSON]Fix AudioLibrary.GetGenres return of empty "sourceid"
 as [] Genres may not have related sources if db migrated from earlier version
 but rescan of files not completed.

---
 xbmc/interfaces/json-rpc/schema/version.txt |  2 +-
 xbmc/music/MusicDatabase.cpp                | 14 ++++++++------
 2 files changed, 9 insertions(+), 7 deletions(-)

diff --git a/xbmc/interfaces/json-rpc/schema/version.txt b/xbmc/interfaces/json-rpc/schema/version.txt
index e479a93f04c3..acd39a4eec7a 100644
--- a/xbmc/interfaces/json-rpc/schema/version.txt
+++ b/xbmc/interfaces/json-rpc/schema/version.txt
@@ -1 +1 @@
-JSONRPC_VERSION 10.1.0
+JSONRPC_VERSION 10.1.1
diff --git a/xbmc/music/MusicDatabase.cpp b/xbmc/music/MusicDatabase.cpp
index 7f55822e90cf..16562b4962ea 100644
--- a/xbmc/music/MusicDatabase.cpp
+++ b/xbmc/music/MusicDatabase.cpp
@@ -8783,7 +8783,7 @@ bool CMusicDatabase::GetGenresJSON(CFileItemList& items, bool bSources)
       extFilter.AppendJoin("JOIN song_genre ON song_genre.idGenre = genre.idGenre");
       extFilter.AppendJoin("JOIN song ON song.idSong = song_genre.idSong");
       extFilter.AppendJoin("JOIN album ON album.idAlbum = song.idAlbum");
-      extFilter.AppendJoin("JOIN album_source on album_source.idAlbum = album.idAlbum");
+      extFilter.AppendJoin("LEFT JOIN album_source on album_source.idAlbum = album.idAlbum");
       extFilter.AppendOrder("genre.strGenre");
       extFilter.AppendOrder("album_source.idSource");
     }   
@@ -8795,7 +8795,6 @@ bool CMusicDatabase::GetGenresJSON(CFileItemList& items, bool bSources)
    
     strSQL = PrepareSQL(strSQL.c_str(), extFilter.fields.c_str()) + strSQLExtra;
 
-
     // run query
     CLog::Log(LOGDEBUG, "%s query: %s", __FUNCTION__, strSQL.c_str());
 
@@ -8819,7 +8818,7 @@ bool CMusicDatabase::GetGenresJSON(CFileItemList& items, bool bSources)
     {
       if (idGenre != m_pDS->fv("genre.idGenre").get_asInt())
       { // New genre
-        if (idGenre > 0 && !genreSources.empty())
+        if (idGenre > 0 && bSources)
         {
           //Store sources for previous genre in item list
           items[items.Size() - 1].get()->SetProperty("sourceid", genreSources);
@@ -8837,14 +8836,17 @@ bool CMusicDatabase::GetGenresJSON(CFileItemList& items, bool bSources)
       }
       // Get source data
       if (bSources)
-        genreSources.push_back(m_pDS->fv("album_source.idSource").get_asInt());
+      {
+        int sourceid = m_pDS->fv("album_source.idSource").get_asInt();
+        if (sourceid > 0)
+          genreSources.push_back(sourceid);
+      }
       m_pDS->next();
     }
-    if (!genreSources.empty())
+    if (bSources)
     {
       //Store sources for final genre
       items[items.Size() - 1].get()->SetProperty("sourceid", genreSources);
-      genreSources.clear();
     }
 
     // cleanup
