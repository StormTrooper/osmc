From fcca1f830e4b13e167ed3c686894570dea7f9f1a Mon Sep 17 00:00:00 2001
From: Kai Sommerfeld <kai.sommerfeld@gmx.com>
Date: Sat, 17 Aug 2019 15:06:01 +0200
Subject: [PATCH] [contextmenumanager] Move 'Add/Remove fafourite' to new
 context menu system.

---
 xbmc/ContextMenuManager.cpp                   |  1 +
 xbmc/ContextMenus.cpp                         | 51 ++++++++++++++++++-
 xbmc/ContextMenus.h                           |  8 +++
 xbmc/dialogs/GUIDialogContextMenu.h           |  1 -
 xbmc/listproviders/DirectoryProvider.cpp      | 33 ++++++++----
 xbmc/listproviders/DirectoryProvider.h        |  1 +
 xbmc/music/windows/GUIWindowMusicPlaylist.cpp | 12 -----
 xbmc/video/windows/GUIWindowVideoPlaylist.cpp | 12 -----
 xbmc/windows/GUIMediaWindow.cpp               | 19 -------
 9 files changed, 82 insertions(+), 56 deletions(-)

diff --git a/xbmc/ContextMenuManager.cpp b/xbmc/ContextMenuManager.cpp
index 8b5ac9964ec4..3db001652c56 100644
--- a/xbmc/ContextMenuManager.cpp
+++ b/xbmc/ContextMenuManager.cpp
@@ -75,6 +75,7 @@ void CContextMenuManager::Init()
       std::make_shared<CONTEXTMENU::CRemoveFavourite>(),
       std::make_shared<CONTEXTMENU::CRenameFavourite>(),
       std::make_shared<CONTEXTMENU::CChooseThumbnailForFavourite>(),
+      std::make_shared<CONTEXTMENU::CAddRemoveFavourite>(),
   };
 
   ReloadAddonItems();
diff --git a/xbmc/ContextMenus.cpp b/xbmc/ContextMenus.cpp
index 7421e1826d33..c1e14621c635 100644
--- a/xbmc/ContextMenus.cpp
+++ b/xbmc/ContextMenus.cpp
@@ -8,8 +8,14 @@
 
 #include "ContextMenus.h"
 
+#include "ServiceBroker.h"
+#include "favourites/FavouritesService.h"
+#include "guilib/GUIComponent.h"
+#include "guilib/GUIWindowManager.h"
+#include "input/WindowTranslator.h"
 #include "storage/MediaManager.h"
-
+#include "utils/URIUtils.h"
+#include "utils/Variant.h"
 
 namespace CONTEXTMENU
 {
@@ -42,4 +48,47 @@ namespace CONTEXTMENU
     return g_mediaManager.Eject(item->GetPath());
   }
 
+namespace
+{
+
+int GetTargetWindowID(const CFileItem& item)
+{
+  int iTargetWindow = WINDOW_INVALID;
+
+  const std::string targetWindow = item.GetProperty("targetwindow").asString();
+  if (targetWindow.empty())
+    iTargetWindow = CServiceBroker::GetGUI()->GetWindowManager().GetActiveWindow();
+  else
+    iTargetWindow = CWindowTranslator::TranslateWindow(targetWindow);
+
+  return iTargetWindow;
+}
+
+} // unnamed namespace
+
+std::string CAddRemoveFavourite::GetLabel(const CFileItem& item) const
+{
+  return g_localizeStrings.Get(CServiceBroker::GetFavouritesService().IsFavourited(item, GetTargetWindowID(item))
+                               ? 14077   /* Remove from favourites */
+                               : 14076); /* Add to favourites */
+}
+
+bool CAddRemoveFavourite::IsVisible(const CFileItem& item) const
+{
+  return !item.IsParentFolder() &&
+         !item.IsPath("add") &&
+         !item.IsPath("newplaylist://") &&
+         !URIUtils::IsProtocol(item.GetPath(), "favourites") &&
+         !URIUtils::IsProtocol(item.GetPath(), "newsmartplaylist") &&
+         !URIUtils::IsProtocol(item.GetPath(), "newtag") &&
+         !URIUtils::IsProtocol(item.GetPath(), "musicsearch") &&
+         !StringUtils::StartsWith(item.GetPath(), "pvr://guide/") &&
+         !StringUtils::StartsWith(item.GetPath(), "pvr://timers/");
+}
+
+bool CAddRemoveFavourite::Execute(const CFileItemPtr& item) const
+{
+  return CServiceBroker::GetFavouritesService().AddOrRemove(*item.get(), GetTargetWindowID(*item));
+}
+
 } // namespace CONTEXTMENU
diff --git a/xbmc/ContextMenus.h b/xbmc/ContextMenus.h
index 4a4bc0795ad6..687a0966419e 100644
--- a/xbmc/ContextMenus.h
+++ b/xbmc/ContextMenus.h
@@ -28,4 +28,12 @@ struct CEjectDrive : CStaticContextMenuAction
   bool Execute(const CFileItemPtr& item) const override;
 };
 
+struct CAddRemoveFavourite : IContextMenuItem
+{
+  CAddRemoveFavourite() = default;
+  std::string GetLabel(const CFileItem& item) const override;
+  bool IsVisible(const CFileItem& item) const override;
+  bool Execute(const CFileItemPtr& item) const override;
+};
+
 }
diff --git a/xbmc/dialogs/GUIDialogContextMenu.h b/xbmc/dialogs/GUIDialogContextMenu.h
index c6122408ce3f..5b5544085b6a 100644
--- a/xbmc/dialogs/GUIDialogContextMenu.h
+++ b/xbmc/dialogs/GUIDialogContextMenu.h
@@ -21,7 +21,6 @@ enum CONTEXT_BUTTON { CONTEXT_BUTTON_CANCELLED = 0,
                       CONTEXT_BUTTON_RENAME,
                       CONTEXT_BUTTON_DELETE,
                       CONTEXT_BUTTON_MOVE,
-                      CONTEXT_BUTTON_ADD_FAVOURITE,
                       CONTEXT_BUTTON_SETTINGS,
                       CONTEXT_BUTTON_RIP_CD,
                       CONTEXT_BUTTON_CANCEL_RIP_CD,
diff --git a/xbmc/listproviders/DirectoryProvider.cpp b/xbmc/listproviders/DirectoryProvider.cpp
index 7262a47ebff4..d280adfa7d40 100644
--- a/xbmc/listproviders/DirectoryProvider.cpp
+++ b/xbmc/listproviders/DirectoryProvider.cpp
@@ -356,6 +356,19 @@ void CDirectoryProvider::OnJobComplete(unsigned int jobID, bool success, CJob *j
   m_jobID = 0;
 }
 
+std::string CDirectoryProvider::GetTarget(const CFileItem& item) const
+{
+  std::string target = item.GetProperty("node.target").asString();
+
+  CSingleLock lock(m_section);
+  if (target.empty())
+    target = m_currentTarget;
+  if (target.empty())
+    target = m_target.GetLabel(m_parentID, false);
+
+  return target;
+}
+
 bool CDirectoryProvider::OnClick(const CGUIListItemPtr &item)
 {
   CFileItem fileItem(*std::static_pointer_cast<CFileItem>(item));
@@ -365,18 +378,11 @@ bool CDirectoryProvider::OnClick(const CGUIListItemPtr &item)
       && OnInfo(item))
     return true;
 
-  std::string target = fileItem.GetProperty("node.target").asString();
-  {
-    CSingleLock lock(m_section);
-    if (target.empty())
-      target = m_currentTarget;
-    if (target.empty())
-      target = m_target.GetLabel(m_parentID, false);
-    if (fileItem.HasProperty("node.target_url"))
-      fileItem.SetPath(fileItem.GetProperty("node.target_url").asString());
-  }
+  if (fileItem.HasProperty("node.target_url"))
+    fileItem.SetPath(fileItem.GetProperty("node.target_url").asString());
+
   // grab the execute string
-  std::string execute = CServiceBroker::GetFavouritesService().GetExecutePath(fileItem, target);
+  std::string execute = CServiceBroker::GetFavouritesService().GetExecutePath(fileItem, GetTarget(fileItem));
   if (!execute.empty())
   {
     CGUIMessage message(GUI_MSG_EXECUTE, 0, 0);
@@ -427,6 +433,11 @@ bool CDirectoryProvider::OnInfo(const CGUIListItemPtr& item)
 bool CDirectoryProvider::OnContextMenu(const CGUIListItemPtr& item)
 {
   auto fileItem = std::static_pointer_cast<CFileItem>(item);
+
+  const std::string target = GetTarget(*fileItem);
+  if (!target.empty())
+    fileItem->SetProperty("targetwindow", target);
+
   return CONTEXTMENU::ShowFor(fileItem);
 }
 
diff --git a/xbmc/listproviders/DirectoryProvider.h b/xbmc/listproviders/DirectoryProvider.h
index 6b3283a7e639..962984c93a5e 100644
--- a/xbmc/listproviders/DirectoryProvider.h
+++ b/xbmc/listproviders/DirectoryProvider.h
@@ -86,4 +86,5 @@ class CDirectoryProvider :
   void OnAddonEvent(const ADDON::AddonEvent& event);
   void OnPVRManagerEvent(const PVR::PVREvent& event);
   void OnFavouritesEvent(const CFavouritesService::FavouritesUpdated& event);
+  std::string GetTarget(const CFileItem& item) const;
 };
diff --git a/xbmc/music/windows/GUIWindowMusicPlaylist.cpp b/xbmc/music/windows/GUIWindowMusicPlaylist.cpp
index e0c858c46060..564aca705f70 100644
--- a/xbmc/music/windows/GUIWindowMusicPlaylist.cpp
+++ b/xbmc/music/windows/GUIWindowMusicPlaylist.cpp
@@ -16,7 +16,6 @@
 #include "Util.h"
 #include "cores/playercorefactory/PlayerCoreFactory.h"
 #include "dialogs/GUIDialogSmartPlaylistEditor.h"
-#include "favourites/FavouritesService.h"
 #include "guilib/GUIComponent.h"
 #include "guilib/GUIKeyboardFactory.h"
 #include "guilib/GUIWindowManager.h"
@@ -524,10 +523,6 @@ void CGUIWindowMusicPlayList::GetContextButtons(int itemNumber, CContextButtons
       if (players.size() > 1)
         buttons.Add(CONTEXT_BUTTON_PLAY_WITH, 15213); // Play With...
 
-      if (CServiceBroker::GetFavouritesService().IsFavourited(*item.get(), GetID()))
-        buttons.Add(CONTEXT_BUTTON_ADD_FAVOURITE, 14077);     // Remove Favourite
-      else
-        buttons.Add(CONTEXT_BUTTON_ADD_FAVOURITE, 14076);     // Add To Favourites;
       if (itemNumber > (g_partyModeManager.IsEnabled() ? 1 : 0))
         buttons.Add(CONTEXT_BUTTON_MOVE_ITEM_UP, 13332);
       if (itemNumber + 1 < m_vecItems->Size())
@@ -592,13 +587,6 @@ bool CGUIWindowMusicPlayList::OnContextButton(int itemNumber, CONTEXT_BUTTON but
     RemovePlayListItem(itemNumber);
     return true;
 
-  case CONTEXT_BUTTON_ADD_FAVOURITE:
-    {
-      CFileItemPtr item = m_vecItems->Get(itemNumber);
-      CServiceBroker::GetFavouritesService().AddOrRemove(*item.get(), GetID());
-      return true;
-    }
-
   case CONTEXT_BUTTON_CANCEL_PARTYMODE:
     g_partyModeManager.Disable();
     return true;
diff --git a/xbmc/video/windows/GUIWindowVideoPlaylist.cpp b/xbmc/video/windows/GUIWindowVideoPlaylist.cpp
index 42913a61d628..759b48de7c09 100644
--- a/xbmc/video/windows/GUIWindowVideoPlaylist.cpp
+++ b/xbmc/video/windows/GUIWindowVideoPlaylist.cpp
@@ -16,7 +16,6 @@
 #include "Util.h"
 #include "cores/playercorefactory/PlayerCoreFactory.h"
 #include "dialogs/GUIDialogSmartPlaylistEditor.h"
-#include "favourites/FavouritesService.h"
 #include "guilib/GUIComponent.h"
 #include "guilib/GUIKeyboardFactory.h"
 #include "guilib/GUIWindowManager.h"
@@ -411,11 +410,6 @@ void CGUIWindowVideoPlaylist::GetContextButtons(int itemNumber, CContextButtons
 
       if (players.size() > 1)
         buttons.Add(CONTEXT_BUTTON_PLAY_WITH, 15213); // Play With...
-
-      if (CServiceBroker::GetFavouritesService().IsFavourited(*item.get(), GetID()))
-        buttons.Add(CONTEXT_BUTTON_ADD_FAVOURITE, 14077);     // Remove Favourite
-      else
-        buttons.Add(CONTEXT_BUTTON_ADD_FAVOURITE, 14076);     // Add To Favourites;
     }
     if (itemNumber > (g_partyModeManager.IsEnabled() ? 1 : 0))
       buttons.Add(CONTEXT_BUTTON_MOVE_ITEM_UP, 13332);
@@ -488,12 +482,6 @@ bool CGUIWindowVideoPlaylist::OnContextButton(int itemNumber, CONTEXT_BUTTON but
   case CONTEXT_BUTTON_DELETE:
     RemovePlayListItem(itemNumber);
     return true;
-  case CONTEXT_BUTTON_ADD_FAVOURITE:
-    {
-      CFileItemPtr item = m_vecItems->Get(itemNumber);
-      CServiceBroker::GetFavouritesService().AddOrRemove(*item.get(), GetID());
-      return true;
-    }
   case CONTEXT_BUTTON_CANCEL_PARTYMODE:
     g_partyModeManager.Disable();
     return true;
diff --git a/xbmc/windows/GUIMediaWindow.cpp b/xbmc/windows/GUIMediaWindow.cpp
index 525ac351bb10..850326154a6f 100644
--- a/xbmc/windows/GUIMediaWindow.cpp
+++ b/xbmc/windows/GUIMediaWindow.cpp
@@ -28,7 +28,6 @@
 #include "dialogs/GUIDialogMediaFilter.h"
 #include "dialogs/GUIDialogProgress.h"
 #include "dialogs/GUIDialogSmartPlaylistEditor.h"
-#include "favourites/FavouritesService.h"
 #include "filesystem/File.h"
 #include "filesystem/DirectoryFactory.h"
 #include "filesystem/FileDirectoryFactory.h"
@@ -1785,18 +1784,6 @@ void CGUIMediaWindow::GetContextButtons(int itemNumber, CContextButtons &buttons
   if (!item || item->IsParentFolder())
     return;
 
-  //! @todo FAVOURITES Conditions on masterlock and localisation
-  if (!item->IsParentFolder() && !item->IsPath("add") && !item->IsPath("newplaylist://") &&
-      !URIUtils::IsProtocol(item->GetPath(), "newsmartplaylist") && !URIUtils::IsProtocol(item->GetPath(), "newtag") &&
-      !URIUtils::IsProtocol(item->GetPath(), "musicsearch") &&
-      !StringUtils::StartsWith(item->GetPath(), "pvr://guide/") && !StringUtils::StartsWith(item->GetPath(), "pvr://timers/"))
-  {
-    if (CServiceBroker::GetFavouritesService().IsFavourited(*item.get(), GetID()))
-      buttons.Add(CONTEXT_BUTTON_ADD_FAVOURITE, 14077);     // Remove Favourite
-    else
-      buttons.Add(CONTEXT_BUTTON_ADD_FAVOURITE, 14076);     // Add To Favourites;
-  }
-
   if (item->IsFileFolder(EFILEFOLDER_MASK_ONBROWSE))
     buttons.Add(CONTEXT_BUTTON_BROWSE_INTO, 37015);
 
@@ -1806,12 +1793,6 @@ bool CGUIMediaWindow::OnContextButton(int itemNumber, CONTEXT_BUTTON button)
 {
   switch (button)
   {
-  case CONTEXT_BUTTON_ADD_FAVOURITE:
-    {
-      CFileItemPtr item = m_vecItems->Get(itemNumber);
-      CServiceBroker::GetFavouritesService().AddOrRemove(*item.get(), GetID());
-      return true;
-    }
   case CONTEXT_BUTTON_BROWSE_INTO:
     {
       CFileItemPtr item = m_vecItems->Get(itemNumber);
