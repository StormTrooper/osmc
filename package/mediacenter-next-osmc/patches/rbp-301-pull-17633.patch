From 14778d5330d3f904421fb95f50a1f61e57f82f41 Mon Sep 17 00:00:00 2001
From: phunkyfish <phunkyfish@gmail.com>
Date: Wed, 8 Apr 2020 20:32:51 +0100
Subject: [PATCH 1/5] [inputstream] stop overflow when sending props to
 Inputstream and fix naming

---
 .../include/kodi/addon-instance/Inputstream.h        |  6 +++---
 .../VideoPlayer/DVDInputStreams/InputStreamAddon.cpp | 12 ++++++++++++
 .../Interface/Addon/InputStreamConstants.h           |  5 +++++
 3 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
index fac16db9e5d8..570d3f5277ba 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
@@ -19,8 +19,10 @@
 
 #ifdef BUILD_KODI_ADDON
 #include "../DemuxPacket.h"
+#include "../InputStreamConstants.h"
 #else
 #include "cores/VideoPlayer/Interface/Addon/DemuxPacket.h"
+#include "cores/VideoPlayer/Interface/Addon/InputStreamConstants.h"
 #endif
 
 //Increment this level always if you add features which can lead to compile failures in the addon
@@ -69,8 +71,6 @@ extern "C"
    */
   struct INPUTSTREAM
   {
-    static const unsigned int MAX_INFO_COUNT = 30;
-
     const char* m_strURL;
 
     unsigned int m_nCountInfoValues;
@@ -78,7 +78,7 @@ extern "C"
     {
       const char* m_strKey;
       const char* m_strValue;
-    } m_ListItemProperties[MAX_INFO_COUNT];
+    } m_ListItemProperties[STREAM_MAX_PROPERTY_COUNT];
 
     const char* m_libFolder;
     const char* m_profileFolder;
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
index 4dae80e527c6..6296517348ee 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
@@ -19,6 +19,7 @@
 #include "filesystem/SpecialProtocol.h"
 #include "utils/StringUtils.h"
 #include "utils/URIUtils.h"
+#include "utils/log.h"
 
 CInputStreamProvider::CInputStreamProvider(ADDON::BinaryAddonBasePtr addonBase,
                                            KODI_HANDLE parentInstance)
@@ -137,6 +138,17 @@ bool CInputStreamAddon::Open()
     props.m_ListItemProperties[props.m_nCountInfoValues].m_strKey = pair.first.c_str();
     props.m_ListItemProperties[props.m_nCountInfoValues].m_strValue = pair.second.c_str();
     props.m_nCountInfoValues++;
+
+    if (props.m_nCountInfoValues >= STREAM_MAX_PROPERTY_COUNT)
+    {
+      CLog::Log(LOGERROR,
+                "CInputStreamAddon::%s - Hit max count of stream properties, "
+                "have %d, actual count: %d",
+                __func__,
+                STREAM_MAX_PROPERTY_COUNT,
+                propsMap.size());
+      break;
+    }
   }
 
   props.m_strURL = m_item.GetDynPath().c_str();
diff --git a/xbmc/cores/VideoPlayer/Interface/Addon/InputStreamConstants.h b/xbmc/cores/VideoPlayer/Interface/Addon/InputStreamConstants.h
index 91011f107f6a..1ca3339dcb92 100644
--- a/xbmc/cores/VideoPlayer/Interface/Addon/InputStreamConstants.h
+++ b/xbmc/cores/VideoPlayer/Interface/Addon/InputStreamConstants.h
@@ -28,3 +28,8 @@
  * ffmpeg to directly play a stream URL.
  */
 #define STREAM_PROPERTY_VALUE_INPUTSTREAMFFMPEG "inputstream.ffmpeg"
+
+/*!
+ * @brief Max number of properties that can be sent to an Inputstream addon
+ */
+#define STREAM_MAX_PROPERTY_COUNT 30

From 9a78b27adcf5b1995c4e2ce40f52703f18a79ffa Mon Sep 17 00:00:00 2001
From: phunkyfish <phunkyfish@gmail.com>
Date: Thu, 9 Apr 2020 10:30:17 +0100
Subject: [PATCH 2/5] [inputstream] increase number of supported streams to 256

---
 .../include/kodi/addon-instance/Inputstream.h                   | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
index 570d3f5277ba..ae5b02083d4c 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
@@ -89,7 +89,7 @@ extern "C"
    */
   struct INPUTSTREAM_IDS
   {
-    static const unsigned int MAX_STREAM_COUNT = 32;
+    static const unsigned int MAX_STREAM_COUNT = 256;
     unsigned int m_streamCount;
     unsigned int m_streamIds[MAX_STREAM_COUNT];
   };

From 852b50b46a37849f06a079b4e2e602a1a22475d1 Mon Sep 17 00:00:00 2001
From: phunkyfish <phunkyfish@gmail.com>
Date: Tue, 14 Apr 2020 20:36:56 +0100
Subject: [PATCH 3/5] [inputstream] Remove Pause from Inputstream API and
 PauseStream from Inputstream Addons

---
 .../include/kodi/addon-instance/Inputstream.h     | 15 ---------------
 .../VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp    |  6 ------
 .../VideoPlayer/DVDInputStreams/DVDInputStream.h  |  1 -
 .../DVDInputStreams/DVDInputStreamBluray.h        |  1 -
 .../DVDInputStreams/DVDInputStreamFFmpeg.h        |  1 -
 .../DVDInputStreams/DVDInputStreamFile.h          |  1 -
 .../DVDInputStreams/DVDInputStreamNavigator.h     |  1 -
 .../DVDInputStreams/DVDInputStreamStack.h         |  1 -
 .../DVDInputStreams/InputStreamAddon.cpp          |  9 ---------
 .../DVDInputStreams/InputStreamAddon.h            |  1 -
 .../DVDInputStreams/InputStreamMultiSource.h      |  1 -
 .../DVDInputStreams/InputStreamPVRBase.h          |  1 -
 12 files changed, 39 deletions(-)

diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
index ae5b02083d4c..caae30fd2018 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
@@ -357,7 +357,6 @@ extern "C"
                                   int whence);
     int64_t(__cdecl* position_stream)(const AddonInstance_InputStream* instance);
     int64_t(__cdecl* length_stream)(const AddonInstance_InputStream* instance);
-    void(__cdecl* pause_stream)(const AddonInstance_InputStream* instance, double time);
     bool(__cdecl* is_real_time_stream)(const AddonInstance_InputStream* instance);
 
     // IChapter
@@ -597,14 +596,6 @@ class CInstanceInputStream : public IAddonInstance
      */
   virtual int GetBlockSize() { return 0; }
 
-  /*!
-     * @brief Notify the InputStream addon that Kodi (un)paused the currently playing stream.
-     * Only called when an inpustream DOES NOT have its own demuxer.
-     * @param time The time that Kodi (un)paused the stream
-     */
-  virtual void PauseStream(double time) {}
-
-
   /*!
      *  Check for real-time streaming
      *  @return true if current stream is real-time
@@ -687,7 +678,6 @@ class CInstanceInputStream : public IAddonInstance
     m_instanceData->toAddon.seek_stream = ADDON_SeekStream;
     m_instanceData->toAddon.position_stream = ADDON_PositionStream;
     m_instanceData->toAddon.length_stream = ADDON_LengthStream;
-    m_instanceData->toAddon.pause_stream = ADDON_PauseStream;
     m_instanceData->toAddon.is_real_time_stream = ADDON_IsRealTimeStream;
 
     int minChapterVersion[3] = { 2, 0, 10 };
@@ -874,11 +864,6 @@ class CInstanceInputStream : public IAddonInstance
     return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->GetBlockSize();
   }
 
-  inline static void ADDON_PauseStream(const AddonInstance_InputStream* instance, double time)
-  {
-    static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->PauseStream(time);
-  }
-
   inline static bool ADDON_IsRealTimeStream(const AddonInstance_InputStream* instance)
   {
     return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->IsRealTimeStream();
diff --git a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
index 6d1255162652..88b393bbac59 100644
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
@@ -714,15 +714,9 @@ void CDVDDemuxFFmpeg::SetSpeed(int iSpeed)
     return;
 
   if (m_speed != DVD_PLAYSPEED_PAUSE && iSpeed == DVD_PLAYSPEED_PAUSE)
-  {
-    m_pInput->Pause(m_currentPts);
     av_read_pause(m_pFormatContext);
-  }
   else if (m_speed == DVD_PLAYSPEED_PAUSE && iSpeed != DVD_PLAYSPEED_PAUSE)
-  {
-    m_pInput->Pause(m_currentPts);
     av_read_play(m_pFormatContext);
-  }
   m_speed = iSpeed;
 
   AVDiscard discard = AVDISCARD_NONE;
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStream.h b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStream.h
index f220d138c9fd..a732fc6ea21d 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStream.h
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStream.h
@@ -148,7 +148,6 @@ class CDVDInputStream
   virtual void Close();
   virtual int Read(uint8_t* buf, int buf_size) = 0;
   virtual int64_t Seek(int64_t offset, int whence) = 0;
-  virtual bool Pause(double dTime) = 0;
   virtual int64_t GetLength() = 0;
   virtual std::string& GetContent() { return m_content; };
   virtual std::string GetFileName();
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.h b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.h
index 1abd0db71c5f..ff765cf6ce31 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.h
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.h
@@ -54,7 +54,6 @@ class CDVDInputStreamBluray
   void Close() override;
   int Read(uint8_t* buf, int buf_size) override;
   int64_t Seek(int64_t offset, int whence) override;
-  bool Pause(double dTime) override { return false; };
   void Abort() override;
   bool IsEOF() override;
   int64_t GetLength() override;
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamFFmpeg.h b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamFFmpeg.h
index e34855ebb069..a3ea4d7ef345 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamFFmpeg.h
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamFFmpeg.h
@@ -20,7 +20,6 @@ class CDVDInputStreamFFmpeg
   void Close() override;
   int Read(uint8_t* buf, int buf_size) override;
   int64_t Seek(int64_t offset, int whence) override;
-  bool Pause(double dTime) override { return false; };
   bool IsEOF() override;
   int64_t GetLength() override;
   std::string GetFileName() override;
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamFile.h b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamFile.h
index c1d8fa12da7c..9546ae8b9779 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamFile.h
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamFile.h
@@ -19,7 +19,6 @@ class CDVDInputStreamFile : public CDVDInputStream
   void Close() override;
   int Read(uint8_t* buf, int buf_size) override;
   int64_t Seek(int64_t offset, int whence) override;
-  bool Pause(double dTime) override { return false; };
   bool IsEOF() override;
   int64_t GetLength() override;
   BitstreamStats GetBitstreamStats() const override ;
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamNavigator.h b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamNavigator.h
index c92022d96b29..3f262556c2b6 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamNavigator.h
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamNavigator.h
@@ -49,7 +49,6 @@ class CDVDInputStreamNavigator
   void Close() override;
   int Read(uint8_t* buf, int buf_size) override;
   int64_t Seek(int64_t offset, int whence) override;
-  bool Pause(double dTime) override { return false; };
   int GetBlockSize() override { return DVDSTREAM_BLOCK_SIZE_DVD; }
   bool IsEOF() override { return m_bEOF; }
   int64_t GetLength() override { return 0; }
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamStack.h b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamStack.h
index ac10b47b863d..02befe8eb7c2 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamStack.h
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamStack.h
@@ -23,7 +23,6 @@ class CDVDInputStreamStack : public CDVDInputStream
   void Close() override;
   int Read(uint8_t* buf, int buf_size) override;
   int64_t Seek(int64_t offset, int whence) override;
-  bool Pause(double dTime) override { return false; };
   bool IsEOF() override;
   int64_t GetLength() override;
 
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
index 6296517348ee..e4fd34296911 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
@@ -220,15 +220,6 @@ int CInputStreamAddon::GetBlockSize()
   return m_struct.toAddon.block_size_stream(&m_struct);
 }
 
-bool CInputStreamAddon::Pause(double time)
-{
-  if (!m_struct.toAddon.pause_stream)
-    return false;
-
-  m_struct.toAddon.pause_stream(&m_struct, time);
-  return true;
-}
-
 bool CInputStreamAddon::CanSeek()
 {
   return (m_caps.m_mask & INPUTSTREAM_CAPABILITIES::SUPPORTS_SEEK) != 0;
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.h b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.h
index 6e1187c79cb0..2c8a7fc8ff47 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.h
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.h
@@ -53,7 +53,6 @@ class CInputStreamAddon
   void Close() override;
   int Read(uint8_t* buf, int buf_size) override;
   int64_t Seek(int64_t offset, int whence) override;
-  bool Pause(double dTime) override;
   int64_t GetLength() override;
   int GetBlockSize() override;
   bool IsEOF() override;
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamMultiSource.h b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamMultiSource.h
index a3d4eb2232c0..d1dd6ca42364 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamMultiSource.h
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamMultiSource.h
@@ -32,7 +32,6 @@ class CInputStreamMultiSource : public InputStreamMultiStreams
   bool IsEOF() override;
   CDVDInputStream::ENextStream NextStream() override;
   bool Open() override;
-  bool Pause(double dTime)override { return false; };
   int Read(uint8_t* buf, int buf_size) override;
   int64_t Seek(int64_t offset, int whence) override;
   void SetReadRate(unsigned rate) override;
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamPVRBase.h b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamPVRBase.h
index 0f5b0d352829..12b9bdace385 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamPVRBase.h
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamPVRBase.h
@@ -36,7 +36,6 @@ class CInputStreamPVRBase
   void Close() override;
   int Read(uint8_t* buf, int buf_size) override;
   int64_t Seek(int64_t offset, int whence) override;
-  bool Pause(double dTime) override { return false; }
   bool IsEOF() override;
   int64_t GetLength() override;
   int GetBlockSize() override;

From 4b6e883e3a484b7da3cfc16967dbe9d734b8f2bd Mon Sep 17 00:00:00 2001
From: phunkyfish <phunkyfish@gmail.com>
Date: Wed, 8 Apr 2020 20:32:58 +0100
Subject: [PATCH 4/5] [inputstream] bump API to v2.2.0

---
 xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
index e2c36f4c2c89..69515b151530 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
@@ -85,8 +85,8 @@
 #define ADDON_INSTANCE_VERSION_IMAGEDECODER_XML_ID    "kodi.binary.instance.imagedecoder"
 #define ADDON_INSTANCE_VERSION_IMAGEDECODER_DEPENDS   "addon-instance/ImageDecoder.h"
 
-#define ADDON_INSTANCE_VERSION_INPUTSTREAM            "2.1.0"
-#define ADDON_INSTANCE_VERSION_INPUTSTREAM_MIN        "2.1.0"
+#define ADDON_INSTANCE_VERSION_INPUTSTREAM            "2.2.0"
+#define ADDON_INSTANCE_VERSION_INPUTSTREAM_MIN        "2.2.0"
 #define ADDON_INSTANCE_VERSION_INPUTSTREAM_XML_ID     "kodi.binary.instance.inputstream"
 #define ADDON_INSTANCE_VERSION_INPUTSTREAM_DEPENDS    "addon-instance/Inputstream.h"
 

From d1098a4dfeca2c039cde103ff3733d7982a60416 Mon Sep 17 00:00:00 2001
From: phunkyfish <phunkyfish@gmail.com>
Date: Wed, 15 Apr 2020 20:54:38 +0100
Subject: [PATCH 5/5] [inputstream] add support for new property name to load
 inputstreams

---
 .../DVDInputStreams/DVDFactoryInputStream.cpp            | 7 ++++++-
 .../VideoPlayer/DVDInputStreams/InputStreamAddon.cpp     | 9 +++++++--
 .../VideoPlayer/Interface/Addon/InputStreamConstants.h   | 4 ++--
 3 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDFactoryInputStream.cpp b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDFactoryInputStream.cpp
index 111e7b51a1d6..3a373d4a2be6 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDFactoryInputStream.cpp
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDFactoryInputStream.cpp
@@ -59,7 +59,12 @@ std::shared_ptr<CDVDInputStream> CDVDFactoryInputStream::CreateInputStream(IVide
       return std::shared_ptr<CInputStreamAddon>(new CInputStreamAddon(addonInfo, pPlayer, fileitem));
   }
 
-  if (fileitem.GetProperty(STREAM_PROPERTY_INPUTSTREAMCLASS).asString() ==
+  if (fileitem.GetProperty(STREAM_PROPERTY_INPUTSTREAM).asString() ==
+      STREAM_PROPERTY_VALUE_INPUTSTREAMFFMPEG)
+    return std::shared_ptr<CDVDInputStreamFFmpeg>(new CDVDInputStreamFFmpeg(fileitem));
+
+  // TODO; Retire for the above instead prior to Matrix release
+  if (fileitem.GetProperty("inputstreamclass").asString() ==
       STREAM_PROPERTY_VALUE_INPUTSTREAMFFMPEG)
     return std::shared_ptr<CDVDInputStreamFFmpeg>(new CDVDInputStreamFFmpeg(fileitem));
 
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
index e4fd34296911..b46be5738dcd 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
@@ -69,11 +69,16 @@ CInputStreamAddon::~CInputStreamAddon()
 bool CInputStreamAddon::Supports(BinaryAddonBasePtr& addonBase, const CFileItem &fileitem)
 {
   // check if a specific inputstream addon is requested
-  CVariant addon = fileitem.GetProperty(STREAM_PROPERTY_INPUTSTREAMCLASS);
+  CVariant addon = fileitem.GetProperty(STREAM_PROPERTY_INPUTSTREAM);
   if (!addon.isNull())
     return (addon.asString() == addonBase->ID());
 
-  // TODO: to be deprecated for the above - all addons must change
+  // TODO: to be deprecated for the above prior to Matrix release - all addons must change
+  addon = fileitem.GetProperty("inputstreamclass");
+  if (!addon.isNull())
+    return (addon.asString() == addonBase->ID());
+
+  // TODO: to be deprecated for the above prior to Matrix release - all addons must change
   addon = fileitem.GetProperty("inputstreamaddon");
   if (!addon.isNull())
     return (addon.asString() == addonBase->ID());
diff --git a/xbmc/cores/VideoPlayer/Interface/Addon/InputStreamConstants.h b/xbmc/cores/VideoPlayer/Interface/Addon/InputStreamConstants.h
index 1ca3339dcb92..1c5ce7fc2354 100644
--- a/xbmc/cores/VideoPlayer/Interface/Addon/InputStreamConstants.h
+++ b/xbmc/cores/VideoPlayer/Interface/Addon/InputStreamConstants.h
@@ -14,7 +14,7 @@
  * Kodi's built-in playing capabilities or to allow ffmpeg to handle directly
  * set to STREAM_PROPERTY_VALUE_INPUTSTREAMFFMPEG.
  */
-#define STREAM_PROPERTY_INPUTSTREAMCLASS "inputstreamclass"
+#define STREAM_PROPERTY_INPUTSTREAM "inputstream"
 
 /*!
  * @brief "true" to denote that the stream that should be played is a
@@ -24,7 +24,7 @@
 #define STREAM_PROPERTY_ISREALTIMESTREAM "isrealtimestream"
 
 /*!
- * @brief special value for STREAM_PROPERTY_INPUTSTREAMCLASS to use
+ * @brief special value for STREAM_PROPERTY_INPUTSTREAM to use
  * ffmpeg to directly play a stream URL.
  */
 #define STREAM_PROPERTY_VALUE_INPUTSTREAMFFMPEG "inputstream.ffmpeg"
