From bc4a1273cdc7a606aba92f6ea0ff8143cae7ac45 Mon Sep 17 00:00:00 2001
From: Rikard Falkeborn <rikard.falkeborn@gmail.com>
Date: Thu, 21 Feb 2019 22:40:03 +0100
Subject: [PATCH 1/3] [audioengine] Const correct Utils

---
 .../AudioEngine/Utils/AEBitstreamPacker.cpp   |  2 +-
 .../AudioEngine/Utils/AEBitstreamPacker.h     |  2 +-
 xbmc/cores/AudioEngine/Utils/AELimiter.h      |  2 +-
 xbmc/cores/AudioEngine/Utils/AEStreamInfo.cpp |  2 +-
 xbmc/cores/AudioEngine/Utils/AEStreamInfo.h   | 22 +++++++++----------
 xbmc/cores/AudioEngine/Utils/AEUtil.cpp       |  2 +-
 xbmc/cores/AudioEngine/Utils/AEUtil.h         |  2 +-
 7 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/xbmc/cores/AudioEngine/Utils/AEBitstreamPacker.cpp b/xbmc/cores/AudioEngine/Utils/AEBitstreamPacker.cpp
index 19ea46fb7558..1027675be351 100644
--- a/xbmc/cores/AudioEngine/Utils/AEBitstreamPacker.cpp
+++ b/xbmc/cores/AudioEngine/Utils/AEBitstreamPacker.cpp
@@ -112,7 +112,7 @@ bool CAEBitstreamPacker::PackPause(CAEStreamInfo &info, unsigned int millis, boo
   return true;
 }
 
-unsigned int CAEBitstreamPacker::GetSize()
+unsigned int CAEBitstreamPacker::GetSize() const
 {
   return m_dataSize;
 }
diff --git a/xbmc/cores/AudioEngine/Utils/AEBitstreamPacker.h b/xbmc/cores/AudioEngine/Utils/AEBitstreamPacker.h
index aaa153bc069f..8e2c826a063e 100644
--- a/xbmc/cores/AudioEngine/Utils/AEBitstreamPacker.h
+++ b/xbmc/cores/AudioEngine/Utils/AEBitstreamPacker.h
@@ -25,7 +25,7 @@ class CAEBitstreamPacker
   bool PackPause(CAEStreamInfo &info, unsigned int millis, bool iecBursts);
   void Reset();
   uint8_t* GetBuffer();
-  unsigned int GetSize();
+  unsigned int GetSize() const;
   static unsigned int GetOutputRate(CAEStreamInfo &info);
   static CAEChannelInfo GetOutputChannelMap(CAEStreamInfo &info);
 
diff --git a/xbmc/cores/AudioEngine/Utils/AELimiter.h b/xbmc/cores/AudioEngine/Utils/AELimiter.h
index 26dba1def0f0..75eaeb3eb67a 100644
--- a/xbmc/cores/AudioEngine/Utils/AELimiter.h
+++ b/xbmc/cores/AudioEngine/Utils/AELimiter.h
@@ -28,7 +28,7 @@ class CAELimiter
       m_amplify = std::max(std::min(amplify, 1000.0f), 0.0f);
     }
 
-    float GetAmplification()
+    float GetAmplification() const
     {
       return m_amplify;
     }
diff --git a/xbmc/cores/AudioEngine/Utils/AEStreamInfo.cpp b/xbmc/cores/AudioEngine/Utils/AEStreamInfo.cpp
index 3e3912fadadb..0b3c07e4161a 100644
--- a/xbmc/cores/AudioEngine/Utils/AEStreamInfo.cpp
+++ b/xbmc/cores/AudioEngine/Utils/AEStreamInfo.cpp
@@ -59,7 +59,7 @@ CAEStreamParser::CAEStreamParser() :
   av_crc_init(m_crcTrueHD, 0, 16, 0x2D, sizeof(m_crcTrueHD));
 }
 
-double CAEStreamInfo::GetDuration()
+double CAEStreamInfo::GetDuration() const
 {
   double duration = 0;
   switch (m_type)
diff --git a/xbmc/cores/AudioEngine/Utils/AEStreamInfo.h b/xbmc/cores/AudioEngine/Utils/AEStreamInfo.h
index 941344a08ee4..22dd5aced25a 100644
--- a/xbmc/cores/AudioEngine/Utils/AEStreamInfo.h
+++ b/xbmc/cores/AudioEngine/Utils/AEStreamInfo.h
@@ -22,7 +22,7 @@ extern "C" {
 class CAEStreamInfo
 {
 public:
-  double GetDuration();
+  double GetDuration() const;
   bool operator==(const CAEStreamInfo& info) const;
 
   enum DataType
@@ -58,16 +58,16 @@ class CAEStreamParser
   int AddData(uint8_t *data, unsigned int size, uint8_t **buffer = NULL, unsigned int *bufferSize = 0);
 
   void SetCoreOnly(bool value) { m_coreOnly = value; }
-  unsigned int IsValid() { return m_hasSync; }
-  unsigned int GetSampleRate() { return m_info.m_sampleRate; }
-  unsigned int GetChannels() { return m_info.m_channels; }
-  unsigned int GetFrameSize() { return m_fsize; }
-  // unsigned int GetDTSBlocks() { return m_dtsBlocks; }
-  unsigned int GetDTSPeriod() { return m_info.m_dtsPeriod; }
-  unsigned int GetEAC3BlocksDiv() { return m_info.m_repeat; }
-  enum CAEStreamInfo::DataType GetDataType() { return m_info.m_type; }
-  bool IsLittleEndian() { return m_info.m_dataIsLE; }
-  unsigned int GetBufferSize() { return m_bufferSize; }
+  unsigned int IsValid() const { return m_hasSync; }
+  unsigned int GetSampleRate() const { return m_info.m_sampleRate; }
+  unsigned int GetChannels() const { return m_info.m_channels; }
+  unsigned int GetFrameSize() const { return m_fsize; }
+  // unsigned int GetDTSBlocks() const { return m_dtsBlocks; }
+  unsigned int GetDTSPeriod() const { return m_info.m_dtsPeriod; }
+  unsigned int GetEAC3BlocksDiv() const { return m_info.m_repeat; }
+  enum CAEStreamInfo::DataType const GetDataType() const { return m_info.m_type; }
+  bool IsLittleEndian() const { return m_info.m_dataIsLE; }
+  unsigned int GetBufferSize() const { return m_bufferSize; }
   CAEStreamInfo& GetStreamInfo() { return m_info; }
   void Reset();
 
diff --git a/xbmc/cores/AudioEngine/Utils/AEUtil.cpp b/xbmc/cores/AudioEngine/Utils/AEUtil.cpp
index 3cac720fd546..03956c1584a1 100644
--- a/xbmc/cores/AudioEngine/Utils/AEUtil.cpp
+++ b/xbmc/cores/AudioEngine/Utils/AEUtil.cpp
@@ -33,7 +33,7 @@ void AEDelayStatus::SetDelay(double d)
   tick = CurrentHostCounter();
 }
 
-double AEDelayStatus::GetDelay()
+double AEDelayStatus::GetDelay() const
 {
   double d = 0;
   if (tick)
diff --git a/xbmc/cores/AudioEngine/Utils/AEUtil.h b/xbmc/cores/AudioEngine/Utils/AEUtil.h
index 533bc595bb7a..18380e8f43e1 100644
--- a/xbmc/cores/AudioEngine/Utils/AEUtil.h
+++ b/xbmc/cores/AudioEngine/Utils/AEUtil.h
@@ -42,7 +42,7 @@ enum AVSync
 struct AEDelayStatus
 {
   void   SetDelay(double d);
-  double GetDelay();
+  double GetDelay() const;
 
   double delay = 0.0;  // delay in sink currently
   double maxcorrection = 0.0; // time correction must not be greater than sink delay

From 45c3227f0740f052eab012d74e59f87f3b5d245a Mon Sep 17 00:00:00 2001
From: Rikard Falkeborn <rikard.falkeborn@gmail.com>
Date: Thu, 21 Feb 2019 23:13:01 +0100
Subject: [PATCH 2/3] [audioengine] Const correct ActiveAE

---
 xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.cpp      | 2 +-
 xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.h        | 2 +-
 .../cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp | 6 +++---
 xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.h  | 6 +++---
 .../cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.cpp | 8 ++++----
 xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.h  | 8 ++++----
 xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEStream.h  | 2 +-
 7 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.cpp b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.cpp
index 7f6a9de4795b..1c3195d1de47 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.cpp
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.cpp
@@ -208,7 +208,7 @@ float CEngineStats::GetCacheTotal()
   return MAX_CACHE_LEVEL;
 }
 
-float CEngineStats::GetMaxDelay()
+float CEngineStats::GetMaxDelay() const
 {
   return MAX_CACHE_LEVEL + MAX_WATER_LEVEL + m_sinkCacheTotal;
 }
diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.h b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.h
index c54cf05235d8..2e015a5b4c29 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.h
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.h
@@ -184,7 +184,7 @@ class CEngineStats
   void GetSyncInfo(CAESyncInfo& info, CActiveAEStream *stream);
   float GetCacheTime(CActiveAEStream *stream);
   float GetCacheTotal();
-  float GetMaxDelay();
+  float GetMaxDelay() const;
   float GetWaterLevel();
   void SetSuspended(bool state);
   void SetCurrentSinkFormat(const AEAudioFormat& SinkFormat);
diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp
index 5a0f3b57f44f..7f6560347d19 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp
@@ -438,7 +438,7 @@ void CActiveAEBufferPoolResample::SetRR(double rr)
   m_resampleRatio = rr;
 }
 
-double CActiveAEBufferPoolResample::GetRR()
+double CActiveAEBufferPoolResample::GetRR() const
 {
   return m_resampleRatio;
 }
@@ -448,7 +448,7 @@ void CActiveAEBufferPoolResample::FillBuffer()
   m_fillPackets = true;
 }
 
-bool CActiveAEBufferPoolResample::DoesNormalize()
+bool CActiveAEBufferPoolResample::DoesNormalize() const
 {
   return m_normalize;
 }
@@ -687,7 +687,7 @@ void CActiveAEBufferPoolAtempo::SetTempo(float tempo)
   m_tempo = tempo;
 }
 
-float CActiveAEBufferPoolAtempo::GetTempo()
+float CActiveAEBufferPoolAtempo::GetTempo() const
 {
   return m_tempo;
 }
diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.h b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.h
index 20fbac5e4565..6c9a34cc5829 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.h
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.h
@@ -85,9 +85,9 @@ class CActiveAEBufferPoolResample : public CActiveAEBufferPool
   void Flush();
   void SetDrain(bool drain);
   void SetRR(double rr);
-  double GetRR();
+  double GetRR() const;
   void FillBuffer();
-  bool DoesNormalize();
+  bool DoesNormalize() const;
   void ForceResampler(bool force);
   AEAudioFormat m_inputFormat;
   std::deque<CSampleBuffer*> m_inputSamples;
@@ -125,7 +125,7 @@ class CActiveAEBufferPoolAtempo : public CActiveAEBufferPool
   float GetDelay();
   void Flush();
   void SetTempo(float tempo);
-  float GetTempo();
+  float GetTempo() const;
   void FillBuffer();
   void SetDrain(bool drain);
   std::deque<CSampleBuffer*> m_inputSamples;
diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.cpp b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.cpp
index f9f99370493b..280901859387 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.cpp
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.cpp
@@ -314,17 +314,17 @@ int CActiveAEFilter::ProcessFilter(uint8_t **dst_buffer, int dst_samples, uint8_
   return 0;
 }
 
-bool CActiveAEFilter::IsEof()
+bool CActiveAEFilter::IsEof() const
 {
   return m_filterEof;
 }
 
-bool CActiveAEFilter::NeedData()
+bool CActiveAEFilter::NeedData() const
 {
   return m_needData;
 }
 
-bool CActiveAEFilter::IsActive()
+bool CActiveAEFilter::IsActive() const
 {
   if (m_pFilterGraph)
     return true;
@@ -332,7 +332,7 @@ bool CActiveAEFilter::IsActive()
     return false;
 }
 
-int CActiveAEFilter::GetBufferedSamples()
+int CActiveAEFilter::GetBufferedSamples() const
 {
   int ret = m_SamplesIn - (m_SamplesOut * m_tempo);
   if (m_hasData)
diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.h b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.h
index 42a129879614..41cec3d8cbc4 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.h
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.h
@@ -26,10 +26,10 @@ class CActiveAEFilter
   void Init(AVSampleFormat fmt, int sampleRate, uint64_t channelLayout);
   int ProcessFilter(uint8_t **dst_buffer, int dst_samples, uint8_t **src_buffer, int src_samples, int src_bufsize);
   bool SetTempo(float tempo);
-  bool NeedData();
-  bool IsEof();
-  bool IsActive();
-  int GetBufferedSamples();
+  bool NeedData() const;
+  bool IsEof() const;
+  bool IsActive() const;
+  int GetBufferedSamples() const;
 
 protected:
   bool CreateFilterGraph();
diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEStream.h b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEStream.h
index 1c9db008c895..2bf5374af8ea 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEStream.h
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEStream.h
@@ -73,7 +73,7 @@ class CSyncError
   }
 
 protected:
-  double Get()
+  double Get() const
   {
     if(m_count)
       return m_buffer / m_count;

From 5af610ca65356e312de9dceec99f034aa87484c9 Mon Sep 17 00:00:00 2001
From: Rikard Falkeborn <rikard.falkeborn@gmail.com>
Date: Sat, 23 Feb 2019 10:09:49 +0100
Subject: [PATCH 3/3] [audioengine] Const correct Sinks

---
 xbmc/cores/AudioEngine/Sinks/AESinkXAudio.h        | 2 +-
 xbmc/cores/AudioEngine/Sinks/osx/CoreAudioDevice.h | 2 +-
 xbmc/cores/AudioEngine/Sinks/osx/CoreAudioStream.h | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkXAudio.h b/xbmc/cores/AudioEngine/Sinks/AESinkXAudio.h
index 4662f83639b0..16c683a33395 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkXAudio.h
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkXAudio.h
@@ -86,7 +86,7 @@ class CAESinkXAudio : public IAESink
 
       struct handle_closer
       {
-        void operator()(HANDLE h)
+        void operator()(HANDLE h) const
         {
           assert(h != INVALID_HANDLE_VALUE);
           if (h)
diff --git a/xbmc/cores/AudioEngine/Sinks/osx/CoreAudioDevice.h b/xbmc/cores/AudioEngine/Sinks/osx/CoreAudioDevice.h
index 4223e7d31158..bdaacdca8911 100644
--- a/xbmc/cores/AudioEngine/Sinks/osx/CoreAudioDevice.h
+++ b/xbmc/cores/AudioEngine/Sinks/osx/CoreAudioDevice.h
@@ -38,7 +38,7 @@ class CCoreAudioDevice
   void          RemoveObjectListenerProc(AudioObjectPropertyListenerProc callback, void *pClientData);
   bool          SetObjectListenerProc(AudioObjectPropertyListenerProc callback, void *pClientData);
 
-  AudioDeviceID GetId() {return m_DeviceId;}
+  AudioDeviceID GetId() const {return m_DeviceId;}
   std::string   GetName() const;
   bool          IsDigital() const;
   UInt32        GetTransportType() const;
diff --git a/xbmc/cores/AudioEngine/Sinks/osx/CoreAudioStream.h b/xbmc/cores/AudioEngine/Sinks/osx/CoreAudioStream.h
index 648a04ccb03c..87eb24df1e04 100644
--- a/xbmc/cores/AudioEngine/Sinks/osx/CoreAudioStream.h
+++ b/xbmc/cores/AudioEngine/Sinks/osx/CoreAudioStream.h
@@ -30,7 +30,7 @@ class CCoreAudioStream
   bool    Open(AudioStreamID streamId);
   void    Close(bool restore = true);
 
-  AudioStreamID GetId() {return m_StreamId;}
+  AudioStreamID GetId() const {return m_StreamId;}
   UInt32  GetDirection();
   static UInt32 GetTerminalType(AudioStreamID id);
   UInt32  GetNumLatencyFrames();
