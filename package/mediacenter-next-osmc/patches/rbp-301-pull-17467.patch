From 354e45745fa17213de3e79508ef0341a96518a05 Mon Sep 17 00:00:00 2001
From: Alwin Esch <alwin.esch@web.de>
Date: Sun, 1 Mar 2020 17:47:03 +0100
Subject: [PATCH 1/2] [addons][inputstream] don't give addon instance class to
 Kodi

This breaks "C" ABI interface and not possible to use as this only.
---
 .../include/kodi/addon-instance/Inputstream.h | 79 +++++++++----------
 1 file changed, 39 insertions(+), 40 deletions(-)

diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
index f90065da73e0..7d6475d25c27 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
@@ -23,14 +23,6 @@
 #include "cores/VideoPlayer/Interface/Addon/DemuxPacket.h"
 #endif
 
-namespace kodi
-{
-namespace addon
-{
-class CInstanceInputStream;
-}
-} // namespace kodi
-
 //Increment this level always if you add features which can lead to compile failures in the addon
 #define INPUTSTREAM_VERSION_LEVEL 2
 
@@ -316,7 +308,7 @@ extern "C"
   struct AddonInstance_InputStream;
   typedef struct KodiToAddonFuncTable_InputStream /* internal */
   {
-    kodi::addon::CInstanceInputStream* addonInstance;
+    KODI_HANDLE addonInstance;
 
     bool(__cdecl* open)(const AddonInstance_InputStream* instance, INPUTSTREAM* props);
     void(__cdecl* close)(const AddonInstance_InputStream* instance);
@@ -720,63 +712,66 @@ class CInstanceInputStream : public IAddonInstance
 
   inline static bool ADDON_Open(const AddonInstance_InputStream* instance, INPUTSTREAM* props)
   {
-    return instance->toAddon.addonInstance->Open(*props);
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->Open(*props);
   }
 
   inline static void ADDON_Close(const AddonInstance_InputStream* instance)
   {
-    instance->toAddon.addonInstance->Close();
+    static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->Close();
   }
 
   inline static void ADDON_GetCapabilities(const AddonInstance_InputStream* instance,
                                            INPUTSTREAM_CAPABILITIES* capabilities)
   {
-    instance->toAddon.addonInstance->GetCapabilities(*capabilities);
+    static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)
+        ->GetCapabilities(*capabilities);
   }
 
 
   // IDemux
   inline static struct INPUTSTREAM_IDS ADDON_GetStreamIds(const AddonInstance_InputStream* instance)
   {
-    return instance->toAddon.addonInstance->GetStreamIds();
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->GetStreamIds();
   }
 
   inline static struct INPUTSTREAM_INFO ADDON_GetStream(const AddonInstance_InputStream* instance,
                                                         int streamid)
   {
-    return instance->toAddon.addonInstance->GetStream(streamid);
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->GetStream(streamid);
   }
 
   inline static void ADDON_EnableStream(const AddonInstance_InputStream* instance,
                                         int streamid,
                                         bool enable)
   {
-    instance->toAddon.addonInstance->EnableStream(streamid, enable);
+    static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)
+        ->EnableStream(streamid, enable);
   }
 
   inline static bool ADDON_OpenStream(const AddonInstance_InputStream* instance, int streamid)
   {
-    return instance->toAddon.addonInstance->OpenStream(streamid);
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)
+        ->OpenStream(streamid);
   }
 
   inline static void ADDON_DemuxReset(const AddonInstance_InputStream* instance)
   {
-    instance->toAddon.addonInstance->DemuxReset();
+    static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->DemuxReset();
   }
 
   inline static void ADDON_DemuxAbort(const AddonInstance_InputStream* instance)
   {
-    instance->toAddon.addonInstance->DemuxAbort();
+    static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->DemuxAbort();
   }
 
   inline static void ADDON_DemuxFlush(const AddonInstance_InputStream* instance)
   {
-    instance->toAddon.addonInstance->DemuxFlush();
+    static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->DemuxFlush();
   }
 
   inline static DemuxPacket* ADDON_DemuxRead(const AddonInstance_InputStream* instance)
   {
-    return instance->toAddon.addonInstance->DemuxRead();
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->DemuxRead();
   }
 
   inline static bool ADDON_DemuxSeekTime(const AddonInstance_InputStream* instance,
@@ -784,80 +779,82 @@ class CInstanceInputStream : public IAddonInstance
                                          bool backwards,
                                          double* startpts)
   {
-    return instance->toAddon.addonInstance->DemuxSeekTime(time, backwards, *startpts);
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)
+        ->DemuxSeekTime(time, backwards, *startpts);
   }
 
   inline static void ADDON_DemuxSetSpeed(const AddonInstance_InputStream* instance, int speed)
   {
-    instance->toAddon.addonInstance->DemuxSetSpeed(speed);
+    static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->DemuxSetSpeed(speed);
   }
 
   inline static void ADDON_SetVideoResolution(const AddonInstance_InputStream* instance,
                                               int width,
                                               int height)
   {
-    instance->toAddon.addonInstance->SetVideoResolution(width, height);
+    static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)
+        ->SetVideoResolution(width, height);
   }
 
 
   // IDisplayTime
   inline static int ADDON_GetTotalTime(const AddonInstance_InputStream* instance)
   {
-    return instance->toAddon.addonInstance->GetTotalTime();
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->GetTotalTime();
   }
 
   inline static int ADDON_GetTime(const AddonInstance_InputStream* instance)
   {
-    return instance->toAddon.addonInstance->GetTime();
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->GetTime();
   }
 
   // ITime
   inline static bool ADDON_GetTimes(const AddonInstance_InputStream* instance,
                                     INPUTSTREAM_TIMES* times)
   {
-    return instance->toAddon.addonInstance->GetTimes(*times);
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->GetTimes(*times);
   }
 
   // IPosTime
   inline static bool ADDON_PosTime(const AddonInstance_InputStream* instance, int ms)
   {
-    return instance->toAddon.addonInstance->PosTime(ms);
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->PosTime(ms);
   }
 
   inline static int ADDON_GetChapter(const AddonInstance_InputStream* instance)
   {
-    return instance->toAddon.addonInstance->GetChapter();
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->GetChapter();
   }
 
   inline static int ADDON_GetChapterCount(const AddonInstance_InputStream* instance)
   {
-    return instance->toAddon.addonInstance->GetChapterCount();
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->GetChapterCount();
   }
 
   inline static const char* ADDON_GetChapterName(const AddonInstance_InputStream* instance, int ch)
   {
-    return instance->toAddon.addonInstance->GetChapterName(ch);
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->GetChapterName(ch);
   }
 
   inline static int64_t ADDON_GetChapterPos(const AddonInstance_InputStream* instance, int ch)
   {
-    return instance->toAddon.addonInstance->GetChapterPos(ch);
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->GetChapterPos(ch);
   }
 
   inline static bool ADDON_SeekChapter(const AddonInstance_InputStream* instance, int ch)
   {
-    return instance->toAddon.addonInstance->SeekChapter(ch);
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->SeekChapter(ch);
   }
 
   // Seekable (mandatory)
   inline static bool ADDON_CanPauseStream(const AddonInstance_InputStream* instance)
   {
-    return instance->toAddon.addonInstance->CanPauseStream();
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->CanPauseStream();
   }
 
   inline static bool ADDON_CanSeekStream(const AddonInstance_InputStream* instance)
   {
-    return instance->toAddon.addonInstance->CanSeekStream();
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->CanSeekStream();
   }
 
 
@@ -865,34 +862,36 @@ class CInstanceInputStream : public IAddonInstance
                                      uint8_t* buffer,
                                      unsigned int bufferSize)
   {
-    return instance->toAddon.addonInstance->ReadStream(buffer, bufferSize);
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)
+        ->ReadStream(buffer, bufferSize);
   }
 
   inline static int64_t ADDON_SeekStream(const AddonInstance_InputStream* instance,
                                          int64_t position,
                                          int whence)
   {
-    return instance->toAddon.addonInstance->SeekStream(position, whence);
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)
+        ->SeekStream(position, whence);
   }
 
   inline static int64_t ADDON_PositionStream(const AddonInstance_InputStream* instance)
   {
-    return instance->toAddon.addonInstance->PositionStream();
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->PositionStream();
   }
 
   inline static int64_t ADDON_LengthStream(const AddonInstance_InputStream* instance)
   {
-    return instance->toAddon.addonInstance->LengthStream();
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->LengthStream();
   }
 
   inline static void ADDON_PauseStream(const AddonInstance_InputStream* instance, double time)
   {
-    instance->toAddon.addonInstance->PauseStream(time);
+    static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->PauseStream(time);
   }
 
   inline static bool ADDON_IsRealTimeStream(const AddonInstance_InputStream* instance)
   {
-    return instance->toAddon.addonInstance->IsRealTimeStream();
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->IsRealTimeStream();
   }
 
   AddonInstance_InputStream* m_instanceData;

From ee13530228766e952ed128c5e1cb3fb9f0582a8a Mon Sep 17 00:00:00 2001
From: Alwin Esch <alwin.esch@web.de>
Date: Tue, 10 Mar 2020 14:12:03 +0100
Subject: [PATCH 2/2] [addons][inputstream] add blocksize ask support

This required on some streams to define wanted blocksize for read
on addon. Specially needed for PVR addons in future.

Tested with reworked pvr.vdr.vnsi and by use of this a big stream
read improvement was come.
---
 .../include/kodi/addon-instance/Inputstream.h  | 18 ++++++++++++++++++
 .../kodi-addon-dev-kit/include/kodi/versions.h |  2 +-
 .../DVDInputStreams/InputStreamAddon.cpp       |  8 ++++++++
 .../DVDInputStreams/InputStreamAddon.h         |  1 +
 4 files changed, 28 insertions(+), 1 deletion(-)

diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
index 7d6475d25c27..8c97bfd865ed 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance/Inputstream.h
@@ -368,6 +368,8 @@ extern "C"
     const char*(__cdecl* get_chapter_name)(const AddonInstance_InputStream* instance, int ch);
     int64_t(__cdecl* get_chapter_pos)(const AddonInstance_InputStream* instance, int ch);
     bool(__cdecl* seek_chapter)(const AddonInstance_InputStream* instance, int ch);
+
+    int(__cdecl* block_size_stream)(const AddonInstance_InputStream* instance);
   } KodiToAddonFuncTable_InputStream;
 
   typedef struct AddonInstance_InputStream /* internal */
@@ -604,6 +606,11 @@ class CInstanceInputStream : public IAddonInstance
      */
   virtual int64_t LengthStream() { return -1; }
 
+  /*!
+     * @return Obtain the chunk size to use when reading streams.
+     * @remarks Return 0 if this add-on won't provide this function.
+     */
+  virtual int GetBlockSize() { return 0; }
 
   /*!
      * @brief Notify the InputStream addon that Kodi (un)paused the currently playing stream
@@ -708,6 +715,12 @@ class CInstanceInputStream : public IAddonInstance
       m_instanceData->toAddon.get_chapter_pos = ADDON_GetChapterPos;
       m_instanceData->toAddon.seek_chapter = ADDON_SeekChapter;
     }
+
+    int minBlockSizeVersion[3] = {2, 0, 12};
+    if (compareVersion(api, minBlockSizeVersion) >= 0)
+    {
+      m_instanceData->toAddon.block_size_stream = ADDON_GetBlockSize;
+    }
   }
 
   inline static bool ADDON_Open(const AddonInstance_InputStream* instance, INPUTSTREAM* props)
@@ -884,6 +897,11 @@ class CInstanceInputStream : public IAddonInstance
     return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->LengthStream();
   }
 
+  inline static int ADDON_GetBlockSize(const AddonInstance_InputStream* instance)
+  {
+    return static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->GetBlockSize();
+  }
+
   inline static void ADDON_PauseStream(const AddonInstance_InputStream* instance, double time)
   {
     static_cast<CInstanceInputStream*>(instance->toAddon.addonInstance)->PauseStream(time);
diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
index 829db59896a8..6c40613f73bd 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
@@ -86,7 +86,7 @@
 #define ADDON_INSTANCE_VERSION_IMAGEDECODER_XML_ID    "kodi.binary.instance.imagedecoder"
 #define ADDON_INSTANCE_VERSION_IMAGEDECODER_DEPENDS   "addon-instance/ImageDecoder.h"
 
-#define ADDON_INSTANCE_VERSION_INPUTSTREAM            "2.0.11"
+#define ADDON_INSTANCE_VERSION_INPUTSTREAM            "2.0.12"
 #define ADDON_INSTANCE_VERSION_INPUTSTREAM_MIN        "2.0.7"
 #define ADDON_INSTANCE_VERSION_INPUTSTREAM_XML_ID     "kodi.binary.instance.inputstream"
 #define ADDON_INSTANCE_VERSION_INPUTSTREAM_DEPENDS    "addon-instance/Inputstream.h"
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
index ac9c615e9e95..4dae80e527c6 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.cpp
@@ -200,6 +200,14 @@ int64_t CInputStreamAddon::GetLength()
   return m_struct.toAddon.length_stream(&m_struct);
 }
 
+int CInputStreamAddon::GetBlockSize()
+{
+  if (!m_struct.toAddon.block_size_stream)
+    return 0;
+
+  return m_struct.toAddon.block_size_stream(&m_struct);
+}
+
 bool CInputStreamAddon::Pause(double time)
 {
   if (!m_struct.toAddon.pause_stream)
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.h b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.h
index 52e22209a15e..6e1187c79cb0 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.h
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/InputStreamAddon.h
@@ -55,6 +55,7 @@ class CInputStreamAddon
   int64_t Seek(int64_t offset, int whence) override;
   bool Pause(double dTime) override;
   int64_t GetLength() override;
+  int GetBlockSize() override;
   bool IsEOF() override;
   bool CanSeek() override; //! @todo drop this
   bool CanPause() override;
