From cf5537864a1e953dfc03838ff8965621773766de Mon Sep 17 00:00:00 2001
From: Garrett Brown <themagnificentmrb@gmail.com>
Date: Wed, 31 Jul 2019 00:10:08 -0700
Subject: [PATCH 1/2] CRenderSystemGLES: Add no-alpha texture shader

---
 .../GLES/2.0/gles_shader_texture_noalpha.frag | 27 +++++++++++++++++++
 xbmc/rendering/gles/RenderSystemGLES.cpp      | 12 +++++++++
 xbmc/rendering/gles/RenderSystemGLES.h        |  1 +
 3 files changed, 40 insertions(+)
 create mode 100644 system/shaders/GLES/2.0/gles_shader_texture_noalpha.frag

diff --git a/system/shaders/GLES/2.0/gles_shader_texture_noalpha.frag b/system/shaders/GLES/2.0/gles_shader_texture_noalpha.frag
new file mode 100644
index 000000000000..3ee0efb3b0c6
--- /dev/null
+++ b/system/shaders/GLES/2.0/gles_shader_texture_noalpha.frag
@@ -0,0 +1,27 @@
+/*
+ *  Copyright (C) 2019 Team Kodi
+ *  This file is part of Kodi - https://kodi.tv
+ *
+ *  SPDX-License-Identifier: GPL-2.0-or-later
+ *  See LICENSES/README.md for more information.
+ */
+
+#version 100
+
+precision mediump float;
+uniform sampler2D m_samp0;
+varying vec4 m_cord0;
+
+void main ()
+{
+  vec4 rgb;
+
+  rgb = texture2D(m_samp0, m_cord0.xy);
+
+#if defined(KODI_LIMITED_RANGE)
+  rgb.rgb *= (235.0 - 16.0) / 255.0;
+  rgb.rgb += 16.0 / 255.0;
+#endif
+
+  gl_FragColor = vec4(rgb.rgb, 1.0);
+}
diff --git a/xbmc/rendering/gles/RenderSystemGLES.cpp b/xbmc/rendering/gles/RenderSystemGLES.cpp
index 15b68fc7aea4..7b05649786c5 100644
--- a/xbmc/rendering/gles/RenderSystemGLES.cpp
+++ b/xbmc/rendering/gles/RenderSystemGLES.cpp
@@ -481,6 +481,14 @@ void CRenderSystemGLES::InitialiseShaders()
       CLog::Log(LOGERROR, "GUI Shader gles_shader_rgba_bob_oes.frag - compile and link failed");
     }
   }
+
+  m_pShader[SM_TEXTURE_NOALPHA].reset(new CGLESShader("gles_shader_texture_noalpha.frag", defines));
+  if (!m_pShader[SM_TEXTURE_NOALPHA]->CompileAndLink())
+  {
+    m_pShader[SM_TEXTURE_NOALPHA]->Free();
+    m_pShader[SM_TEXTURE_NOALPHA].reset();
+    CLog::Log(LOGERROR, "GUI Shader gles_shader_texture_noalpha.frag - compile and link failed");
+  }
 }
 
 void CRenderSystemGLES::ReleaseShaders()
@@ -528,6 +536,10 @@ void CRenderSystemGLES::ReleaseShaders()
   if (m_pShader[SM_TEXTURE_RGBA_BOB_OES])
     m_pShader[SM_TEXTURE_RGBA_BOB_OES]->Free();
   m_pShader[SM_TEXTURE_RGBA_BOB_OES].reset();
+
+  if (m_pShader[SM_TEXTURE_NOALPHA])
+    m_pShader[SM_TEXTURE_NOALPHA]->Free();
+  m_pShader[SM_TEXTURE_NOALPHA].reset();
 }
 
 void CRenderSystemGLES::EnableGUIShader(ESHADERMETHOD method)
diff --git a/xbmc/rendering/gles/RenderSystemGLES.h b/xbmc/rendering/gles/RenderSystemGLES.h
index 3f506562edce..05add4e79cfd 100644
--- a/xbmc/rendering/gles/RenderSystemGLES.h
+++ b/xbmc/rendering/gles/RenderSystemGLES.h
@@ -29,6 +29,7 @@ enum ESHADERMETHOD
   SM_TEXTURE_RGBA_BLENDCOLOR,
   SM_TEXTURE_RGBA_BOB,
   SM_TEXTURE_RGBA_BOB_OES,
+  SM_TEXTURE_NOALPHA,
   SM_MAX
 };
 

From fd4d3a003930a4ae4a9e3783a87c68328984f275 Mon Sep 17 00:00:00 2001
From: Garrett Brown <themagnificentmrb@gmail.com>
Date: Wed, 31 Jul 2019 00:10:10 -0700
Subject: [PATCH 2/2] RetroPlayer/GLES: Use no-alpha texture shader

Fixes black screen with RGB emulators on RPi.
---
 xbmc/cores/RetroPlayer/rendering/RenderContext.cpp              | 1 +
 xbmc/cores/RetroPlayer/rendering/RenderContext.h                | 1 +
 .../RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp | 2 +-
 3 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/xbmc/cores/RetroPlayer/rendering/RenderContext.cpp b/xbmc/cores/RetroPlayer/rendering/RenderContext.cpp
index 7f7a6c5f07ae..b5759897bd29 100644
--- a/xbmc/cores/RetroPlayer/rendering/RenderContext.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/RenderContext.cpp
@@ -74,6 +74,7 @@ static ESHADERMETHOD TranslateShaderMethod(GL_SHADER_METHOD method)
   case GL_SHADER_METHOD::TEXTURE: return SM_TEXTURE;
 #if defined(HAS_GLES)
   case GL_SHADER_METHOD::TEXTURE_RGBA_OES: return SM_TEXTURE_RGBA_OES;
+  case GL_SHADER_METHOD::TEXTURE_NOALPHA: return SM_TEXTURE_NOALPHA;
 #endif
   default:
     break;
diff --git a/xbmc/cores/RetroPlayer/rendering/RenderContext.h b/xbmc/cores/RetroPlayer/rendering/RenderContext.h
index 076d955fbbf2..91fbb49617f4 100644
--- a/xbmc/cores/RetroPlayer/rendering/RenderContext.h
+++ b/xbmc/cores/RetroPlayer/rendering/RenderContext.h
@@ -27,6 +27,7 @@ enum class GL_SHADER_METHOD
   DEFAULT,
   TEXTURE,
   TEXTURE_RGBA_OES,
+  TEXTURE_NOALPHA,
 };
 
 namespace KODI
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp
index c5cee3ae28bf..b01c89ce8ba9 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp
@@ -255,7 +255,7 @@ void CRPRendererOpenGLES::Render(uint8_t alpha)
   glTexParameteri(m_textureTarget, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
   glTexParameteri(m_textureTarget, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
 
-  m_context.EnableGUIShader(GL_SHADER_METHOD::TEXTURE);
+  m_context.EnableGUIShader(GL_SHADER_METHOD::TEXTURE_NOALPHA);
 
   GLubyte colour[4];
   GLubyte idx[4] = {0, 1, 3, 2}; // Determines order of triangle strip
