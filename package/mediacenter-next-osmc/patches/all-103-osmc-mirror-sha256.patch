From 6a248216f752b9f9c2eee6556f301c7eb7abbafa Mon Sep 17 00:00:00 2001
From: Sam Nazarko <email@samnazarko.co.uk>
Date: Mon, 23 Apr 2018 20:39:46 +0100
Subject: [PATCH] CRepository: OSMC mirror system uses querystring delimeter
 for SHA256

Signed-off-by: Sam Nazarko <email@samnazarko.co.uk>
---
 xbmc/addons/Repository.cpp | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/xbmc/addons/Repository.cpp b/xbmc/addons/Repository.cpp
index 1107097..146eaea 100644
--- a/xbmc/addons/Repository.cpp
+++ b/xbmc/addons/Repository.cpp
@@ -98,12 +98,23 @@ CRepository::ResolveResult CRepository::ResolvePathAndHash(const AddonPtr& addon
   // content-* headers are base64, convert to base16
   TypedDigest hash{dirIt->hashType, StringUtils::ToHexadecimal(Base64::Decode(file.GetHttpHeader().GetValue(std::string("content-") + hashTypeStr)))};
 
+  // Probably OSMC mirror
+
+  if (hash.Empty())
+  {
+    // Expected hash, but none found -> fall back to old method
+    if (!FetchChecksum(path + "?" + hashTypeStr, hash.value) || hash.Empty())
+    {
+      CLog::Log(LOGERROR, "Failed to find hash for {} from HTTP header and in separate file using querystring", path);
+      return {};
+    }
+
   if (hash.Empty())
   {
     // Expected hash, but none found -> fall back to old method
     if (!FetchChecksum(path + "." + hashTypeStr, hash.value) || hash.Empty())
     {
-      CLog::Log(LOGERROR, "Failed to find hash for {} from HTTP header and in separate file", path);
+      CLog::Log(LOGERROR, "Failed to find hash for {} from HTTP header and in separate file using file extension", path);
       return {};
     }
   }
-- 
2.7.4
