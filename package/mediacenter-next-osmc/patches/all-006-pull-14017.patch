From 6a0ad8c27cf8f41a368475c4f7d4ba9602542dc6 Mon Sep 17 00:00:00 2001
From: wsnipex <wsnipex@a1.net>
Date: Thu, 7 Jun 2018 10:17:15 +0200
Subject: [PATCH 1/2] [cmake] pass vaapi and vdpau options to internal ffmpeg

---
 CMakeLists.txt                             |  3 ++-
 cmake/modules/FindFFMPEG.cmake             |  4 ++++
 tools/depends/target/ffmpeg/CMakeLists.txt | 12 +++++++++++-
 3 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index bc9b96240dd3..5227b77d58c1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -171,9 +171,10 @@ set(dyload_optional Bluray
 find_package(TexturePacker REQUIRED)
 find_package(JsonSchemaBuilder REQUIRED)
 
-core_require_dep(${required_deps})
+# Check optional deps first, since their availability can influence required ones, e.g. ffmpeg
 core_optional_dep(${optional_deps})
 core_optional_dyload_dep(${dyload_optional})
+core_require_dep(${required_deps})
 
 if(ENABLE_MARIADBCLIENT AND NOT ENABLE_MARIADBCLIENT STREQUAL AUTO AND ENABLE_MYSQLCLIENT AND NOT ENABLE_MYSQLCLIENT STREQUAL AUTO)
   MESSAGE(FATAL_ERROR "You can not use MySql and MariaDB at the same time. Disable one by adding -DENABLE_MYSQLCLIENT=OFF or -DENABLE_MARIADBCLIENT=OFF.")
diff --git a/cmake/modules/FindFFMPEG.cmake b/cmake/modules/FindFFMPEG.cmake
index f90f912d9e8b..7f34505bd47e 100644
--- a/cmake/modules/FindFFMPEG.cmake
+++ b/cmake/modules/FindFFMPEG.cmake
@@ -229,6 +229,9 @@ if(NOT FFMPEG_FOUND)
     message(STATUS "FFMPEG_URL: ${FFMPEG_URL}")
   endif()
 
+  set(FFMPEG_OPTIONS -DENABLE_VAAPI=${ENABLE_VAAPI}
+                     -DENABLE_VDPAU=${ENABLE_VDPAU})
+
   if(KODI_DEPENDSBUILD)
     set(CROSS_ARGS -DDEPENDS_PATH=${DEPENDS_PATH}
                    -DPKG_CONFIG_EXECUTABLE=${PKG_CONFIG_EXECUTABLE}
@@ -259,6 +262,7 @@ if(NOT FFMPEG_FOUND)
                                  -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}
                                  -DCMAKE_EXE_LINKER_FLAGS=${LINKER_FLAGS}
                                  ${CROSS_ARGS}
+                                 ${FFMPEG_OPTIONS}
                       PATCH_COMMAND ${CMAKE_COMMAND} -E copy
                                     ${CMAKE_SOURCE_DIR}/tools/depends/target/ffmpeg/CMakeLists.txt
                                     <SOURCE_DIR> &&
diff --git a/tools/depends/target/ffmpeg/CMakeLists.txt b/tools/depends/target/ffmpeg/CMakeLists.txt
index 9df273de0942..1a16000d5f82 100644
--- a/tools/depends/target/ffmpeg/CMakeLists.txt
+++ b/tools/depends/target/ffmpeg/CMakeLists.txt
@@ -53,7 +53,17 @@ if(CORE_SYSTEM_NAME STREQUAL linux OR CORE_SYSTEM_NAME STREQUAL freebsd)
   if(CORE_PLATFORM_NAME STREQUAL rbpi)
     list(APPEND ffmpeg_conf --cpu=${CPU} --disable-vaapi --disable-vdpau)
   else()
-    list(APPEND ffmpeg_conf --enable-vdpau --enable-vaapi --enable-pic)
+    list(APPEND ffmpeg_conf --enable-pic)
+    if(ENABLE_VAAPI)
+      list(APPEND ffmpeg_conf --enable-vaapi)
+    else()
+      list(APPEND ffmpeg_conf --disable-vaapi)
+    endif()
+    if(ENABLE_VDPAU)
+      list(APPEND ffmpeg_conf --enable-vdpau)
+    else()
+      list(APPEND ffmpeg_conf --disable-vdpau)
+    endif()
   endif()
 elseif(CORE_SYSTEM_NAME STREQUAL android)
   if(CPU MATCHES arm64)

From 91e0de19bc55d3306a247116b926dabd0327f413 Mon Sep 17 00:00:00 2001
From: wsnipex <wsnipex@a1.net>
Date: Mon, 11 Jun 2018 13:33:41 +0200
Subject: [PATCH 2/2] [cmake] ffmpeg: remove workaround for ccache, pass the
 options instead

---
 cmake/modules/FindFFMPEG.cmake             |  4 +++-
 tools/depends/target/ffmpeg/CMakeLists.txt | 13 +------------
 2 files changed, 4 insertions(+), 13 deletions(-)

diff --git a/cmake/modules/FindFFMPEG.cmake b/cmake/modules/FindFFMPEG.cmake
index 7f34505bd47e..ef74671d4002 100644
--- a/cmake/modules/FindFFMPEG.cmake
+++ b/cmake/modules/FindFFMPEG.cmake
@@ -229,7 +229,9 @@ if(NOT FFMPEG_FOUND)
     message(STATUS "FFMPEG_URL: ${FFMPEG_URL}")
   endif()
 
-  set(FFMPEG_OPTIONS -DENABLE_VAAPI=${ENABLE_VAAPI}
+  set(FFMPEG_OPTIONS -DENABLE_CCACHE=${ENABLE_CCACHE}
+                     -DCCACHE_PROGRAM=${CCACHE_PROGRAM}
+                     -DENABLE_VAAPI=${ENABLE_VAAPI}
                      -DENABLE_VDPAU=${ENABLE_VDPAU})
 
   if(KODI_DEPENDSBUILD)
diff --git a/tools/depends/target/ffmpeg/CMakeLists.txt b/tools/depends/target/ffmpeg/CMakeLists.txt
index 1a16000d5f82..4494a26128c5 100644
--- a/tools/depends/target/ffmpeg/CMakeLists.txt
+++ b/tools/depends/target/ffmpeg/CMakeLists.txt
@@ -4,18 +4,7 @@ cmake_minimum_required(VERSION 2.8)
 
 list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR})
 
-# ENABLE_CCACHE can have the following values ON|OFF|AUTO
-# During initial kodi project generation the forwarded ENABLE_CCACHE is empty, if ENABLE_CCACHE wasn't explicitly set.
-# This happens as FindFFmpeg is called before core_optional_dep(CCache) which sets ENABLE_CCACHE to AUTO in that case.
-# Therefore treat empty ENABLE_CCACHE like ON and AUTO.
-if(ENABLE_CCACHE STREQUAL "" OR ENABLE_CCACHE)
-  find_program(CCACHE_PROGRAM ccache)
-  if(CCACHE_PROGRAM)
-    set(USE_CCACHE ON)
-  endif()
-endif()
-
-if(USE_CCACHE)
+if(ENABLE_CCACHE AND CCACHE_PROGRAM)
   set(ffmpeg_conf "--cc=${CCACHE_PROGRAM} ${CMAKE_C_COMPILER}" "--cxx=${CCACHE_PROGRAM} ${CMAKE_CXX_COMPILER}")
 else()
   set(ffmpeg_conf --cc=${CMAKE_C_COMPILER} --cxx=${CMAKE_CXX_COMPILER})
