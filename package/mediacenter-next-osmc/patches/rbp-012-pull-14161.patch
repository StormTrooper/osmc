From a673a48f33d762cf5ca129edcf5d9a9bce094182 Mon Sep 17 00:00:00 2001
From: Garrett Brown <themagnificentmrb@gmail.com>
Date: Sat, 7 Jul 2018 16:35:19 -0700
Subject: [PATCH] Fix erratic input when entering cheat code

Before the keymap system was rewritten to handle button holding and combos,
the cheat code absorbed A and B presses to avoid unintended behavior in
the GUI. After the rewrite, this broke, causing A and B to open and
close things unexpectedly.
---
 xbmc/input/joysticks/JoystickEasterEgg.cpp        | 17 +++++++++++------
 xbmc/input/joysticks/JoystickEasterEgg.h          |  3 ++-
 xbmc/input/joysticks/interfaces/IButtonSequence.h |  6 ++++++
 xbmc/input/joysticks/keymaps/KeymapHandler.cpp    |  3 +++
 4 files changed, 22 insertions(+), 7 deletions(-)

diff --git a/xbmc/input/joysticks/JoystickEasterEgg.cpp b/xbmc/input/joysticks/JoystickEasterEgg.cpp
index b03d91575a81..335d5c4d9cf3 100644
--- a/xbmc/input/joysticks/JoystickEasterEgg.cpp
+++ b/xbmc/input/joysticks/JoystickEasterEgg.cpp
@@ -77,28 +77,33 @@ bool CJoystickEasterEgg::OnButtonPress(const FeatureName& feature)
   {
     const auto& sequence = it->second;
 
-    // Update state
+    // Reset state if it previously finished
+    if (m_state >= sequence.size())
+      m_state = 0;
+
     if (feature == sequence[m_state])
       m_state++;
     else
       m_state = 0;
 
-    // Capture input when finished with arrows (2 x up/down/left/right)
-    if (m_state > 8)
+    if (IsCapturing())
     {
       bHandled = true;
 
       if (m_state >= sequence.size())
-      {
         OnFinish();
-        m_state = 0;
-      }
     }
   }
 
   return bHandled;
 }
 
+bool CJoystickEasterEgg::IsCapturing()
+{
+  // Capture input when finished with arrows (2 x up/down/left/right)
+  return m_state > 8;
+}
+
 void CJoystickEasterEgg::OnFinish(void)
 {
   CServiceBroker::GetSettings().ToggleBool(CSettings::SETTING_GAMES_ENABLE);
diff --git a/xbmc/input/joysticks/JoystickEasterEgg.h b/xbmc/input/joysticks/JoystickEasterEgg.h
index f027c295aeb7..6edd2d817e2e 100644
--- a/xbmc/input/joysticks/JoystickEasterEgg.h
+++ b/xbmc/input/joysticks/JoystickEasterEgg.h
@@ -40,7 +40,8 @@ namespace JOYSTICK
     virtual ~CJoystickEasterEgg() = default;
 
     // implementation of IButtonSequence
-    virtual bool OnButtonPress(const FeatureName& feature) override;
+    bool OnButtonPress(const FeatureName& feature) override;
+    bool IsCapturing() override;
 
     static void OnFinish(void);
 
diff --git a/xbmc/input/joysticks/interfaces/IButtonSequence.h b/xbmc/input/joysticks/interfaces/IButtonSequence.h
index 092273f411f9..8fbf646144e9 100644
--- a/xbmc/input/joysticks/interfaces/IButtonSequence.h
+++ b/xbmc/input/joysticks/interfaces/IButtonSequence.h
@@ -32,6 +32,12 @@ namespace JOYSTICK
     virtual ~IButtonSequence() = default;
 
     virtual bool OnButtonPress(const FeatureName& feature) = 0;
+
+    /*!
+     * \brief Returns true if a sequence is being captured to prevent input
+     *        from falling through to the application
+     */
+    virtual bool IsCapturing() = 0;
   };
 }
 }
diff --git a/xbmc/input/joysticks/keymaps/KeymapHandler.cpp b/xbmc/input/joysticks/keymaps/KeymapHandler.cpp
index 4903543366be..a7022204ce20 100644
--- a/xbmc/input/joysticks/keymaps/KeymapHandler.cpp
+++ b/xbmc/input/joysticks/keymaps/KeymapHandler.cpp
@@ -98,6 +98,9 @@ bool CKeymapHandler::OnButtonPress(const FeatureName& feature, bool bPressed)
 
 void CKeymapHandler::OnButtonHold(const FeatureName& feature, unsigned int holdTimeMs)
 {
+  if (m_easterEgg && m_easterEgg->IsCapturing())
+    return;
+
   const std::string keyName = CJoystickUtils::MakeKeyName(feature);
 
   IKeyHandler *handler = GetKeyHandler(keyName);
