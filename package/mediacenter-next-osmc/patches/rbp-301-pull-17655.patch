From 547528c4bbafbb4a7f95e66404c88f830b1fe288 Mon Sep 17 00:00:00 2001
From: Lukas Rusak <lorusak@gmail.com>
Date: Sat, 11 Apr 2020 08:09:27 -0700
Subject: [PATCH] [test] update TestSysfsPath to use EXPECT_EQ

---
 xbmc/platform/linux/test/TestSysfsPath.cpp | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/xbmc/platform/linux/test/TestSysfsPath.cpp b/xbmc/platform/linux/test/TestSysfsPath.cpp
index 27b586016266..d43b46a39d72 100644
--- a/xbmc/platform/linux/test/TestSysfsPath.cpp
+++ b/xbmc/platform/linux/test/TestSysfsPath.cpp
@@ -27,13 +27,13 @@ TEST_F(TestSysfsPath, SysfsPathTestInt)
 
   CSysfsPath path("/tmp/kodi-test");
   ASSERT_TRUE(path.Exists());
-  ASSERT_TRUE(path.Get<int>() == 1234);
-  ASSERT_TRUE(path.Get<float>() == 1234);
-  ASSERT_TRUE(path.Get<double>() == 1234);
-  ASSERT_TRUE(path.Get<uint64_t>() == 1234);
-  ASSERT_TRUE(path.Get<uint16_t>() == 1234);
-  ASSERT_TRUE(path.Get<unsigned int>() == 1234);
-  ASSERT_TRUE(path.Get<unsigned long int>() == 1234);
+  EXPECT_EQ(path.Get<int>(), 1234);
+  EXPECT_EQ(path.Get<float>(), 1234);
+  EXPECT_EQ(path.Get<double>(), 1234);
+  EXPECT_EQ(path.Get<uint64_t>(), 1234);
+  EXPECT_EQ(path.Get<uint16_t>(), 1234);
+  EXPECT_EQ(path.Get<unsigned int>(), 1234);
+  EXPECT_EQ(path.Get<unsigned long int>(), 1234);
 }
 
 TEST_F(TestSysfsPath, SysfsPathTestString)
@@ -44,7 +44,7 @@ TEST_F(TestSysfsPath, SysfsPathTestString)
 
   CSysfsPath path("/tmp/kodi-test");
   ASSERT_TRUE(path.Exists());
-  ASSERT_TRUE(path.Get<std::string>() == "test");
+  EXPECT_EQ(path.Get<std::string>(), "test");
 }
 
 TEST_F(TestSysfsPath, SysfsPathTestLongString)
@@ -55,7 +55,7 @@ TEST_F(TestSysfsPath, SysfsPathTestLongString)
 
   CSysfsPath path("/tmp/kodi-test");
   ASSERT_TRUE(path.Exists());
-  ASSERT_TRUE(path.Get<std::string>() == "test with spaces");
+  EXPECT_EQ(path.Get<std::string>(), "test with spaces");
 }
 
 TEST_F(TestSysfsPath, SysfsPathTestPathDoesNotExist)
