From 5d93cfe619620e0e2b4b1c06c83a66c0831d9edd Mon Sep 17 00:00:00 2001
From: ronie <ronie@kodi.tv>
Date: Mon, 2 Dec 2019 23:36:57 +0100
Subject: [PATCH] add Library.HasNode infobool

---
 xbmc/GUIInfoManager.cpp                | 14 ++++++++++++++
 xbmc/guilib/guiinfo/GUIInfoLabels.h    |  1 +
 xbmc/guilib/guiinfo/LibraryGUIInfo.cpp | 23 +++++++++++++++++++++++
 3 files changed, 38 insertions(+)

diff --git a/xbmc/GUIInfoManager.cpp b/xbmc/GUIInfoManager.cpp
index 285e682c067e..b35196033f18 100644
--- a/xbmc/GUIInfoManager.cpp
+++ b/xbmc/GUIInfoManager.cpp
@@ -8528,6 +8528,14 @@ const infomap slideshow[] =      {{ "ispaused",               SLIDESHOW_ISPAUSED
 ///     @skinning_v19 **[New Boolean Condition]** \link Library_HasContent_Boxsets `Library.HasContent(boxsets)`\endlink
 ///     <p>
 ///   }
+///   \table_row3{   <b>`Library.HasNode(path)`</b>,
+///                  \anchor Library_HasNode
+///                  _boolean_,
+///     @return **True** if there the node is present in the library.
+///     <p><hr>
+///     @skinning_v19 **[New Boolean Condition]** \link Library_HasNode `Library.HasNode(path)`\endlink
+///     <p>
+///   }
 /// \table_end
 ///
 /// -----------------------------------------------------------------------------
@@ -8947,6 +8955,12 @@ int CGUIInfoManager::TranslateSingleString(const std::string &strCondition, bool
         else if (cat == "role" && prop.num_params() > 1)
           return AddMultiInfo(CGUIInfo(LIBRARY_HAS_ROLE, prop.param(1), 0));
       }
+      else if (prop.name == "hasnode" && prop.num_params())
+      {
+        std::string node = prop.param(0);
+        StringUtils::ToLower(node);
+        return AddMultiInfo(CGUIInfo(LIBRARY_HAS_NODE, prop.param(), 0));
+      }
     }
     else if (cat.name == "musicplayer")
     {
diff --git a/xbmc/guilib/guiinfo/GUIInfoLabels.h b/xbmc/guilib/guiinfo/GUIInfoLabels.h
index 3987c8c6774c..c484bfdcfe3e 100644
--- a/xbmc/guilib/guiinfo/GUIInfoLabels.h
+++ b/xbmc/guilib/guiinfo/GUIInfoLabels.h
@@ -420,6 +420,7 @@
 #define LIBRARY_IS_SCANNING_MUSIC   730
 #define LIBRARY_HAS_ROLE            735
 #define LIBRARY_HAS_BOXSETS         736
+#define LIBRARY_HAS_NODE            737
 
 #define SYSTEM_PLATFORM_LINUX       741
 #define SYSTEM_PLATFORM_WINDOWS     742
diff --git a/xbmc/guilib/guiinfo/LibraryGUIInfo.cpp b/xbmc/guilib/guiinfo/LibraryGUIInfo.cpp
index 167fcdb08dfd..844ff9f65435 100644
--- a/xbmc/guilib/guiinfo/LibraryGUIInfo.cpp
+++ b/xbmc/guilib/guiinfo/LibraryGUIInfo.cpp
@@ -9,10 +9,16 @@
 #include "guilib/guiinfo/LibraryGUIInfo.h"
 
 #include "Application.h"
+#include "ServiceBroker.h"
+#include "filesystem/Directory.h"
+#include "filesystem/File.h"
 #include "guilib/guiinfo/GUIInfo.h"
 #include "guilib/guiinfo/GUIInfoLabels.h"
 #include "music/MusicDatabase.h"
+#include "profiles/ProfileManager.h"
+#include "settings/SettingsComponent.h"
 #include "utils/StringUtils.h"
+#include "utils/URIUtils.h"
 #include "video/VideoDatabase.h"
 
 using namespace KODI::GUILIB::GUIINFO;
@@ -242,6 +248,23 @@ bool CLibraryGUIInfo::GetBool(bool& value, const CGUIListItem *gitem, int contex
       value = artistcount > 0;
       return true;
     }
+    case LIBRARY_HAS_NODE:
+    {
+      const CURL url(info.GetData3());
+      const std::shared_ptr<CProfileManager> profileManager =
+            CServiceBroker::GetSettingsComponent()->GetProfileManager();
+      CFileItemList items;
+
+      std::string libDir = profileManager->GetLibraryFolder();
+      XFILE::CDirectory::GetDirectory(libDir, items, "", XFILE::DIR_FLAG_NO_FILE_DIRS);
+      if (items.Size() == 0)
+        libDir = "special://xbmc/system/library/";
+
+      std::string nodePath = URIUtils::AddFileToFolder(libDir, url.GetHostName() + "/");
+      nodePath = URIUtils::AddFileToFolder(nodePath, url.GetFileName());
+      value = XFILE::CFile::Exists(nodePath);
+      return true;
+    }
     case LIBRARY_IS_SCANNING:
     {
       value = (g_application.IsMusicScanning() || g_application.IsVideoScanning());
