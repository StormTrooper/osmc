From ac834b6b684c96d0bd036108de25da669961aaf3 Mon Sep 17 00:00:00 2001
From: Kai Sommerfeld <kai.sommerfeld@gmx.com>
Date: Sun, 6 Jan 2019 00:04:43 +0100
Subject: [PATCH] [PVR] guiinfo times: reset timeshift offset and timeshift
 play time after channel change.

---
 xbmc/pvr/PVRGUITimesInfo.cpp | 12 +++++++++++-
 xbmc/pvr/PVRGUITimesInfo.h   |  1 +
 2 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/xbmc/pvr/PVRGUITimesInfo.cpp b/xbmc/pvr/PVRGUITimesInfo.cpp
index 402b390237d2..365458164c24 100644
--- a/xbmc/pvr/PVRGUITimesInfo.cpp
+++ b/xbmc/pvr/PVRGUITimesInfo.cpp
@@ -43,6 +43,7 @@ void CPVRGUITimesInfo::Reset()
   m_iTimeshiftProgressDuration = 0;
 
   m_playingEpgTag.reset();
+  m_playingChannel.reset();
 }
 
 void CPVRGUITimesInfo::UpdatePlayingTag()
@@ -52,7 +53,7 @@ void CPVRGUITimesInfo::UpdatePlayingTag()
 
   if (currentChannel || currentTag)
   {
-    if (!currentTag)
+    if (currentChannel && !currentTag)
       currentTag = currentChannel->GetEPGNow();
 
     CSingleLock lock(m_critSection);
@@ -104,9 +105,18 @@ void CPVRGUITimesInfo::UpdateTimeshiftData()
   int64_t iPlayTime, iMinTime, iMaxTime;
   CServiceBroker::GetDataCacheCore().GetPlayTimes(iStartTime, iPlayTime, iMinTime, iMaxTime);
   bool bPlaying = CServiceBroker::GetDataCacheCore().GetSpeed() == 1.0;
+  const CPVRChannelPtr playingChannel = CServiceBroker::GetPVRManager().GetPlayingChannel();
 
   CSingleLock lock(m_critSection);
 
+  if (playingChannel != m_playingChannel)
+  {
+    // playing channel changed. we need to reset offset and playtime.
+    m_iTimeshiftOffset = 0;
+    m_iTimeshiftPlayTime = 0;
+    m_playingChannel = playingChannel;
+  }
+
   if (!iStartTime)
   {
     if (m_iStartTime == 0)
diff --git a/xbmc/pvr/PVRGUITimesInfo.h b/xbmc/pvr/PVRGUITimesInfo.h
index 479bdce5f91c..f61d70227da5 100644
--- a/xbmc/pvr/PVRGUITimesInfo.h
+++ b/xbmc/pvr/PVRGUITimesInfo.h
@@ -67,6 +67,7 @@ namespace PVR
     mutable CCriticalSection m_critSection;
 
     CPVREpgInfoTagPtr m_playingEpgTag;
+    CPVRChannelPtr m_playingChannel;
 
     time_t m_iStartTime;
     unsigned int m_iDuration;
