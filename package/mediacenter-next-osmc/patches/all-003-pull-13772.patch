From c68712958587a06d1551336cb3924a302f98f46a Mon Sep 17 00:00:00 2001
From: Kai Sommerfeld <kai.sommerfeld@gmx.com>
Date: Sun, 15 Apr 2018 19:58:36 +0200
Subject: [PATCH 1/4] [guiinfo] Fix CGUIInfoManager::GetInt to pass a given
 item to CGUIInfoManager::GetMultiInfoInt.

---
 xbmc/GUIInfoManager.cpp | 13 +++++++++----
 xbmc/GUIInfoManager.h   |  6 +++---
 2 files changed, 12 insertions(+), 7 deletions(-)

diff --git a/xbmc/GUIInfoManager.cpp b/xbmc/GUIInfoManager.cpp
index e52ee7a3dc61..c14f87e017d7 100644
--- a/xbmc/GUIInfoManager.cpp
+++ b/xbmc/GUIInfoManager.cpp
@@ -6355,7 +6355,7 @@ bool CGUIInfoManager::GetInt(int &value, int info, int contextWindow, const CGUI
 {
   if (info >= MULTI_INFO_START && info <= MULTI_INFO_END)
   {
-    return GetMultiInfoInt(value, m_multiInfo[info - MULTI_INFO_START], contextWindow);
+    return GetMultiInfoInt(value, m_multiInfo[info - MULTI_INFO_START], contextWindow, item);
   }
   else if (info >= LISTITEM_START && info <= LISTITEM_END)
   {
@@ -6552,14 +6552,19 @@ bool CGUIInfoManager::GetMultiInfoBool(const CGUIInfo &info, int contextWindow,
   return (info.m_info < 0) ? !bReturn : bReturn;
 }
 
-bool CGUIInfoManager::GetMultiInfoInt(int &value, const CGUIInfo &info, int contextWindow) const
+bool CGUIInfoManager::GetMultiInfoInt(int &value, const CGUIInfo &info, int contextWindow, const CGUIListItem *item) const
 {
   if (info.m_info >= LISTITEM_START && info.m_info <= LISTITEM_END)
   {
-    const CGUIListItemPtr item = GUIINFO::GetCurrentListItem(contextWindow, info.GetData1(), info.GetData2(), info.GetInfoFlag());
+    CGUIListItemPtr itemPtr;
+    if (!item)
+    {
+      itemPtr = GUIINFO::GetCurrentListItem(contextWindow, info.GetData1(), info.GetData2(), info.GetInfoFlag());
+      item = itemPtr.get();
+    }
     if (item)
     {
-      return GetItemInt(value, item.get(), contextWindow, info.m_info);
+      return GetItemInt(value, item, contextWindow, info.m_info);
     }
     else
     {
diff --git a/xbmc/GUIInfoManager.h b/xbmc/GUIInfoManager.h
index d401cb77018e..cac69b520a5a 100644
--- a/xbmc/GUIInfoManager.h
+++ b/xbmc/GUIInfoManager.h
@@ -185,9 +185,9 @@ class CGUIInfoManager : public Observable, public KODI::MESSAGING::IMessageTarge
   int TranslateMusicPlayerString(const std::string &info) const;
   static TIME_FORMAT TranslateTimeFormat(const std::string &format);
 
-  std::string GetMultiInfoLabel(const KODI::GUILIB::GUIINFO::CGUIInfo &info, int contextWindow = 0, std::string *fallback = nullptr) const;
-  bool GetMultiInfoInt(int &value, const KODI::GUILIB::GUIINFO::CGUIInfo &info, int contextWindow = 0) const;
-  bool GetMultiInfoBool(const KODI::GUILIB::GUIINFO::CGUIInfo &info, int contextWindow = 0, const CGUIListItem *item = nullptr);
+  std::string GetMultiInfoLabel(const KODI::GUILIB::GUIINFO::CGUIInfo &info, int contextWindow, std::string *fallback = nullptr) const;
+  bool GetMultiInfoInt(int &value, const KODI::GUILIB::GUIINFO::CGUIInfo &info, int contextWindow, const CGUIListItem *item) const;
+  bool GetMultiInfoBool(const KODI::GUILIB::GUIINFO::CGUIInfo &info, int contextWindow, const CGUIListItem *item);
 
   std::string GetMultiInfoItemLabel(const CFileItem *item, int contextWindow, const KODI::GUILIB::GUIINFO::CGUIInfo &info, std::string *fallback = nullptr) const;
   std::string GetMultiInfoItemImage(const CFileItem *item, int contextWindow, const KODI::GUILIB::GUIINFO::CGUIInfo &info, std::string *fallback = nullptr) const;

From 64348abf08e1823a387d4159e50766d3b0233fe3 Mon Sep 17 00:00:00 2001
From: Kai Sommerfeld <kai.sommerfeld@gmx.com>
Date: Sun, 15 Apr 2018 22:50:40 +0200
Subject: [PATCH 2/4] [PVR] Fix log spam 'CPVRItem - GetEpgInfoTag -
 unsupported item type\!' when opening the info OSD while watching a pvr
 recording.

---
 xbmc/pvr/PVRGUIInfo.cpp | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/xbmc/pvr/PVRGUIInfo.cpp b/xbmc/pvr/PVRGUIInfo.cpp
index f35916080f6c..4160d74bbda7 100644
--- a/xbmc/pvr/PVRGUIInfo.cpp
+++ b/xbmc/pvr/PVRGUIInfo.cpp
@@ -1070,7 +1070,7 @@ bool CPVRGUIInfo::GetPVRInt(const CFileItem *item, const CGUIInfo &info, int& iV
   {
     case PVR_EPG_EVENT_DURATION:
     {
-      CPVREpgInfoTagPtr epgTag = CPVRItem(item).GetEpgInfoTag();
+      const CPVREpgInfoTagPtr epgTag = !item->IsPVRRecording() ? CPVRItem(item).GetEpgInfoTag() : nullptr;
       if (epgTag && epgTag != m_playingEpgTag)
         iValue = epgTag->GetDuration();
       else
@@ -1079,7 +1079,7 @@ bool CPVRGUIInfo::GetPVRInt(const CFileItem *item, const CGUIInfo &info, int& iV
     }
     case PVR_EPG_EVENT_PROGRESS:
     {
-      CPVREpgInfoTagPtr epgTag = CPVRItem(item).GetEpgInfoTag();
+      const CPVREpgInfoTagPtr epgTag = !item->IsPVRRecording() ? CPVRItem(item).GetEpgInfoTag() : nullptr;
       if (epgTag && epgTag != m_playingEpgTag)
         iValue = std::lrintf(epgTag->ProgressPercentage());
       else
@@ -1409,7 +1409,7 @@ void CPVRGUIInfo::CharInfoTimeshiftOffset(TIME_FORMAT format, std::string &strVa
 void CPVRGUIInfo::CharInfoEpgEventDuration(const CFileItem *item, TIME_FORMAT format, std::string &strValue) const
 {
   int iDuration = 0;
-  CPVREpgInfoTagPtr epgTag = CPVRItem(item).GetEpgInfoTag();
+  const CPVREpgInfoTagPtr epgTag = !item->IsPVRRecording() ? CPVRItem(item).GetEpgInfoTag() : nullptr;
   if (epgTag && epgTag != m_playingEpgTag)
     iDuration = epgTag->GetDuration();
   else
@@ -1421,7 +1421,7 @@ void CPVRGUIInfo::CharInfoEpgEventDuration(const CFileItem *item, TIME_FORMAT fo
 void CPVRGUIInfo::CharInfoEpgEventElapsedTime(const CFileItem *item, TIME_FORMAT format, std::string &strValue) const
 {
   int iElapsed = 0;
-  CPVREpgInfoTagPtr epgTag = CPVRItem(item).GetEpgInfoTag();
+  const CPVREpgInfoTagPtr epgTag = !item->IsPVRRecording() ? CPVRItem(item).GetEpgInfoTag() : nullptr;
   if (epgTag && epgTag != m_playingEpgTag)
     iElapsed = epgTag->Progress();
   else
@@ -1433,7 +1433,7 @@ void CPVRGUIInfo::CharInfoEpgEventElapsedTime(const CFileItem *item, TIME_FORMAT
 int CPVRGUIInfo::GetRemainingTime(const CFileItem *item) const
 {
   int iRemaining = 0;
-  CPVREpgInfoTagPtr epgTag = CPVRItem(item).GetEpgInfoTag();
+  const CPVREpgInfoTagPtr epgTag = !item->IsPVRRecording() ? CPVRItem(item).GetEpgInfoTag() : nullptr;
   if (epgTag && epgTag != m_playingEpgTag)
     iRemaining = epgTag->GetDuration() - epgTag->Progress();
   else

From dec1300353b3c3093f2c4ee80000fa83b94c5835 Mon Sep 17 00:00:00 2001
From: Kai Sommerfeld <kai.sommerfeld@gmx.com>
Date: Sun, 15 Apr 2018 23:49:33 +0200
Subject: [PATCH 3/4] [guiinfo] GUIInfoManager: remove unused 'using
 namespace'.

---
 xbmc/GUIInfoManager.cpp | 1 -
 1 file changed, 1 deletion(-)

diff --git a/xbmc/GUIInfoManager.cpp b/xbmc/GUIInfoManager.cpp
index c14f87e017d7..144a7f1e23d9 100644
--- a/xbmc/GUIInfoManager.cpp
+++ b/xbmc/GUIInfoManager.cpp
@@ -49,7 +49,6 @@
 using namespace KODI::GUILIB;
 using namespace KODI::GUILIB::GUIINFO;
 using namespace INFO;
-using namespace MUSIC_INFO;
 
 bool InfoBoolComparator(const InfoPtr &right, const InfoPtr &left)
 {

From 7fad4ac4856515a9986c8e8e870e818feeac16c9 Mon Sep 17 00:00:00 2001
From: Kai Sommerfeld <kai.sommerfeld@gmx.com>
Date: Mon, 16 Apr 2018 10:10:06 +0200
Subject: [PATCH 4/4] [PVR][guiinfo] Remove dead code.

---
 xbmc/pvr/PVRGUIInfo.cpp |  6 ------
 xbmc/pvr/PVRGUIInfo.h   | 21 +++++++--------------
 xbmc/pvr/PVRManager.cpp | 10 ----------
 xbmc/pvr/PVRManager.h   | 14 --------------
 4 files changed, 7 insertions(+), 44 deletions(-)

diff --git a/xbmc/pvr/PVRGUIInfo.cpp b/xbmc/pvr/PVRGUIInfo.cpp
index 4160d74bbda7..20f8b7facdcf 100644
--- a/xbmc/pvr/PVRGUIInfo.cpp
+++ b/xbmc/pvr/PVRGUIInfo.cpp
@@ -1700,12 +1700,6 @@ void CPVRGUIInfo::UpdateNextTimer(void)
   m_radioTimersInfo.UpdateNextTimer();
 }
 
-int CPVRGUIInfo::GetDuration(void) const
-{
-  CSingleLock lock(m_critSection);
-  return m_iDuration;
-}
-
 int CPVRGUIInfo::GetElapsedTime(void) const
 {
   CSingleLock lock(m_critSection);
diff --git a/xbmc/pvr/PVRGUIInfo.h b/xbmc/pvr/PVRGUIInfo.h
index 78508673066e..32e550ba50fb 100644
--- a/xbmc/pvr/PVRGUIInfo.h
+++ b/xbmc/pvr/PVRGUIInfo.h
@@ -63,20 +63,6 @@ namespace PVR
     bool GetInt(int& value, const CGUIListItem *item, int contextWindow, const KODI::GUILIB::GUIINFO::CGUIInfo &info) const override;
     bool GetBool(bool& value, const CGUIListItem *item, int contextWindow, const KODI::GUILIB::GUIINFO::CGUIInfo &info) const override;
 
-    /*!
-     * @brief Get the total duration of the currently playing epg event or if no epg is
-     *        available the current lenght in seconds of the playing Live TV stream.
-     * @return The total duration in seconds or 0 if no channel is playing.
-     */
-    int GetDuration(void) const;
-
-    /*!
-     * @brief Get the elapsed time since the start of the currently playing epg event or if
-     *        no epg is available since the start of the playback of the current Live TV stream.
-     * @return The time in seconds or 0 if no channel is playing.
-     */
-    int GetElapsedTime(void) const;
-
     /*!
      * @brief Clear the playing EPG tag.
      */
@@ -147,6 +133,13 @@ namespace PVR
     void CharInfoTimeshiftPlayTime(TIME_FORMAT format, std::string &strValue) const;
     void CharInfoTimeshiftOffset(TIME_FORMAT format, std::string &strValue) const;
 
+    /*!
+     * @brief Get the elapsed time since the start of the currently playing epg event or if
+     *        no epg is available since the start of the playback of the current Live TV stream.
+     * @return The time in seconds or 0 if no channel is playing.
+     */
+    int GetElapsedTime(void) const;
+
     int GetRemainingTime(const CFileItem *item) const;
 
     /** @name PVRGUIInfo data */
diff --git a/xbmc/pvr/PVRManager.cpp b/xbmc/pvr/PVRManager.cpp
index d8bf9cc5f68c..a5821c6cad2d 100644
--- a/xbmc/pvr/PVRManager.cpp
+++ b/xbmc/pvr/PVRManager.cpp
@@ -799,16 +799,6 @@ void CPVRManager::OnPlaybackEnded(const CFileItemPtr item)
   OnPlaybackStopped(item);
 }
 
-int CPVRManager::GetTotalTime(void) const
-{
-  return IsStarted() && m_guiInfo ? m_guiInfo->GetDuration() : 0;
-}
-
-int CPVRManager::GetElapsedTime(void) const
-{
-  return IsStarted() && m_guiInfo ? m_guiInfo->GetElapsedTime() : 0;
-}
-
 bool CPVRManager::IsRecording(void) const
 {
   return IsStarted() && m_timers ? m_timers->IsRecording() : false;
diff --git a/xbmc/pvr/PVRManager.h b/xbmc/pvr/PVRManager.h
index 4bb17bee7163..ba89c99b60d8 100644
--- a/xbmc/pvr/PVRManager.h
+++ b/xbmc/pvr/PVRManager.h
@@ -357,20 +357,6 @@ namespace PVR
      */
     void TriggerSearchMissingChannelIcons(void);
 
-    /*!
-     * @brief Get the total duration of the currently playing epg event or if no epg is
-     *        available the current lenght in seconds of the playing Live TV stream.
-     * @return The total duration in seconds or 0 if no channel is playing.
-     */
-    int GetTotalTime(void) const;
-
-    /*!
-     * @brief Get the elapsed time since the start of the currently playing epg event or if
-     *        no epg is available since the start of the playback of the current Live TV stream.
-     * @return The time in seconds or 0 if no channel is playing.
-     */
-    int GetElapsedTime(void) const;
-
     /*!
      * @brief Check whether names are still correct after the language settings changed.
      */
