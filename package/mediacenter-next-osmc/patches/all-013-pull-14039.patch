From cefb9e902fff866532783999d042c6453a8ef147 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Wed, 13 Jun 2018 18:34:07 +0200
Subject: [PATCH] GUIMediaWindow: prevent from updates while updating

---
 xbmc/music/windows/GUIWindowMusicPlaylist.cpp | 10 +++++++++
 xbmc/windows/GUIMediaWindow.cpp               | 31 +++++++++++++++++++++------
 xbmc/windows/GUIMediaWindow.h                 |  3 ++-
 3 files changed, 36 insertions(+), 8 deletions(-)

diff --git a/xbmc/music/windows/GUIWindowMusicPlaylist.cpp b/xbmc/music/windows/GUIWindowMusicPlaylist.cpp
index 86b64e6e52e1..620475606ece 100644
--- a/xbmc/music/windows/GUIWindowMusicPlaylist.cpp
+++ b/xbmc/music/windows/GUIWindowMusicPlaylist.cpp
@@ -85,6 +85,14 @@ bool CGUIWindowMusicPlayList::OnMessage(CGUIMessage& message)
     {
       // global playlist changed outside playlist window
       UpdateButtons();
+
+      if (m_vecItemsUpdating)
+      {
+        CLog::Log(LOGWARNING, "CGUIWindowMusicPlayList::OnMessage - updating in progress");
+        return true;
+      }
+      CUpdateGuard ug(m_vecItemsUpdating);
+
       Refresh(true);
 
       if (m_viewControl.HasControl(m_iLastControl) && m_vecItems->Size() <= 0)
@@ -239,6 +247,8 @@ bool CGUIWindowMusicPlayList::OnAction(const CAction &action)
 
 bool CGUIWindowMusicPlayList::OnBack(int actionID)
 {
+  CancelUpdateItems();
+
   if (actionID == ACTION_NAV_BACK)
     return CGUIWindow::OnBack(actionID); // base class goes up a folder, but none to go up
   return CGUIWindowMusicBase::OnBack(actionID);
diff --git a/xbmc/windows/GUIMediaWindow.cpp b/xbmc/windows/GUIMediaWindow.cpp
index 9b0c8ee4e3b8..22766160a247 100644
--- a/xbmc/windows/GUIMediaWindow.cpp
+++ b/xbmc/windows/GUIMediaWindow.cpp
@@ -236,13 +236,7 @@ bool CGUIMediaWindow::OnAction(const CAction &action)
 
 bool CGUIMediaWindow::OnBack(int actionID)
 {
-  if (m_updateJobActive)
-  {
-    m_rootDir.CancelDirectory();
-    m_updateAborted = true;
-    m_updateEvent.Wait();
-    m_updateJobActive = false;
-  }
+  CancelUpdateItems();
 
   CURL filterUrl(m_strFilterPath);
   if (actionID == ACTION_NAV_BACK &&
@@ -262,6 +256,8 @@ bool CGUIMediaWindow::OnMessage(CGUIMessage& message)
   {
   case GUI_MSG_WINDOW_DEINIT:
     {
+      CancelUpdateItems();
+
       m_iLastControl = GetFocusedControlID();
       CGUIWindow::OnMessage(message);
 
@@ -1093,6 +1089,13 @@ bool CGUIMediaWindow::OnClick(int iItem, const std::string &player)
       m_history.AddPath(strCurrentDirectory, m_strFilterPath);
     }
 
+    if (m_vecItemsUpdating)
+    {
+      CLog::Log(LOGWARNING, "CGUIMediaWindow::OnClick - updating in progress");
+      return true;
+    }
+    CUpdateGuard ug(m_vecItemsUpdating);
+
     CFileItem directory(*pItem);
     if (!Update(directory.GetPath()))
       ShowShareErrorMessage(&directory);
@@ -2258,3 +2261,17 @@ bool CGUIMediaWindow::WaitGetDirectoryItems(CGetDirectoryItems &items)
   }
   return ret;
 }
+
+void CGUIMediaWindow::CancelUpdateItems()
+{
+  if (m_updateJobActive)
+  {
+    m_rootDir.CancelDirectory();
+    m_updateAborted = true;
+    if (!m_updateEvent.WaitMSec(5000))
+    {
+      CLog::Log(LOGERROR, "CGUIMediaWindow::CancelUpdateItems - error cancel update");
+    }
+    m_updateJobActive = false;
+  }
+}
diff --git a/xbmc/windows/GUIMediaWindow.h b/xbmc/windows/GUIMediaWindow.h
index cc5f7108f86c..be3a4a846e99 100644
--- a/xbmc/windows/GUIMediaWindow.h
+++ b/xbmc/windows/GUIMediaWindow.h
@@ -173,6 +173,7 @@ class CGUIMediaWindow : public CGUIWindow
   bool WaitForNetwork() const;
   bool GetDirectoryItems(CURL &url, CFileItemList &items, bool useDir);
   bool WaitGetDirectoryItems(CGetDirectoryItems &items);
+  void CancelUpdateItems();
 
   /*! \brief Translate the folder to start in from the given quick path
    \param url the folder the user wants
@@ -212,7 +213,7 @@ class CGUIMediaWindow : public CGUIWindow
     std::atomic_bool &m_update;
   };
   CEvent m_updateEvent;
-  std::atomic_bool m_updateAborted;
+  std::atomic_bool m_updateAborted = {false};
   std::atomic_bool m_updateJobActive = {false};
 
   // save control state on window exit
