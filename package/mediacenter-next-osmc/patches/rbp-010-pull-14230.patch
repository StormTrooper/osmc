From 4c6cc85b000f9cbb211fbb990de5bcbc2e71a265 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Thu, 26 Jul 2018 19:58:25 +0200
Subject: [PATCH 1/2] VideoPlayer: fix frame advance

---
 xbmc/cores/DataCacheCore.cpp                   | 14 ++++++++++++++
 xbmc/cores/DataCacheCore.h                     |  3 +++
 xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp | 17 +++++++++++++++++
 xbmc/cores/VideoPlayer/Process/ProcessInfo.h   |  3 +++
 xbmc/cores/VideoPlayer/VideoPlayer.cpp         | 14 +++++++++++---
 xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp    |  4 ++--
 6 files changed, 50 insertions(+), 5 deletions(-)

diff --git a/xbmc/cores/DataCacheCore.cpp b/xbmc/cores/DataCacheCore.cpp
index 218418346b49..82805c2c33fe 100644
--- a/xbmc/cores/DataCacheCore.cpp
+++ b/xbmc/cores/DataCacheCore.cpp
@@ -289,6 +289,20 @@ float CDataCacheCore::GetTempo()
   return m_stateInfo.m_tempo;
 }
 
+void CDataCacheCore::SetFrameAdvance(bool fa)
+{
+  CSingleLock lock(m_stateSection);
+
+  m_stateInfo.m_frameAdvance = fa;
+}
+
+bool CDataCacheCore::IsFrameAdvance()
+{
+  CSingleLock lock(m_stateSection);
+
+  return m_stateInfo.m_frameAdvance;
+}
+
 bool CDataCacheCore::IsPlayerStateChanged()
 {
   CSingleLock lock(m_stateSection);
diff --git a/xbmc/cores/DataCacheCore.h b/xbmc/cores/DataCacheCore.h
index f965a4f0fcbe..59c403139fb6 100644
--- a/xbmc/cores/DataCacheCore.h
+++ b/xbmc/cores/DataCacheCore.h
@@ -72,6 +72,8 @@ class CDataCacheCore
   void SetSpeed(float tempo, float speed);
   float GetSpeed();
   float GetTempo();
+  void SetFrameAdvance(bool fa);
+  bool IsFrameAdvance();
   bool IsPlayerStateChanged();
   void SetGuiRender(bool gui);
   bool GetGuiRender();
@@ -154,6 +156,7 @@ class CDataCacheCore
     bool m_renderVideoLayer;
     float m_tempo;
     float m_speed;
+    bool m_frameAdvance;
   } m_stateInfo;
 
   struct STimeInfo
diff --git a/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp b/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp
index 75a4f0c0c238..5322c8e17817 100644
--- a/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp
+++ b/xbmc/cores/VideoPlayer/Process/ProcessInfo.cpp
@@ -531,6 +531,23 @@ float CProcessInfo::GetNewSpeed()
   return m_newSpeed;
 }
 
+void CProcessInfo::SetFrameAdvance(bool fa)
+{
+  CSingleLock lock(m_stateSection);
+
+  m_frameAdvance = fa;
+
+  if (m_dataCache)
+    m_dataCache->SetFrameAdvance(fa);
+}
+
+bool CProcessInfo::IsFrameAdvance()
+{
+  CSingleLock lock(m_stateSection);
+
+  return m_frameAdvance;
+}
+
 void CProcessInfo::SetTempo(float tempo)
 {
   CSingleLock lock(m_stateSection);
diff --git a/xbmc/cores/VideoPlayer/Process/ProcessInfo.h b/xbmc/cores/VideoPlayer/Process/ProcessInfo.h
index 6a3d3b637648..e1cb8619ed41 100644
--- a/xbmc/cores/VideoPlayer/Process/ProcessInfo.h
+++ b/xbmc/cores/VideoPlayer/Process/ProcessInfo.h
@@ -100,6 +100,8 @@ class CProcessInfo
   void SetSpeed(float speed);
   void SetNewSpeed(float speed);
   float GetNewSpeed();
+  void SetFrameAdvance(bool fa);
+  bool IsFrameAdvance();
   void SetTempo(float tempo);
   void SetNewTempo(float tempo);
   float GetNewTempo();
@@ -168,6 +170,7 @@ class CProcessInfo
   float m_newTempo;
   float m_speed;
   float m_newSpeed;
+  bool m_frameAdvance;
   time_t m_startTime;
   int64_t m_time;
   int64_t m_timeMax;
diff --git a/xbmc/cores/VideoPlayer/VideoPlayer.cpp b/xbmc/cores/VideoPlayer/VideoPlayer.cpp
index 6628ac1e7405..0ce8ca91576c 100644
--- a/xbmc/cores/VideoPlayer/VideoPlayer.cpp
+++ b/xbmc/cores/VideoPlayer/VideoPlayer.cpp
@@ -687,6 +687,7 @@ CVideoPlayer::CVideoPlayer(IPlayerCallback& callback)
   m_processInfo->SetDataCache(&CServiceBroker::GetDataCacheCore());
   m_processInfo->SetSpeed(1.0);
   m_processInfo->SetTempo(1.0);
+  m_processInfo->SetFrameAdvance(false);
 
   CreatePlayers();
 
@@ -1246,6 +1247,7 @@ void CVideoPlayer::Prepare()
   SetPlaySpeed(DVD_PLAYSPEED_NORMAL);
   m_processInfo->SetSpeed(1.0);
   m_processInfo->SetTempo(1.0);
+  m_processInfo->SetFrameAdvance(false);
   m_State.Clear();
   m_CurrentVideo.hint.Clear();
   m_CurrentAudio.hint.Clear();
@@ -2963,6 +2965,8 @@ void CVideoPlayer::HandleMessages()
       else
         m_processInfo->SetSpeed(static_cast<float>(speed) / DVD_PLAYSPEED_NORMAL);
 
+      m_processInfo->SetFrameAdvance(false);
+
       m_playSpeed = speed;
 
       m_caching = CACHESTATE_DONE;
@@ -2973,9 +2977,13 @@ void CVideoPlayer::HandleMessages()
     }
     else if (pMsg->IsType(CDVDMsg::PLAYER_FRAME_ADVANCE))
     {
-      int frames = static_cast<CDVDMsgInt*>(pMsg)->m_value;
-      double time = DVD_TIME_BASE / m_processInfo->GetVideoFps() * frames;
-      m_clock.Advance(time);
+      if (m_playSpeed == DVD_PLAYSPEED_PAUSE)
+      {
+        int frames = static_cast<CDVDMsgInt*>(pMsg)->m_value;
+        double time = DVD_TIME_BASE / m_processInfo->GetVideoFps() * frames;
+        m_processInfo->SetFrameAdvance(true);
+        m_clock.Advance(time);
+      }
     }
     else if (pMsg->IsType(CDVDMsg::GENERAL_GUI_ACTION))
       OnAction(static_cast<CDVDMsgType<CAction>*>(pMsg)->m_value);
diff --git a/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp b/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp
index 8d23761bef41..1a598d8ca54e 100644
--- a/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp
+++ b/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp
@@ -365,8 +365,8 @@ void CVideoPlayerVideo::Process()
       }
       // don't ask for a new frame if we can't deliver it to renderer
       else if ((m_speed != DVD_PLAYSPEED_PAUSE ||
-                m_syncState != IDVDStreamPlayer::SYNC_INSYNC) &&
-               !m_paused)
+                m_processInfo.IsFrameAdvance() ||
+                m_syncState != IDVDStreamPlayer::SYNC_INSYNC) && !m_paused)
       {
         if (ProcessDecoderOutput(frametime, pts))
         {

From ae704f37d8c52be9542b1a782d027a5b9b681419 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Thu, 26 Jul 2018 20:47:06 +0200
Subject: [PATCH 2/2] gui: add info bool for frame advance

---
 xbmc/GUIInfoManager.cpp               | 9 ++++++++-
 xbmc/guilib/guiinfo/GUIInfoLabels.h   | 1 +
 xbmc/guilib/guiinfo/PlayerGUIInfo.cpp | 3 +++
 3 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/xbmc/GUIInfoManager.cpp b/xbmc/GUIInfoManager.cpp
index fd6af2888f4a..55cde5eda902 100644
--- a/xbmc/GUIInfoManager.cpp
+++ b/xbmc/GUIInfoManager.cpp
@@ -344,6 +344,12 @@ const infomap integer_bools[] =  {{ "isequal",          INTEGER_IS_EQUAL },
 ///     Returns true if pvr channel preview is active (used channel tag different
 ///     from played tag)
 ///   }
+///   \table_row3{   <b>`Player.FrameAdvance`</b>,
+///                  \anchor Player_FrameAdvance
+///                  _boolean_,
+///     Returns true if player is in frame advance mode. Skins should hide seek bar
+///     in this mode)
+///   }
 /// \table_end
 /// @}
 const infomap player_labels[] =  {{ "hasmedia",         PLAYER_HAS_MEDIA },           // bools from here
@@ -395,7 +401,8 @@ const infomap player_labels[] =  {{ "hasmedia",         PLAYER_HAS_MEDIA },
                                   { "istempo", PLAYER_IS_TEMPO},
                                   { "playspeed", PLAYER_PLAYSPEED},
                                   { "hasprograms", PLAYER_HAS_PROGRAMS},
-                                  { "hasresolutions", PLAYER_HAS_RESOLUTIONS}};
+                                  { "hasresolutions", PLAYER_HAS_RESOLUTIONS},
+                                  { "frameadvance", PLAYER_FRAMEADVANCE}};
 
 /// \page modules__General__List_of_gui_access
 /// @{
diff --git a/xbmc/guilib/guiinfo/GUIInfoLabels.h b/xbmc/guilib/guiinfo/GUIInfoLabels.h
index 0a2ee48cdc7e..38a59ecfcecc 100644
--- a/xbmc/guilib/guiinfo/GUIInfoLabels.h
+++ b/xbmc/guilib/guiinfo/GUIInfoLabels.h
@@ -81,6 +81,7 @@
 #define PLAYER_HAS_GAME              62
 #define PLAYER_HAS_PROGRAMS          63
 #define PLAYER_HAS_RESOLUTIONS       64
+#define PLAYER_FRAMEADVANCE          65
 
 #define WEATHER_CONDITIONS_TEXT     100
 #define WEATHER_TEMPERATURE         101
diff --git a/xbmc/guilib/guiinfo/PlayerGUIInfo.cpp b/xbmc/guilib/guiinfo/PlayerGUIInfo.cpp
index 49beaa0c9f41..9e819e8c4213 100644
--- a/xbmc/guilib/guiinfo/PlayerGUIInfo.cpp
+++ b/xbmc/guilib/guiinfo/PlayerGUIInfo.cpp
@@ -528,6 +528,9 @@ bool CPlayerGUIInfo::GetBool(bool& value, const CGUIListItem *gitem, int context
     case PLAYER_HASDURATION:
       value = g_application.GetTotalTime() > 0;
       return true;
+    case PLAYER_FRAMEADVANCE:
+      value = CServiceBroker::GetDataCacheCore().IsFrameAdvance();
+      return true;
 
     ///////////////////////////////////////////////////////////////////////////////////////////////
     // PLAYLIST_*
