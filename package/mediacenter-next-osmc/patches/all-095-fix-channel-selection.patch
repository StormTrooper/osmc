From cbd96778cf947793f709c0e8508a085f5f101f2e Mon Sep 17 00:00:00 2001
From: Kai Sommerfeld <kai.sommerfeld@gmx.com>
Date: Sun, 19 Mar 2017 15:24:13 +0100
Subject: [PATCH] [PVR] Guide window: Fix event/channel selection after channel
 group switch.

---
 xbmc/epg/GUIEPGGridContainer.cpp       | 53 +++++++++++++++++-----------------
 xbmc/epg/GUIEPGGridContainer.h         |  1 -
 xbmc/epg/GUIEPGGridContainerModel.cpp  |  3 ++
 xbmc/epg/GUIEPGGridContainerModel.h    |  1 +
 xbmc/pvr/windows/GUIWindowPVRGuide.cpp | 15 +++++-----
 5 files changed, 38 insertions(+), 35 deletions(-)

diff --git a/xbmc/epg/GUIEPGGridContainer.cpp b/xbmc/epg/GUIEPGGridContainer.cpp
index 44ff0dd..ec3c4b04 100644
--- a/xbmc/epg/GUIEPGGridContainer.cpp
+++ b/xbmc/epg/GUIEPGGridContainer.cpp
@@ -346,14 +346,6 @@ void CGUIEPGGridContainer::RenderItem(float posX, float posY, CGUIListItem *item
   g_graphicsContext.RestoreOrigin();
 }
 
-void CGUIEPGGridContainer::ResetCoordinates()
-{
-  m_channelCursor = 0;
-  m_channelOffset = 0;
-  m_blockCursor = 0;
-  m_blockOffset = 0;
-}
-
 bool CGUIEPGGridContainer::OnAction(const CAction &action)
 {
   switch (action.GetID())
@@ -603,9 +595,23 @@ void CGUIEPGGridContainer::UpdateItems()
 
   if (prevSelectedEpgTag && (oldChannelIndex != 0 || oldBlockIndex != 0))
   {
-    if (m_gridModel->GetGridItem(newChannelIndex, newBlockIndex)->GetEPGInfoTag() != prevSelectedEpgTag)
+    if (newChannelIndex >= m_gridModel->ChannelItemsSize() ||
+        newBlockIndex >= m_gridModel->GetBlockCount() ||
+        m_gridModel->GetGridItem(newChannelIndex, newBlockIndex)->GetEPGInfoTag() != prevSelectedEpgTag)
+    {
       m_gridModel->FindChannelAndBlockIndex(channelUid, broadcastUid, eventOffset, newChannelIndex, newBlockIndex);
 
+      if (newChannelIndex == CGUIEPGGridContainerModel::INVALID_INDEX ||
+          newBlockIndex == CGUIEPGGridContainerModel::INVALID_INDEX)
+      {
+        // previous selection is no longer in grid, goto channel 0 and now
+        SetInvalid();
+        GoToChannel(0);
+        GoToNow();
+        return;
+      }
+    }
+
     // restore previous selection.
     if (newChannelIndex == oldChannelIndex && newBlockIndex == oldBlockIndex)
     {
@@ -1382,18 +1388,18 @@ void CGUIEPGGridContainer::SetTimelineItems(const std::unique_ptr<CFileItemList>
 
 void CGUIEPGGridContainer::GoToChannel(int channelIndex)
 {
-  if (channelIndex > m_gridModel->ChannelItemsSize() - m_channelsPerPage)
-  {
-    // last page
-    ScrollToChannelOffset(m_gridModel->ChannelItemsSize() - m_channelsPerPage);
-    SetChannel(channelIndex - (m_gridModel->ChannelItemsSize() - m_channelsPerPage));
-  }
-  else if (channelIndex < m_channelsPerPage)
+  if (channelIndex < m_channelsPerPage)
   {
     // first page
     ScrollToChannelOffset(0);
     SetChannel(channelIndex);
   }
+  else if (channelIndex > m_gridModel->ChannelItemsSize() - m_channelsPerPage)
+  {
+    // last page
+    ScrollToChannelOffset(m_gridModel->ChannelItemsSize() - m_channelsPerPage);
+    SetChannel(channelIndex - (m_gridModel->ChannelItemsSize() - m_channelsPerPage));
+  }
   else
   {
     ScrollToChannelOffset(channelIndex - m_channelCursor);
@@ -1403,17 +1409,12 @@ void CGUIEPGGridContainer::GoToChannel(int channelIndex)
 
 void CGUIEPGGridContainer::GoToBlock(int blockIndex)
 {
-  if (blockIndex > m_gridModel->GetBlockCount() - m_blocksPerPage)
+  int lastPage = m_gridModel->GetBlockCount() - m_blocksPerPage;
+  if (blockIndex > lastPage)
   {
-    // last block
-    ScrollToBlockOffset(m_gridModel->GetBlockCount() - m_blocksPerPage);
-    SetBlock(blockIndex - (m_gridModel->GetBlockCount() - m_blocksPerPage));
-  }
-  else if (blockIndex < m_blocksPerPage)
-  {
-    // first block
-    ScrollToBlockOffset(0);
-    SetBlock(blockIndex);
+    // last page
+    ScrollToBlockOffset(lastPage);
+    SetBlock(blockIndex - lastPage);
   }
   else
   {
diff --git a/xbmc/epg/GUIEPGGridContainer.h b/xbmc/epg/GUIEPGGridContainer.h
index cf6a901..72be679 100644
--- a/xbmc/epg/GUIEPGGridContainer.h
+++ b/xbmc/epg/GUIEPGGridContainer.h
@@ -84,7 +84,6 @@ namespace EPG
     void SetTimelineItems(const std::unique_ptr<CFileItemList> &items, const CDateTime &gridStart, const CDateTime &gridEnd);
     void SetChannel(const PVR::CPVRChannelPtr &channel);
     void SetChannel(const std::string &channel);
-    void ResetCoordinates();
 
   protected:
     bool OnClick(int actionID);
diff --git a/xbmc/epg/GUIEPGGridContainerModel.cpp b/xbmc/epg/GUIEPGGridContainerModel.cpp
index 1abc733..69fd12d 100644
--- a/xbmc/epg/GUIEPGGridContainerModel.cpp
+++ b/xbmc/epg/GUIEPGGridContainerModel.cpp
@@ -272,6 +272,9 @@ void CGUIEPGGridContainerModel::FindChannelAndBlockIndex(int channelUid, unsigne
   const CDateTimeSpan blockDuration(0, 0, MINSPERBLOCK, 0);
   bool bFoundPrevChannel = false;
 
+  newChannelIndex = INVALID_INDEX;
+  newBlockIndex = INVALID_INDEX;
+
   for (size_t channel = 0; channel < m_channelItems.size(); ++channel)
   {
     CDateTime gridCursor(m_gridStart); //reset cursor for new channel
diff --git a/xbmc/epg/GUIEPGGridContainerModel.h b/xbmc/epg/GUIEPGGridContainerModel.h
index 06e66ec..716816e 100644
--- a/xbmc/epg/GUIEPGGridContainerModel.h
+++ b/xbmc/epg/GUIEPGGridContainerModel.h
@@ -53,6 +53,7 @@ namespace EPG
     void Refresh(const std::unique_ptr<CFileItemList> &items, const CDateTime &gridStart, const CDateTime &gridEnd, int iRulerUnit, int iBlocksPerPage, float fBlockSize);
     void SetInvalid();
 
+    static const int INVALID_INDEX = -1;
     void FindChannelAndBlockIndex(int channelUid, unsigned int broadcastUid, int eventOffset, int &newChannelIndex, int &newBlockIndex) const;
 
     void FreeChannelMemory(int keepStart, int keepEnd);
diff --git a/xbmc/pvr/windows/GUIWindowPVRGuide.cpp b/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
index 93e875c..2193f951 100644
--- a/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+++ b/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
@@ -508,10 +508,16 @@ void CGUIWindowPVRGuide::GetViewNextItems(CFileItemList &items)
 
 bool CGUIWindowPVRGuide::RefreshTimelineItems()
 {
-  if (m_bRefreshTimelineItems)
+  bool bRefreshTimelineItems;
   {
+    CSingleLock lock(m_critSection);
+
+    bRefreshTimelineItems = m_bRefreshTimelineItems;
     m_bRefreshTimelineItems = false;
+  }
 
+  if (bRefreshTimelineItems)
+  {
     CGUIEPGGridContainer* epgGridContainer = GetGridControl();
     if (epgGridContainer)
     {
@@ -557,18 +563,11 @@ bool CGUIWindowPVRGuide::RefreshTimelineItems()
 void CGUIWindowPVRGuide::GetViewTimelineItems(CFileItemList &items)
 {
   bool bRefresh = false;
-
   {
     CSingleLock lock(m_critSection);
 
-    // group change detected reset grid coordinates and refresh grid items
     if (!m_bRefreshTimelineItems && *m_cachedChannelGroup != *GetChannelGroup())
     {
-      CGUIEPGGridContainer* epgGridContainer = GetGridControl();
-      if (!epgGridContainer)
-        return;
-
-      epgGridContainer->ResetCoordinates();
       m_bRefreshTimelineItems = true;
       bRefresh = true;
     }
