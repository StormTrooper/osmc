From 4a0ce1098089e2dbfaf56ea18dfa437c832a9a33 Mon Sep 17 00:00:00 2001
From: montellese <montellese@kodi.tv>
Date: Wed, 27 May 2020 22:49:57 +0200
Subject: [PATCH] [cmake] FindGtest.cmake: properly support debug and release
 builds

---
 cmake/modules/FindGtest.cmake | 53 +++++++++++++++++++++--------------
 1 file changed, 32 insertions(+), 21 deletions(-)

diff --git a/cmake/modules/FindGtest.cmake b/cmake/modules/FindGtest.cmake
index 0802123d9276..b59554b23ee5 100644
--- a/cmake/modules/FindGtest.cmake
+++ b/cmake/modules/FindGtest.cmake
@@ -8,6 +8,10 @@
 # GTEST_FOUND - system has gtest
 # GTEST_INCLUDE_DIRS - the gtest include directories
 # GTEST_LIBRARIES - the gtest libraries
+#
+# and the following imported targets:
+#
+#   Gtest::Gtest   - The gtest library
 
 if(ENABLE_INTERNAL_GTEST)
   include(ExternalProject)
@@ -39,35 +43,42 @@ if(ENABLE_INTERNAL_GTEST)
                       INSTALL_DIR ${CMAKE_BINARY_DIR}/${CORE_BUILD_DIR}
                       CMAKE_ARGS -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE} -DBUILD_GMOCK=OFF -DINSTALL_GTEST=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR> -DCMAKE_INSTALL_LIBDIR=lib
                       BUILD_BYPRODUCTS ${GTEST_LIBRARY})
-
-  include(FindPackageHandleStandardArgs)
-  find_package_handle_standard_args(Gtest
-                                    REQUIRED_VARS GTEST_LIBRARY GTEST_INCLUDE_DIR
-                                    VERSION_VAR GTEST_VERSION)
-
-  set(GTEST_LIBRARIES ${GTEST_LIBRARY})
-  set(GTEST_INCLUDE_DIRS ${GTEST_INCLUDE_DIR})
+  set_target_properties(gtest PROPERTIES FOLDER "External Projects")
 else()
   if(PKG_CONFIG_FOUND)
     pkg_check_modules(PC_GTEST gtest>=1.10.0 QUIET)
+    set(GTEST_VERSION ${PC_GTEST_VERSION})
+  elseif(WIN32)
+    set(GTEST_VERSION 1.10.0)
   endif()
 
-  find_library(GTEST_LIBRARY NAMES gtest
-                             PATHS ${PC_GTEST_LIBDIR})
-
   find_path(GTEST_INCLUDE_DIR NAMES gtest/gtest.h
                               PATHS ${PC_GTEST_INCLUDEDIR})
 
-  set(GTEST_VERSION ${PC_GTEST_VERSION})
+  find_library(GTEST_LIBRARY_RELEASE NAMES gtest
+                                     PATHS ${PC_GTEST_LIBDIR})
+  find_library(GTEST_LIBRARY_DEBUG NAMES gtestd
+                                   PATHS ${PC_GTEST_LIBDIR})
 
-  include(FindPackageHandleStandardArgs)
-  find_package_handle_standard_args(Gtest
-                                    REQUIRED_VARS GTEST_LIBRARY GTEST_INCLUDE_DIR
-                                    VERSION_VAR GTEST_VERSION)
+  include(SelectLibraryConfigurations)
+  select_library_configurations(GTEST)
+endif()
 
-  if(GTEST_FOUND)
-    set(GTEST_LIBRARIES ${GTEST_LIBRARY})
-    set(GTEST_INCLUDE_DIRS ${GTEST_INCLUDE_DIR})
-  endif()
-  mark_as_advanced(GTEST_INCLUDE_DIR GTEST_LIBRARY)
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Gtest
+                                  REQUIRED_VARS GTEST_LIBRARY GTEST_INCLUDE_DIR
+                                  VERSION_VAR GTEST_VERSION)
+
+if(GTEST_FOUND)
+  set(GTEST_LIBRARIES ${GTEST_LIBRARY})
+  set(GTEST_INCLUDE_DIRS ${GTEST_INCLUDE_DIR})
 endif()
+
+if(NOT TARGET Gtest::Gtest)
+  add_library(Gtest::Gtest UNKNOWN IMPORTED)
+  set_target_properties(Gtest::Gtest PROPERTIES
+                                     IMPORTED_LOCATION "${GTEST_LIBRARY}"
+                                     INTERFACE_INCLUDE_DIRECTORIES "${GTEST_INCLUDE_DIR}")
+endif()
+
+mark_as_advanced(GTEST_INCLUDE_DIR GTEST_LIBRARY)
