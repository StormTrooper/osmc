From f1a80a4335318394deae3feab6acf817ecffd6f4 Mon Sep 17 00:00:00 2001
From: CastagnaIT <gottardo.stefano.83@gmail.com>
Date: Wed, 22 Jan 2020 13:41:42 +0100
Subject: [PATCH] Perform operations only outside the login screen

---
 xbmc/profiles/ProfileManager.cpp | 23 ++++++++++++++++-------
 xbmc/profiles/ProfileManager.h   |  1 +
 2 files changed, 17 insertions(+), 7 deletions(-)

diff --git a/xbmc/profiles/ProfileManager.cpp b/xbmc/profiles/ProfileManager.cpp
index 7c35a50487b2..d2a9d5eb2893 100644
--- a/xbmc/profiles/ProfileManager.cpp
+++ b/xbmc/profiles/ProfileManager.cpp
@@ -245,6 +245,7 @@ void CProfileManager::Clear()
   CSingleLock lock(m_critical);
   m_usingLoginScreen = false;
   m_profileLoadedForLogin = false;
+  m_previousProfileLoadedForLogin = false;
   m_lastUsedProfile = 0;
   m_nextProfileId = 0;
   SetCurrentProfileId(0);
@@ -297,7 +298,7 @@ bool CProfileManager::LoadProfile(unsigned int index)
 
   // save any settings of the currently used skin but only if the (master)
   // profile hasn't just been loaded as a temporary profile for login
-  if (g_SkinInfo != nullptr && !m_profileLoadedForLogin)
+  if (g_SkinInfo != nullptr && !m_previousProfileLoadedForLogin)
     g_SkinInfo->SaveSettings();
 
   // @todo: why is m_settings not used here?
@@ -307,7 +308,7 @@ bool CProfileManager::LoadProfile(unsigned int index)
   settings->Unload();
 
   SetCurrentProfileId(index);
-  m_profileLoadedForLogin = false;
+  m_previousProfileLoadedForLogin = false;
 
   // load the new settings
   if (!settings->Load())
@@ -363,6 +364,8 @@ bool CProfileManager::LoadProfile(unsigned int index)
   Save();
   FinalizeLoadProfile();
 
+  m_profileLoadedForLogin = false;
+
   return true;
 }
 
@@ -407,14 +410,17 @@ void CProfileManager::FinalizeLoadProfile()
   contextMenuManager.Init();
 
   // Restart PVR services if we are not just loading the master profile for the login screen
-  if (m_profileLoadedForLogin || m_currentProfile != 0 || m_lastUsedProfile == 0)
+  if (m_previousProfileLoadedForLogin || m_currentProfile != 0 || m_lastUsedProfile == 0)
     pvrManager.Init();
 
   favouritesManager.ReInit(GetProfileUserDataFolder());
 
-  serviceAddons.Start();
-
-  g_application.UpdateLibraries();
+  // Start these operations only when a profile is loaded, not on the login screen
+  if (!m_profileLoadedForLogin || (m_profileLoadedForLogin && m_lastUsedProfile == 0))
+  {
+    serviceAddons.Start();
+    g_application.UpdateLibraries();
+  }
 
   stereoscopicsManager.Initialize();
 
@@ -602,10 +608,13 @@ void CProfileManager::LoadMasterProfileForLogin()
   m_lastUsedProfile = m_currentProfile;
   if (m_currentProfile != 0)
   {
+    // determines that the (master) profile has only been loaded for login
+    m_profileLoadedForLogin = true;
+
     LoadProfile(0);
 
     // remember that the (master) profile has only been loaded for login
-    m_profileLoadedForLogin = true;
+    m_previousProfileLoadedForLogin = true;
   }
 }
 
diff --git a/xbmc/profiles/ProfileManager.h b/xbmc/profiles/ProfileManager.h
index 97de86fad4cf..89d4c9b236ed 100644
--- a/xbmc/profiles/ProfileManager.h
+++ b/xbmc/profiles/ProfileManager.h
@@ -200,6 +200,7 @@ class CProfileManager : protected ISettingsHandler,
   std::vector<CProfile> m_profiles;
   bool m_usingLoginScreen = false;
   bool m_profileLoadedForLogin = false;
+  bool m_previousProfileLoadedForLogin = false;
   int m_autoLoginProfile = -1;
   unsigned int m_lastUsedProfile = 0;
   unsigned int m_currentProfile =
