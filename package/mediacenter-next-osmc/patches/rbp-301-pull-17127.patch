From 429284605f69a5156f96de9a12d657e830b30a73 Mon Sep 17 00:00:00 2001
From: enen92 <92enen@gmail.com>
Date: Sun, 19 Jan 2020 12:15:10 +0000
Subject: [PATCH] [VideoThumbLoader] Remove old SetArt fallbacks. Use appendArt
 to avoid replacing the whole art map

---
 xbmc/video/VideoThumbLoader.cpp           | 18 +++---------------
 xbmc/video/VideoThumbLoader.h             |  7 -------
 xbmc/video/dialogs/GUIDialogVideoInfo.cpp |  2 +-
 3 files changed, 4 insertions(+), 23 deletions(-)

diff --git a/xbmc/video/VideoThumbLoader.cpp b/xbmc/video/VideoThumbLoader.cpp
index 6cbfbf37d8e3..bf6b49696c94 100644
--- a/xbmc/video/VideoThumbLoader.cpp
+++ b/xbmc/video/VideoThumbLoader.cpp
@@ -347,7 +347,7 @@ bool CVideoThumbLoader::LoadItemCached(CFileItem* pItem)
       if (!art.empty())
         artwork.insert(std::make_pair(type, art));
     }
-    SetArt(*pItem, artwork);
+    pItem->AppendArt(artwork);
   }
 
   // hide thumb if episode is unwatched 
@@ -426,7 +426,7 @@ bool CVideoThumbLoader::LoadItemLookup(CFileItem* pItem)
       }
     }
   }
-  SetArt(*pItem, artwork);
+  pItem->AppendArt(artwork);
 
   // We can only extract flags/thumbs for file-like items
   if (!pItem->m_bIsFolder && pItem->IsVideo())
@@ -490,18 +490,6 @@ bool CVideoThumbLoader::LoadItemLookup(CFileItem* pItem)
   return true;
 }
 
-void CVideoThumbLoader::SetArt(CFileItem &item, const std::map<std::string, std::string> &artwork)
-{
-  item.SetArt(artwork);
-  if (artwork.find("thumb") == artwork.end())
-  { // set fallback for "thumb"
-    if (artwork.find("poster") != artwork.end())
-      item.SetArtFallback("thumb", "poster");
-    else if (artwork.find("banner") != artwork.end())
-      item.SetArtFallback("thumb", "banner");
-  }
-}
-
 bool CVideoThumbLoader::FillLibraryArt(CFileItem &item)
 {
   CVideoInfoTag &tag = *item.GetVideoInfoTag();
@@ -510,7 +498,7 @@ bool CVideoThumbLoader::FillLibraryArt(CFileItem &item)
     std::map<std::string, std::string> artwork;
     m_videoDatabase->Open();
     if (m_videoDatabase->GetArtForItem(tag.m_iDbId, tag.m_type, artwork))
-      SetArt(item, artwork);
+      item.AppendArt(artwork);
     else if (tag.m_type == "actor" && !tag.m_artist.empty())
     { // we retrieve music video art from the music database (no backward compat)
       CMusicDatabase database;
diff --git a/xbmc/video/VideoThumbLoader.h b/xbmc/video/VideoThumbLoader.h
index 1e76fc742eb9..96e0a31b4992 100644
--- a/xbmc/video/VideoThumbLoader.h
+++ b/xbmc/video/VideoThumbLoader.h
@@ -113,13 +113,6 @@ class CVideoThumbLoader : public CThumbLoader, public CJobQueue
    */
   void OnJobComplete(unsigned int jobID, bool success, CJob *job) override;
 
-  /*! \brief set the artwork map for an item
-   In addition, sets the standard fallbacks.
-   \param item the item on which to set art.
-   \param artwork the artwork map.
-   */
-  static void SetArt(CFileItem &item, const std::map<std::string, std::string> &artwork);
-
   static bool GetEmbeddedThumb(const std::string& path,
                                const std::string& type,
                                EmbeddedArt& art);
diff --git a/xbmc/video/dialogs/GUIDialogVideoInfo.cpp b/xbmc/video/dialogs/GUIDialogVideoInfo.cpp
index af83221e9e7d..5c7f57f6f19e 100644
--- a/xbmc/video/dialogs/GUIDialogVideoInfo.cpp
+++ b/xbmc/video/dialogs/GUIDialogVideoInfo.cpp
@@ -1085,7 +1085,7 @@ void CGUIDialogVideoInfo::PlayTrailer()
   item.GetVideoInfoTag()->m_strTitle = StringUtils::Format("%s (%s)",
                                                            m_movieItem->GetVideoInfoTag()->m_strTitle.c_str(),
                                                            g_localizeStrings.Get(20410).c_str());
-  CVideoThumbLoader::SetArt(item, m_movieItem->GetArt());
+  item.SetArt(m_movieItem->GetArt());
   item.GetVideoInfoTag()->m_iDbId = -1;
   item.GetVideoInfoTag()->m_iFileId = -1;
 
