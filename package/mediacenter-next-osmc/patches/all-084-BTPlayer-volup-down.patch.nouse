From 3cb6d9e59afb79f67ba84e83f3f398eafb52bc57 Mon Sep 17 00:00:00 2001
From: Gerald Barker <gerald.barker@gmail.com>
Date: Mon, 25 Feb 2019 22:20:48 +0000
Subject: [PATCH] [BTPlayer] New Python Events on Volume Up and Volume Down

---
 xbmc/Application.cpp                | 24 ++++++++++++++++++++++
 xbmc/Application.h                  |  2 ++
 xbmc/cores/IPlayerCallback.h        |  2 ++
 xbmc/interfaces/legacy/Player.cpp   | 21 +++++++++++++++++++
 xbmc/interfaces/legacy/Player.h     | 31 +++++++++++++++++++++++++++++
 xbmc/interfaces/python/XBPython.cpp | 22 ++++++++++++++++++++
 xbmc/interfaces/python/XBPython.h   |  2 ++
 7 files changed, 104 insertions(+)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 64e02677ddb6..a13bb665f4d8 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -1958,6 +1958,17 @@ bool CApplication::OnAction(const CAction &action)
   // Check for global volume control
   if ((action.GetAmount() && (action.GetID() == ACTION_VOLUME_UP || action.GetID() == ACTION_VOLUME_DOWN)) || action.GetID() == ACTION_VOLUME_SET)
   {
+
+    // fire python events
+    if (action.GetID() == ACTION_VOLUME_UP)
+    {
+	    OnVolumeUp();
+    }
+    if (action.GetID() == ACTION_VOLUME_DOWN)
+    {
+	    OnVolumeDown();
+    }
+
     if (!m_appPlayer.IsPassthrough())
     {
       if (m_muted)
@@ -3316,6 +3327,19 @@ void CApplication::OnNextItem()
 #endif
 }
 
+void CApplication::OnVolumeUp()
+{
+#ifdef HAS_PYTHON
+  g_pythonParser.OnVolumeUp();
+#endif  
+}
+
+void CApplication::OnVolumeDown()
+{
+#ifdef HAS_PYTHON
+  g_pythonParser.OnVolumeDown();
+#endif
+}
 
 bool CApplication::IsPlayingFullScreenVideo() const
 {
diff --git a/xbmc/Application.h b/xbmc/Application.h
index 09eb115073e6..82b3e683f6ed 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -181,6 +181,8 @@ friend class CAppInboundProtocol;
   void OnPlayBackSpeedChanged(int iSpeed) override;
   void OnPreviousItem() override;
   void OnNextItem() override;
+  void OnVolumeUp() override;
+  void OnVolumeDown() override;
   void OnAVChange() override;
   void OnAVStarted(const CFileItem &file) override;
   void RequestVideoSettings(const CFileItem &fileItem) override;
diff --git a/xbmc/cores/IPlayerCallback.h b/xbmc/cores/IPlayerCallback.h
index 2e3542504980..023fa071204f 100644
--- a/xbmc/cores/IPlayerCallback.h
+++ b/xbmc/cores/IPlayerCallback.h
@@ -35,4 +35,6 @@ class IPlayerCallback
   virtual void StoreVideoSettings(const CFileItem &fileItem, CVideoSettings vs) {};
   virtual void OnPreviousItem() {};
   virtual void OnNextItem() {};
+  virtual void OnVolumeUp() {};
+  virtual void OnVolumeDown() {};
 };
diff --git a/xbmc/interfaces/legacy/Player.cpp b/xbmc/interfaces/legacy/Player.cpp
index 4da826435a23..9a9534f9ce2a 100644
--- a/xbmc/interfaces/legacy/Player.cpp
+++ b/xbmc/interfaces/legacy/Player.cpp
@@ -197,6 +197,18 @@ namespace XBMCAddon
       invokeCallback(new CallbackFunction<Player>(this,&Player::onNextItem));
     }
 
+    void Player::OnVolumeUp()
+    {
+      XBMC_TRACE;
+      invokeCallback(new CallbackFunction<Player>(this,&Player::onVolumeUp));
+    }
+
+    void Player::OnVolumeDown()
+    {
+      XBMC_TRACE;
+      invokeCallback(new CallbackFunction<Player>(this,&Player::onVolumeDown));
+    }
+
     void Player::OnAVStarted(const CFileItem &file)
     {
       // We only have fileItem due to us having to
@@ -336,6 +348,15 @@ namespace XBMCAddon
       XBMC_TRACE;
     }
 
+    void Player::onVolumeUp()
+    {
+      XBMC_TRACE;
+    }
+
+    void Player::onVolumeDown()
+    {
+      XBMC_TRACE;
+    }
 
     bool Player::isPlaying()
     {
diff --git a/xbmc/interfaces/legacy/Player.h b/xbmc/interfaces/legacy/Player.h
index a8a4b5f18c92..651695a2033c 100644
--- a/xbmc/interfaces/legacy/Player.h
+++ b/xbmc/interfaces/legacy/Player.h
@@ -172,6 +172,35 @@ namespace XBMCAddon
       void playprevious();
 #endif
 
+#ifdef DOXYGEN_SHOULD_USE_THIS
+      ///
+      /// \ingroup python_PlayerCB
+      /// @brief \python_func{ OnVolumeUp()}
+      ///-----------------------------------------------------------------------
+      /// OnVolumeUp method.
+      ///
+      /// Will be called when the user turns the volume up.
+      ///
+      onVolumeUp();
+#else 
+      virtual void onVolumeUp();
+#endif
+
+#ifdef DOXYGEN_SHOULD_USE_THIS
+      ///
+      /// \ingroup python_PlayerCB
+      /// @brief \python_func{ OnVolumeDown()}
+      ///-----------------------------------------------------------------------
+      /// OnVolumeDown method.
+      ///
+      /// Will be called when the user turns the volume down.
+      ///
+      onVolumeDown();
+#else 
+      virtual void onVolumeDown();
+#endif      
+
+
 #ifdef DOXYGEN_SHOULD_USE_THIS
       ///
       /// \ingroup python_Player
@@ -834,6 +863,8 @@ namespace XBMCAddon
       SWIGHIDDENVIRTUAL void OnPlayBackSeekChapter(int iChapter) override;
       SWIGHIDDENVIRTUAL void OnPreviousItem();
       SWIGHIDDENVIRTUAL void OnNextItem();
+      SWIGHIDDENVIRTUAL void OnVolumeDown();
+      SWIGHIDDENVIRTUAL void OnVolumeUp();
 #endif
 
     protected:
diff --git a/xbmc/interfaces/python/XBPython.cpp b/xbmc/interfaces/python/XBPython.cpp
index e68748a306be..e0dc2f609923 100644
--- a/xbmc/interfaces/python/XBPython.cpp
+++ b/xbmc/interfaces/python/XBPython.cpp
@@ -272,6 +272,28 @@ void XBPython::OnNextItem()
   }
 }
 
+void XBPython::OnVolumeUp()
+{
+  XBMC_TRACE;
+  LOCK_AND_COPY(std::vector<void*>,tmp,m_vecPlayerCallbackList);
+  for (PlayerCallbackList::iterator it = tmp.begin(); (it != tmp.end()); ++it)
+  {
+    if (CHECK_FOR_ENTRY(m_vecPlayerCallbackList,(*it)))
+      ((IPlayerCallback*)(*it))->OnVolumeUp();
+  }
+}
+
+void XBPython::OnVolumeDown()
+{
+  XBMC_TRACE;
+  LOCK_AND_COPY(std::vector<void*>,tmp,m_vecPlayerCallbackList);
+  for (PlayerCallbackList::iterator it = tmp.begin(); (it != tmp.end()); ++it)
+  {
+    if (CHECK_FOR_ENTRY(m_vecPlayerCallbackList,(*it)))
+     ((IPlayerCallback*)(*it))->OnVolumeDown();
+  }
+}
+
 void XBPython::RegisterPythonPlayerCallBack(IPlayerCallback* pCallback)
 {
   XBMC_TRACE;
diff --git a/xbmc/interfaces/python/XBPython.h b/xbmc/interfaces/python/XBPython.h
index a425e6d7e8f8..97fa8f15e061 100644
--- a/xbmc/interfaces/python/XBPython.h
+++ b/xbmc/interfaces/python/XBPython.h
@@ -70,6 +70,8 @@ class XBPython :
   void OnQueueNextItem() override;
   void OnPreviousItem();
   void OnNextItem();
+  void OnVolumeUp();
+  void OnVolumeDown();
   void Announce(ANNOUNCEMENT::AnnouncementFlag flag, const char *sender, const char *message, const CVariant &data) override;
   void RegisterPythonPlayerCallBack(IPlayerCallback* pCallback);
   void UnregisterPythonPlayerCallBack(IPlayerCallback* pCallback);
