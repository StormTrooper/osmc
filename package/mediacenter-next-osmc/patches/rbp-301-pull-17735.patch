From 9b02540eedfaa26b37a93d945d8e61d15c38378d Mon Sep 17 00:00:00 2001
From: enen92 <92enen@gmail.com>
Date: Wed, 22 Apr 2020 22:36:41 +0100
Subject: [PATCH] [python] move xbmc.makeLegalFilename() to xbmcvfs module

---
 .../doxygen/Modules/modules_python.dox        |  5 +++
 xbmc/interfaces/legacy/ModuleXbmc.cpp         |  6 ---
 xbmc/interfaces/legacy/ModuleXbmc.h           | 33 -----------------
 xbmc/interfaces/legacy/ModuleXbmcvfs.cpp      |  7 ++++
 xbmc/interfaces/legacy/ModuleXbmcvfs.h        | 37 +++++++++++++++++++
 5 files changed, 49 insertions(+), 39 deletions(-)

diff --git a/xbmc/addons/kodi-addon-dev-kit/doxygen/Modules/modules_python.dox b/xbmc/addons/kodi-addon-dev-kit/doxygen/Modules/modules_python.dox
index 6f0e6a144b76..92eb0b5828c1 100644
--- a/xbmc/addons/kodi-addon-dev-kit/doxygen/Modules/modules_python.dox
+++ b/xbmc/addons/kodi-addon-dev-kit/doxygen/Modules/modules_python.dox
@@ -213,6 +213,11 @@ web applications or frameworks for the Python programming language.
       "",
       <b>xbmcgui.Window().setCoordinateResolution()</b> function was removed completely.
 }
+\python_removed_function{
+      makeLegalFilename,
+      "",
+      <b>xbmc.makeLegalFilename()</b> function was moved to the xbmcvfs module.
+}
 */
 /*!
 @page python_v18 Python API v18
diff --git a/xbmc/interfaces/legacy/ModuleXbmc.cpp b/xbmc/interfaces/legacy/ModuleXbmc.cpp
index 3adeaebd38c8..a3be0422e830 100644
--- a/xbmc/interfaces/legacy/ModuleXbmc.cpp
+++ b/xbmc/interfaces/legacy/ModuleXbmc.cpp
@@ -377,12 +377,6 @@ namespace XBMCAddon
       return StringUtils::Format("%08x.tbn", crc);
     }
 
-    String makeLegalFilename(const String& filename, bool fatX)
-    {
-      XBMC_TRACE;
-      return CUtil::MakeLegalPath(filename);
-    }
-
     String translatePath(const String& path)
     {
       XBMC_TRACE;
diff --git a/xbmc/interfaces/legacy/ModuleXbmc.h b/xbmc/interfaces/legacy/ModuleXbmc.h
index c17a3d2d4339..365d7dd19059 100644
--- a/xbmc/interfaces/legacy/ModuleXbmc.h
+++ b/xbmc/interfaces/legacy/ModuleXbmc.h
@@ -630,39 +630,6 @@ namespace XBMCAddon
     String getCacheThumbName(const String& path);
 #endif
 
-#ifdef DOXYGEN_SHOULD_USE_THIS
-    ///
-    /// \ingroup python_xbmc
-    /// @brief \python_func{ xbmc.makeLegalFilename(filename[, fatX]) }
-    ///-----------------------------------------------------------------------
-    /// Returns a legal filename or path as a string.
-    ///
-    /// @param filename              string or unicode - filename/path to
-    ///                              make legal
-    /// @param fatX                  [opt] bool - True=Xbox file system(Default)
-    /// @return                      Legal filename or path as a string
-    ///
-    ///
-    /// @note If fatX is true you should pass a full path. If fatX is false only pass
-    ///       the basename of the path.\n\n
-    ///       You can use the above as keywords for arguments and skip certain optional arguments.
-    ///       Once you use a keyword, all following arguments require the keyword.
-    ///
-    ///
-    /// ------------------------------------------------------------------------
-    ///
-    /// **Example:**
-    /// ~~~~~~~~~~~~~{.py}
-    /// ..
-    /// filename = xbmc.makeLegalFilename('F:\\Trailers\\Ice Age: The Meltdown.avi')
-    /// ..
-    /// ~~~~~~~~~~~~~
-    ///
-    makeLegalFilename(...);
-#else
-    String makeLegalFilename(const String& filename,bool fatX = true);
-#endif
-
 #ifdef DOXYGEN_SHOULD_USE_THIS
     ///
     /// \ingroup python_xbmc
diff --git a/xbmc/interfaces/legacy/ModuleXbmcvfs.cpp b/xbmc/interfaces/legacy/ModuleXbmcvfs.cpp
index c94750febcb8..120a5de28d72 100644
--- a/xbmc/interfaces/legacy/ModuleXbmcvfs.cpp
+++ b/xbmc/interfaces/legacy/ModuleXbmcvfs.cpp
@@ -50,6 +50,13 @@ namespace XBMCAddon
       return XFILE::CFile::Exists(path, false);
     }
 
+    // make legal file name
+    String makeLegalFilename(const String& filename)
+    {
+      XBMC_TRACE;
+      return CUtil::MakeLegalPath(filename);
+    }
+
     // make a directory
     bool mkdir(const String& path)
     {
diff --git a/xbmc/interfaces/legacy/ModuleXbmcvfs.h b/xbmc/interfaces/legacy/ModuleXbmcvfs.h
index 277c1235fc8a..949807bc007b 100644
--- a/xbmc/interfaces/legacy/ModuleXbmcvfs.h
+++ b/xbmc/interfaces/legacy/ModuleXbmcvfs.h
@@ -135,6 +135,43 @@ namespace XBMCAddon
     bool exists(const String& path);
 #endif
 
+#ifdef DOXYGEN_SHOULD_USE_THIS
+    ///
+    /// \ingroup python_xbmcvfs
+    /// @brief \python_func{ xbmcvfs.makeLegalFilename(filename) }
+    ///-----------------------------------------------------------------------
+    /// Returns a legal filename or path as a string.
+    ///
+    /// @param filename              string - filename/path to make legal
+    /// @return              Legal filename or path as a string
+    ///
+    ///
+    /// @note The returned value is platform-specific. This is due to the fact that
+    /// the chars that need to be replaced to make a path legal depend on the
+    /// underlying OS filesystem. This is useful, for example, if you want to create
+    /// a file or folder based on data over which you have no control (e.g. an external API).
+    ///
+    ///
+    ///-------------------------------------------------------------------------
+    /// @python_v19 New function added (replaces old **xbmc.makeLegalFilename**)
+    ///
+    /// **Example:**
+    /// ~~~~~~~~~~~~~{.py}
+    /// ..
+    /// # windows
+    /// >> xbmcvfs.makeLegalFilename('C://Trailers/Ice Age: The Meltdown.avi')
+    /// C:\Trailers\Ice Age_ The Meltdown.avi
+    /// # non-windows
+    /// >> xbmcvfs.makeLegalFilename("///\\jk???lj????.mpg")
+    /// /jk___lj____.mpg
+    /// ..
+    /// ~~~~~~~~~~~~~
+    ///
+    makeLegalFilename(...);
+#else
+    String makeLegalFilename(const String& filename);
+#endif
+
 #ifdef DOXYGEN_SHOULD_USE_THIS
     ///
     /// \ingroup python_xbmcvfs
