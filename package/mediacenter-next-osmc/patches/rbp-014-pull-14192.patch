From ed1581d44e306526075cdbad99bbbc40420c2054 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 01/18] [network] use std::string instead of char* for
 CHttpResponse::Create

---
 xbmc/network/websocket/WebSocketManager.cpp | 8 ++------
 xbmc/network/websocket/WebSocketV13.cpp     | 4 +---
 xbmc/network/websocket/WebSocketV8.cpp      | 4 +---
 xbmc/utils/HttpResponse.cpp                 | 5 ++---
 xbmc/utils/HttpResponse.h                   | 2 +-
 xbmc/utils/test/TestHttpResponse.cpp        | 8 ++------
 6 files changed, 9 insertions(+), 22 deletions(-)

diff --git a/xbmc/network/websocket/WebSocketManager.cpp b/xbmc/network/websocket/WebSocketManager.cpp
index 87b320c78d15..6d16b50b37b7 100644
--- a/xbmc/network/websocket/WebSocketManager.cpp
+++ b/xbmc/network/websocket/WebSocketManager.cpp
@@ -60,9 +60,7 @@ CWebSocket* CWebSocketManager::Handle(const char* data, unsigned int length, std
   {
     CLog::Log(LOGINFO, "WebSocket: missing Sec-WebSocket-Version");
     CHttpResponse httpResponse(HTTP::Get, HTTP::BadRequest, HTTP::Version1_1);
-    char *responseBuffer;
-    int responseLength = httpResponse.Create(responseBuffer);
-    response = std::string(responseBuffer, responseLength);
+    response = response = httpResponse.Create();;
 
     return NULL;
   }
@@ -78,9 +76,7 @@ CWebSocket* CWebSocketManager::Handle(const char* data, unsigned int length, std
     CLog::Log(LOGINFO, "WebSocket: Unsupported Sec-WebSocket-Version %s", value);
     CHttpResponse httpResponse(HTTP::Get, HTTP::UpgradeRequired, HTTP::Version1_1);
     httpResponse.AddHeader(WS_HEADER_VERSION, WS_SUPPORTED_VERSIONS);
-    char *responseBuffer;
-    int responseLength = httpResponse.Create(responseBuffer);
-    response = std::string(responseBuffer, responseLength);
+    response = response = httpResponse.Create();
 
     return NULL;
   }
diff --git a/xbmc/network/websocket/WebSocketV13.cpp b/xbmc/network/websocket/WebSocketV13.cpp
index 3adaa7861197..fa781ca7ff91 100644
--- a/xbmc/network/websocket/WebSocketV13.cpp
+++ b/xbmc/network/websocket/WebSocketV13.cpp
@@ -144,9 +144,7 @@ bool CWebSocketV13::Handshake(const char* data, size_t length, std::string &resp
   if (!websocketProtocol.empty())
     httpResponse.AddHeader(WS_HEADER_PROTOCOL, websocketProtocol);
 
-  char *responseBuffer;
-  int responseLength = httpResponse.Create(responseBuffer);
-  response = std::string(responseBuffer, responseLength);
+  response = httpResponse.Create();
 
   m_state = WebSocketStateConnected;
 
diff --git a/xbmc/network/websocket/WebSocketV8.cpp b/xbmc/network/websocket/WebSocketV8.cpp
index 68da03eeb909..39fd5b48e7c4 100644
--- a/xbmc/network/websocket/WebSocketV8.cpp
+++ b/xbmc/network/websocket/WebSocketV8.cpp
@@ -126,9 +126,7 @@ bool CWebSocketV8::Handshake(const char* data, size_t length, std::string &respo
   if (!websocketProtocol.empty())
     httpResponse.AddHeader(WS_HEADER_PROTOCOL, websocketProtocol);
 
-  char *responseBuffer;
-  int responseLength = httpResponse.Create(responseBuffer);
-  response = std::string(responseBuffer, responseLength);
+  response = response = httpResponse.Create();
 
   m_state = WebSocketStateConnected;
 
diff --git a/xbmc/utils/HttpResponse.cpp b/xbmc/utils/HttpResponse.cpp
index bb986414f035..64e1f07c6e35 100644
--- a/xbmc/utils/HttpResponse.cpp
+++ b/xbmc/utils/HttpResponse.cpp
@@ -58,7 +58,7 @@ void CHttpResponse::SetContent(const char* data, unsigned int length)
     m_contentLength = length;
 }
 
-unsigned int CHttpResponse::Create(char *&response)
+std::string CHttpResponse::Create()
 {
   m_buffer.clear();
 
@@ -112,8 +112,7 @@ unsigned int CHttpResponse::Create(char *&response)
   if (m_content != NULL && m_contentLength > 0)
     m_buffer.append(m_content, m_contentLength);
 
-  response = (char *)m_buffer.c_str();
-  return m_buffer.size();
+  return m_buffer;
 }
 
 std::map<HTTP::StatusCode, std::string> CHttpResponse::createStatusCodes()
diff --git a/xbmc/utils/HttpResponse.h b/xbmc/utils/HttpResponse.h
index 01f7fc58b5d3..556caa221898 100644
--- a/xbmc/utils/HttpResponse.h
+++ b/xbmc/utils/HttpResponse.h
@@ -121,7 +121,7 @@ class CHttpResponse
   void AddHeader(const std::string &field, const std::string &value);
   void SetContent(const char* data, unsigned int length);
 
-  unsigned int Create(char *&response);
+  std::string Create();
 
 private:
   HTTP::Method m_method;
diff --git a/xbmc/utils/test/TestHttpResponse.cpp b/xbmc/utils/test/TestHttpResponse.cpp
index 85362d9d5678..f62dddc99352 100644
--- a/xbmc/utils/test/TestHttpResponse.cpp
+++ b/xbmc/utils/test/TestHttpResponse.cpp
@@ -25,10 +25,7 @@
 TEST(TestHttpResponse, General)
 {
   CHttpResponse a(HTTP::POST, HTTP::OK);
-  char *buf = new char(100);
   std::string response, content, refstr;
-  unsigned int size;
-  memset(buf, 0, sizeof(*buf));
 
   a.AddHeader("date", "Sun, 01 Jul 2012 00:00:00 -0400");
   a.AddHeader("content-type", "text/html");
@@ -40,10 +37,9 @@ TEST(TestHttpResponse, General)
              "</html>\r\n";
   a.SetContent(content.c_str(), content.length());
 
-  size = a.Create(buf);
-  EXPECT_EQ((unsigned int)210, size);
+  response = a.Create();;
+  EXPECT_EQ((unsigned int)210, response.size());
 
-  response = buf;
   refstr = "HTTP/1.1 200 OK\r\n"
            "date: Sun, 01 Jul 2012 00:00:00 -0400\r\n"
            "content-type: text/html\r\n"

From f1a841280059be0e49118c0bae71e017e53f8dc9 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 02/18] [cleanup][xbmc] silence casts away qualifiers warning

---
 xbmc/Util.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/Util.cpp b/xbmc/Util.cpp
index 0972c47766da..f7be460a68aa 100644
--- a/xbmc/Util.cpp
+++ b/xbmc/Util.cpp
@@ -1654,7 +1654,7 @@ bool CUtil::Command(const std::vector<std::string>& arrArgs, bool waitExit)
       char **args = (char **)alloca(sizeof(char *) * (arrArgs.size() + 3));
       memset(args, 0, (sizeof(char *) * (arrArgs.size() + 3)));
       for (size_t i=0; i<arrArgs.size(); i++)
-        args[i] = (char *)arrArgs[i].c_str();
+        args[i] = const_cast<char *>(arrArgs[i].c_str());
       execvp(args[0], args);
     }
   }

From b2ebaf058dfb0c02cf4edf94fe0c2307dfed5f26 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 03/18] [cleanup][addons] silence casts away qualifiers
 warnings

---
 xbmc/addons/AddonManager.cpp                         |  3 ++-
 xbmc/addons/binary-addons/AddonDll.cpp               |  2 +-
 xbmc/addons/interfaces/AddonInterfaces.cpp           |  2 +-
 .../kodi-addon-dev-kit/include/kodi/AddonBase.h      | 10 +++++-----
 xbmc/addons/test/TestAddonFactory.cpp                | 20 ++++++++++----------
 5 files changed, 19 insertions(+), 18 deletions(-)

diff --git a/xbmc/addons/AddonManager.cpp b/xbmc/addons/AddonManager.cpp
index 9427e9c0f340..133bb9a0c226 100644
--- a/xbmc/addons/AddonManager.cpp
+++ b/xbmc/addons/AddonManager.cpp
@@ -985,7 +985,8 @@ std::string CAddonMgr::GetTranslatedString(const cp_cfg_element_t *root, const c
     if (strcmp(tag, child.name) == 0)
     {
       // see if we have a "lang" attribute
-      const char *lang = cp_lookup_cfg_value((cp_cfg_element_t*)&child, "@lang");
+      //! @bug libcpluff isn't const correct
+      const char *lang = cp_lookup_cfg_value(const_cast<cp_cfg_element_t*>(&child), "@lang");
       if (lang != NULL && g_langInfo.GetLocale().Matches(lang))
         translatedValues.insert(std::make_pair(lang, child.value != NULL ? child.value : ""));
       else if (lang == NULL || strcmp(lang, "en") == 0 || strcmp(lang, "en_GB") == 0)
diff --git a/xbmc/addons/binary-addons/AddonDll.cpp b/xbmc/addons/binary-addons/AddonDll.cpp
index 1f718e4b02a3..3c499f02c8f6 100644
--- a/xbmc/addons/binary-addons/AddonDll.cpp
+++ b/xbmc/addons/binary-addons/AddonDll.cpp
@@ -577,7 +577,7 @@ void CAddonDll::DeInitInterface()
   Interface_General::DeInit(&m_interface);
 
   if (m_interface.libBasePath)
-    free((char*)m_interface.libBasePath);
+    free(const_cast<char*>(m_interface.libBasePath));
   if (m_interface.toKodi)
     free((char*)m_interface.toKodi);
   if (m_interface.toAddon)
diff --git a/xbmc/addons/interfaces/AddonInterfaces.cpp b/xbmc/addons/interfaces/AddonInterfaces.cpp
index 5fc007608c91..ddf2f8370601 100644
--- a/xbmc/addons/interfaces/AddonInterfaces.cpp
+++ b/xbmc/addons/interfaces/AddonInterfaces.cpp
@@ -64,7 +64,7 @@ CAddonInterfaces::~CAddonInterfaces()
   delete static_cast<KodiAPI::AddOn::CAddonCallbacksAddon*>(m_helperAddOn);
   delete static_cast<KodiAPI::GUI::CAddonCallbacksGUI*>(m_helperGUI);
 
-  free((char*)m_callbacks->libBasePath);
+  free(const_cast<char*>(m_callbacks->libBasePath));
   delete m_callbacks;
 }
 
diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/AddonBase.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/AddonBase.h
index f523c15dd8a3..205188557a72 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/AddonBase.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/AddonBase.h
@@ -264,11 +264,11 @@ class CSettingValue
   explicit CSettingValue(const void *settingValue) : m_settingValue(settingValue) {}
 
   bool empty() const { return (m_settingValue == nullptr) ? true : false; }
-  std::string GetString() const { return (char*)m_settingValue; }
-  int GetInt() const { return *(int*)m_settingValue; }
-  unsigned int GetUInt() const { return *(unsigned int*)m_settingValue; }
-  bool GetBoolean() const { return *(bool*)m_settingValue; }
-  float GetFloat() const { return *(float*)m_settingValue; }
+  std::string GetString() const { return (const char*)m_settingValue; }
+  int GetInt() const { return *(const int*)m_settingValue; }
+  unsigned int GetUInt() const { return *(const unsigned int*)m_settingValue; }
+  bool GetBoolean() const { return *(const bool*)m_settingValue; }
+  float GetFloat() const { return *(const float*)m_settingValue; }
 
 private:
   const void *m_settingValue;
diff --git a/xbmc/addons/test/TestAddonFactory.cpp b/xbmc/addons/test/TestAddonFactory.cpp
index 4b9ca3bc7b3a..7d9cd94cc13d 100644
--- a/xbmc/addons/test/TestAddonFactory.cpp
+++ b/xbmc/addons/test/TestAddonFactory.cpp
@@ -60,8 +60,8 @@ TEST_F(TestAddonFactory, ShouldFailWhenAddonDoesNotHaveRequestedType)
 TEST_F(TestAddonFactory, ShouldPickFirstExtensionWhenNotRequestingSpecificType)
 {
   cp_extension_t extensions[2] = {
-      {&plugin, (char*)"xbmc.python.script", nullptr, nullptr, nullptr, nullptr},
-      {&plugin, (char*)"xbmc.python.service", nullptr, nullptr, nullptr, nullptr},
+      {&plugin, const_cast<char*>("xbmc.python.script"), nullptr, nullptr, nullptr, nullptr},
+      {&plugin, const_cast<char*>("xbmc.python.service"), nullptr, nullptr, nullptr, nullptr},
   };
   plugin.extensions = extensions;
   plugin.num_extensions = 2;
@@ -74,7 +74,7 @@ TEST_F(TestAddonFactory, ShouldPickFirstExtensionWhenNotRequestingSpecificType)
 TEST_F(TestAddonFactory, ShouldIgnoreMetadataExtension)
 {
   cp_extension_t extensions[2] = {
-      {&plugin, (char*)"kodi.addon.metadata", nullptr, nullptr, nullptr, nullptr},
+      {&plugin, const_cast<char*>("kodi.addon.metadata"), nullptr, nullptr, nullptr, nullptr},
       scriptExtension,
   };
   plugin.extensions = extensions;
@@ -88,7 +88,7 @@ TEST_F(TestAddonFactory, ShouldIgnoreMetadataExtension)
 
 TEST_F(TestAddonFactory, ShouldReturnDependencyInfoWhenNoExtensions)
 {
-  cp_plugin_import_t import{(char*)"a.b", (char*)"1.2.3", 0};
+  cp_plugin_import_t import{const_cast<char*>("a.b"), const_cast<char*>("1.2.3"), 0};
   plugin.extensions = nullptr;
   plugin.num_extensions = 0;
   plugin.num_imports = 1;
@@ -102,7 +102,7 @@ TEST_F(TestAddonFactory, ShouldReturnDependencyInfoWhenNoExtensions)
 
 TEST_F(TestAddonFactory, ShouldAcceptUnversionedDependencies)
 {
-  cp_plugin_import_t import{(char*)"a.b", nullptr, 0};
+  cp_plugin_import_t import{const_cast<char*>("a.b"), nullptr, 0};
   plugin.extensions = nullptr;
   plugin.num_extensions = 0;
   plugin.num_imports = 1;
@@ -127,22 +127,22 @@ TEST_F(TestAddonFactory, IconPathShouldBeBuiltFromPluginPath)
 TEST_F(TestAddonFactory, AssetsElementShouldOverrideImplicitArt)
 {
   cp_cfg_element_t icon{0};
-  icon.name = (char*)"icon";
-  icon.value = (char*)"foo/bar.jpg";
+  icon.name = const_cast<char*>("icon");
+  icon.value = const_cast<char*>("foo/bar.jpg");
 
   cp_cfg_element_t assets{0};
-  assets.name = (char*)"assets";
+  assets.name = const_cast<char*>("assets");
   assets.num_children = 1;
   assets.children = &icon;
 
   cp_cfg_element_t root{0};
-  root.name = (char*)"kodi.addon.metadata";
+  root.name = const_cast<char*>("kodi.addon.metadata");
   root.num_children = 1;
   root.children = &assets;
   assets.parent = &root;
   icon.parent = &assets;
 
-  cp_extension_t metadata = {&plugin, (char*)"kodi.addon.metadata", nullptr, nullptr, nullptr, &root};
+  cp_extension_t metadata = {&plugin, const_cast<char*>("kodi.addon.metadata"), nullptr, nullptr, nullptr, &root};
 
   cp_extension_t extensions[1] = {metadata};
   plugin.extensions = extensions;

From b8f045e3a9dc47fe9eb7fe5ccbea9d058fd142bf Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 04/18] [cleanup][cdrip] silence casts away qualifiers warnings

---
 xbmc/cdrip/Encoder.cpp       | 2 +-
 xbmc/cdrip/EncoderFFmpeg.cpp | 3 ++-
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/xbmc/cdrip/Encoder.cpp b/xbmc/cdrip/Encoder.cpp
index 9301cf08c871..f16181050faa 100644
--- a/xbmc/cdrip/Encoder.cpp
+++ b/xbmc/cdrip/Encoder.cpp
@@ -147,7 +147,7 @@ int CEncoder::WriteStream(const void *pBuffer, uint32_t iBytes)
     m_dwWriteBufferPointer = 0;
 
     // pbtRemaining = pBuffer + bytesWritten
-    uint8_t* pbtRemaining = (uint8_t *)pBuffer + (iBytes - dwBytesRemaining);
+    const uint8_t* pbtRemaining = (const uint8_t *)pBuffer + (iBytes - dwBytesRemaining);
     if (dwBytesRemaining > WRITEBUFFER_SIZE)
     {
       // data is not going to fit in our buffer, just write it to disk
diff --git a/xbmc/cdrip/EncoderFFmpeg.cpp b/xbmc/cdrip/EncoderFFmpeg.cpp
index bcf139a6c8b6..d163a71322db 100644
--- a/xbmc/cdrip/EncoderFFmpeg.cpp
+++ b/xbmc/cdrip/EncoderFFmpeg.cpp
@@ -294,7 +294,8 @@ bool CEncoderFFmpeg::WriteFrame()
 
   if(m_NeedConversion)
   {
-    if (swr_convert(m_SwrCtx, m_ResampledFrame->extended_data, m_NeededFrames, (const uint8_t**)m_BufferFrame->extended_data, m_NeededFrames) < 0)
+    //! @bug libavresample isn't const correct
+    if (swr_convert(m_SwrCtx, m_ResampledFrame->extended_data, m_NeededFrames, const_cast<const uint8_t**>(m_BufferFrame->extended_data), m_NeededFrames) < 0)
     {
       CLog::Log(LOGERROR, "CEncoderFFmpeg::WriteFrame - Error resampling audio");
       return false;

From 2eeee586a3d405d1088c9a569ed307a41862ae33 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 05/18] [cleanup][AudioEngine] silence casts away qualifiers
 warnings

---
 xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEResampleFFMPEG.cpp | 3 ++-
 xbmc/cores/AudioEngine/Utils/AEELDParser.cpp                       | 4 ++--
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEResampleFFMPEG.cpp b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEResampleFFMPEG.cpp
index 5cf994be264d..3eec3c0cbf87 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEResampleFFMPEG.cpp
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEResampleFFMPEG.cpp
@@ -198,7 +198,8 @@ int CActiveAEResampleFFMPEG::Resample(uint8_t **dst_buffer, int dst_samples, uin
     }
   }
 
-  int ret = swr_convert(m_pContext, dst_buffer, dst_samples, (const uint8_t**)src_buffer, src_samples);
+  //! @bug libavresample isn't const correct
+  int ret = swr_convert(m_pContext, dst_buffer, dst_samples, const_cast<const uint8_t**>(src_buffer), src_samples);
   if (ret < 0)
   {
     CLog::Log(LOGERROR, "CActiveAEResampleFFMPEG::Resample - resample failed");
diff --git a/xbmc/cores/AudioEngine/Utils/AEELDParser.cpp b/xbmc/cores/AudioEngine/Utils/AEELDParser.cpp
index 523d31adb01d..508aaa6db9e8 100644
--- a/xbmc/cores/AudioEngine/Utils/AEELDParser.cpp
+++ b/xbmc/cores/AudioEngine/Utils/AEELDParser.cpp
@@ -107,12 +107,12 @@ void CAEELDParser::Parse(const uint8_t *data, size_t length, CAEDeviceInfo& info
   header.fc                  = (data[7 ] & 0x04) == 0x04;
   header.lfe                 = (data[7 ] & 0x02) == 0x02;
   header.flr                 = (data[7 ] & 0x01) == 0x01;
-  header.port_id             = Endian_SwapLE64(*((uint64_t*)(data + 8)));
+  header.port_id             = Endian_SwapLE64(*((const uint64_t*)(data + 8)));
   header.mfg_name[0]         = 'A' + ((data[16] >> 2) & 0x1F) - 1;
   header.mfg_name[1]         = 'A' + (((data[16] << 3) | (data[17] >> 5)) & 0x1F) - 1;
   header.mfg_name[2]         = 'A' + (data[17] & 0x1F) - 1;
   header.mfg_name[3]         = '\0';
-  header.product_code        = Endian_SwapLE16(*((uint16_t*)(data + 18)));
+  header.product_code        = Endian_SwapLE16(*((const uint16_t*)(data + 18)));
 
   switch (header.conn_type)
   {

From 5d211d14aa8b0c77ee0757d843d9de402938eb1d Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 06/18] [cleanup][DllLoader] silence casts away qualifiers
 warnings

---
 xbmc/cores/DllLoader/DllLoader.cpp          | 4 ++--
 xbmc/cores/DllLoader/exports/emu_dummy.cpp  | 2 +-
 xbmc/cores/DllLoader/exports/emu_msvcrt.cpp | 6 +++---
 xbmc/cores/DllLoader/exports/emu_msvcrt.h   | 2 +-
 4 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/xbmc/cores/DllLoader/DllLoader.cpp b/xbmc/cores/DllLoader/DllLoader.cpp
index 8ffdec0d80c0..26bff65041b3 100644
--- a/xbmc/cores/DllLoader/DllLoader.cpp
+++ b/xbmc/cores/DllLoader/DllLoader.cpp
@@ -565,7 +565,7 @@ void DllLoader::AddExport(char* sFunctionName, unsigned long ordinal, void* func
   entry->exp.ordinal = ordinal;
   entry->exp.track_function = track_function;
   entry->exp.name = ((char*)(entry)) + len;
-  strcpy((char*)entry->exp.name, sFunctionName);
+  strcpy(const_cast<char*>(entry->exp.name), sFunctionName);
 
   entry->next = m_pExportHead;
   m_pExportHead = entry;
@@ -582,7 +582,7 @@ void DllLoader::AddExport(char* sFunctionName, void* function, void* track_funct
   entry->exp.ordinal = -1;
   entry->exp.track_function = track_function;
   entry->exp.name = ((char*)(entry)) + len;
-  strcpy((char*)entry->exp.name, sFunctionName);
+  strcpy(const_cast<char*>(entry->exp.name), sFunctionName);
 
   entry->next = m_pExportHead;
   m_pExportHead = entry;
diff --git a/xbmc/cores/DllLoader/exports/emu_dummy.cpp b/xbmc/cores/DllLoader/exports/emu_dummy.cpp
index dfbe6d66f1da..a35d7e8ae77e 100644
--- a/xbmc/cores/DllLoader/exports/emu_dummy.cpp
+++ b/xbmc/cores/DllLoader/exports/emu_dummy.cpp
@@ -25,7 +25,7 @@ extern "C" void not_implement( const char* debuginfo)
 {
   if (debuginfo)
   {
-    CLog::Log(LOGDEBUG, "%s", (char*)debuginfo);
+    CLog::Log(LOGDEBUG, "%s", debuginfo);
   }
 }
 
diff --git a/xbmc/cores/DllLoader/exports/emu_msvcrt.cpp b/xbmc/cores/DllLoader/exports/emu_msvcrt.cpp
index 8bb314b06c0d..dcde21250628 100644
--- a/xbmc/cores/DllLoader/exports/emu_msvcrt.cpp
+++ b/xbmc/cores/DllLoader/exports/emu_msvcrt.cpp
@@ -1367,7 +1367,7 @@ extern "C"
         const size_t bufSize = size * count;
         do // fwrite() must write all data until whole buffer is written or error occurs
         {
-          const ssize_t w = pFile->Write(((int8_t*)buffer) + written, bufSize - written);
+          const ssize_t w = pFile->Write(((const int8_t*)buffer) + written, bufSize - written);
           if (w <= 0)
             break;
           written += w;
@@ -1811,10 +1811,10 @@ extern "C"
 #endif
   }
 
-  char* dll_getcwd(char *buffer, int maxlen)
+  const char* dll_getcwd(char *buffer, int maxlen)
   {
     not_implement("msvcrt.dll fake function dll_getcwd() called\n");
-    return (char*)"special://xbmc/";
+    return "special://xbmc/";
   }
 
   int dll_putenv(const char* envstring)
diff --git a/xbmc/cores/DllLoader/exports/emu_msvcrt.h b/xbmc/cores/DllLoader/exports/emu_msvcrt.h
index 19117fae10d6..5a8d90852a73 100644
--- a/xbmc/cores/DllLoader/exports/emu_msvcrt.h
+++ b/xbmc/cores/DllLoader/exports/emu_msvcrt.h
@@ -143,7 +143,7 @@ extern "C"
   void dllperror(const char* s);
   char* dllstrerror(int iErr);
   int dll_mkdir(const char* dir);
-  char* dll_getcwd(char *buffer, int maxlen);
+  const char* dll_getcwd(char *buffer, int maxlen);
   int dll_putenv(const char* envstring);
   int dll_ctype(int i);
   int dll_system(const char *command);

From ec7b1b70ffca8a54735348ad960599db118be3f6 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 07/18] [cleanup][VideoPlayer] silence casts away qualifiers
 warnings

---
 .../DVDCodecs/Overlay/DVDOverlayCodecSSA.cpp         |  2 +-
 .../DVDCodecs/Overlay/contrib/cc_decoder.c           |  2 +-
 .../DVDCodecs/Overlay/contrib/cc_decoder.h           |  2 +-
 .../DVDCodecs/Overlay/contrib/cc_decoder708.cpp      |  6 +++---
 .../VideoPlayer/DVDCodecs/Video/DVDVideoPPFFmpeg.cpp |  5 +++--
 .../DVDInputStreams/DVDInputStreamNavigator.cpp      |  9 ++++++---
 .../DVDSubtitles/DVDSubtitleParserSSA.cpp            |  2 +-
 .../VideoPlayer/DVDSubtitles/DVDSubtitlesLibass.cpp  |  5 +++--
 .../VideoPlayer/DVDSubtitles/DVDSubtitlesLibass.h    |  2 +-
 .../VideoRenderers/HwDecRender/VdpauGL.cpp           | 20 ++++++++++----------
 .../VideoPlayer/VideoRenderers/LinuxRendererGLES.cpp |  4 ++--
 .../VideoPlayer/VideoRenderers/OverlayRendererGL.cpp |  4 ++--
 12 files changed, 34 insertions(+), 29 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/DVDOverlayCodecSSA.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/DVDOverlayCodecSSA.cpp
index 2221ebe2ccc3..d6fcecefcaa7 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/DVDOverlayCodecSSA.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/DVDOverlayCodecSSA.cpp
@@ -108,7 +108,7 @@ int CDVDOverlayCodecSSA::Decode(DemuxPacket *pPacket)
 
       line2 = StringUtils::Format("%d,%s,%s", m_order++, layer.get(), line.substr(pos+1).c_str());
 
-      m_libass->DecodeDemuxPkt((char*)line2.c_str(), line2.length(), beg, end - beg);
+      m_libass->DecodeDemuxPkt(line2.c_str(), line2.length(), beg, end - beg);
 
       /* setup time spanning all dialogs */
       if(pts == DVD_NOPTS_VALUE || beg < pts)
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder.c b/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder.c
index 50bd2e271f16..8f2f6bfabf12 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder.c
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder.c
@@ -570,7 +570,7 @@ static void cc_decode_EIA608(cc_decoder_t *dec, uint16_t data)
 }
 
 
-void decode_cc(cc_decoder_t *dec, uint8_t *buffer, uint32_t buf_len)
+void decode_cc(cc_decoder_t *dec, const uint8_t *buffer, uint32_t buf_len)
 {
   uint32_t i;
   for (i = 0; i<buf_len; i += 3)
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder.h b/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder.h
index cf137beddd82..e9342599a4c4 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder.h
@@ -114,4 +114,4 @@ cc_decoder_t *cc_decoder_open();
 void cc_decoder_close(cc_decoder_t *this_obj);
 void cc_decoder_init(void);
 
-void decode_cc(cc_decoder_t *dec, uint8_t *buffer, uint32_t buf_len);
+void decode_cc(cc_decoder_t *dec, const uint8_t *buffer, uint32_t buf_len);
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder708.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder708.cpp
index bf9ed4294330..115f5e89e124 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder708.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Overlay/contrib/cc_decoder708.cpp
@@ -165,8 +165,8 @@ void cc708_reset(cc708_service_decoder *decoders)
 
 int compWindowsPriorities (const void *a, const void *b)
 {
-  e708Window *w1=*(e708Window **)a;
-  e708Window *w2=*(e708Window **)b;
+  const e708Window *w1=*(e708Window * const*)a;
+  const e708Window *w2=*(e708Window * const*)b;
   return w1->priority-w2->priority;
 }
 
@@ -1093,7 +1093,7 @@ void decode_708 (const unsigned char *data, int datalength, cc708_service_decode
     case 0:
       // only use 608 as fallback
       if (!decoders[0].parent->m_seen708)
-        decode_cc(decoders[0].parent->m_cc608decoder, (uint8_t*)data+i, 3);
+        decode_cc(decoders[0].parent->m_cc608decoder, (const uint8_t*)data+i, 3);
       break;
     case 2:
       if (cc_valid==0) // This ends the previous packet if complete
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoPPFFmpeg.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoPPFFmpeg.cpp
index 5847fca1b726..3b1b14ff4df1 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoPPFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoPPFFmpeg.cpp
@@ -71,7 +71,7 @@ bool CDVDVideoPPFFmpeg::CheckInit(int iWidth, int iHeight)
     m_iInitWidth = iWidth;
     m_iInitHeight = iHeight;
 
-    m_pMode = pp_get_mode_by_name_and_quality((char *)m_sType.c_str(), PP_QUALITY_MAX);
+    m_pMode = pp_get_mode_by_name_and_quality(m_sType.c_str(), PP_QUALITY_MAX);
   }
 
   if (m_pMode)
@@ -122,7 +122,8 @@ void CDVDVideoPPFFmpeg::Process(VideoPicture* pPicture)
 
   videoBuffer->SetDimensions(pPicture->iWidth, pPicture->iHeight, srcStrides);
   videoBuffer->GetPlanes(dstPlanes);
-  pp_postprocess((const uint8_t **)srcPlanes, srcStrides,
+  //! @bug libpostproc isn't const correct
+  pp_postprocess(const_cast<const uint8_t **>(srcPlanes), srcStrides,
                  dstPlanes, srcStrides,
                  pSource->iWidth, pSource->iHeight,
                  pSource->qp_table, pSource->qstride,
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamNavigator.cpp b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamNavigator.cpp
index ec7e70751f42..d812884c1be2 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamNavigator.cpp
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamNavigator.cpp
@@ -175,21 +175,24 @@ bool CDVDInputStreamNavigator::Open()
   {
     CLog::Log(LOGERROR, "Error on setting default menu language: %s\n", m_dll.dvdnav_err_to_string(m_dvdnav));
     CLog::Log(LOGERROR, "Defaulting to \"en\"");
-    m_dll.dvdnav_menu_language_select(m_dvdnav, (char*)"en");
+    //! @bug libdvdnav isn't const correct
+    m_dll.dvdnav_menu_language_select(m_dvdnav, const_cast<char*>("en"));
   }
 
   if (m_dll.dvdnav_audio_language_select(m_dvdnav, (char*)language_audio) != DVDNAV_STATUS_OK)
   {
     CLog::Log(LOGERROR, "Error on setting default audio language: %s\n", m_dll.dvdnav_err_to_string(m_dvdnav));
     CLog::Log(LOGERROR, "Defaulting to \"en\"");
-    m_dll.dvdnav_audio_language_select(m_dvdnav, (char*)"en");
+    //! @bug libdvdnav isn't const correct
+    m_dll.dvdnav_audio_language_select(m_dvdnav, const_cast<char*>("en"));
   }
 
   if (m_dll.dvdnav_spu_language_select(m_dvdnav, (char*)language_subtitle) != DVDNAV_STATUS_OK)
   {
     CLog::Log(LOGERROR, "Error on setting default subtitle language: %s\n", m_dll.dvdnav_err_to_string(m_dvdnav));
     CLog::Log(LOGERROR, "Defaulting to \"en\"");
-    m_dll.dvdnav_spu_language_select(m_dvdnav, (char*)"en");
+    //! @bug libdvdnav isn't const correct
+    m_dll.dvdnav_spu_language_select(m_dvdnav, const_cast<char*>("en"));
   }
 
   // set read ahead cache usage
diff --git a/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitleParserSSA.cpp b/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitleParserSSA.cpp
index 2c475c63d362..0994620fd206 100644
--- a/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitleParserSSA.cpp
+++ b/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitleParserSSA.cpp
@@ -41,7 +41,7 @@ bool CDVDSubtitleParserSSA::Open(CDVDStreamInfo &hints)
     return false;
 
   std::string buffer = m_pStream->m_stringstream.str();
-  if(!m_libass->CreateTrack((char*) buffer.c_str(), buffer.length()))
+  if(!m_libass->CreateTrack(const_cast<char*>(buffer.c_str()), buffer.length()))
     return false;
 
   //Creating the overlays by going through the list of ass_events
diff --git a/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitlesLibass.cpp b/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitlesLibass.cpp
index c95e7324c8ed..d1ff0ee6d0c2 100644
--- a/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitlesLibass.cpp
+++ b/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitlesLibass.cpp
@@ -106,7 +106,7 @@ bool CDVDSubtitlesLibass::DecodeHeader(char* data, int size)
   return true;
 }
 
-bool CDVDSubtitlesLibass::DecodeDemuxPkt(char* data, int size, double start, double duration)
+bool CDVDSubtitlesLibass::DecodeDemuxPkt(const char* data, int size, double start, double duration)
 {
   CSingleLock lock(m_section);
   if(!m_track)
@@ -115,7 +115,8 @@ bool CDVDSubtitlesLibass::DecodeDemuxPkt(char* data, int size, double start, dou
     return false;
   }
 
-  ass_process_chunk(m_track, data, size, DVD_TIME_TO_MSEC(start), DVD_TIME_TO_MSEC(duration));
+  //! @bug libass isn't const correct
+  ass_process_chunk(m_track, const_cast<char*>(data), size, DVD_TIME_TO_MSEC(start), DVD_TIME_TO_MSEC(duration));
   return true;
 }
 
diff --git a/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitlesLibass.h b/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitlesLibass.h
index f0f967cbfee2..57e27b9b802f 100644
--- a/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitlesLibass.h
+++ b/xbmc/cores/VideoPlayer/DVDSubtitles/DVDSubtitlesLibass.h
@@ -39,7 +39,7 @@ class CDVDSubtitlesLibass : public IDVDResourceCounted<CDVDSubtitlesLibass>
   int GetNrOfEvents();
 
   bool DecodeHeader(char* data, int size);
-  bool DecodeDemuxPkt(char* data, int size, double start, double duration);
+  bool DecodeDemuxPkt(const char* data, int size, double start, double duration);
   bool CreateTrack(char* buf, size_t size);
 
 private:
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.cpp
index db3cb4a1f6c1..fd0e5bba61e1 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.cpp
@@ -35,16 +35,16 @@ bool CInteropState::Init(void *device, void *procFunc, int64_t ident)
   m_procFunc = procFunc;
   m_ident = ident;
 
-  m_interop.glVDPAUInitNV = (PFNGLVDPAUINITNVPROC)glXGetProcAddress((GLubyte *) "glVDPAUInitNV");
-  m_interop.glVDPAUFiniNV = (PFNGLVDPAUFININVPROC)glXGetProcAddress((GLubyte *) "glVDPAUFiniNV");
-  m_interop.glVDPAURegisterOutputSurfaceNV = (PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)glXGetProcAddress((GLubyte *) "glVDPAURegisterOutputSurfaceNV");
-  m_interop.glVDPAURegisterVideoSurfaceNV = (PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)glXGetProcAddress((GLubyte *) "glVDPAURegisterVideoSurfaceNV");
-  m_interop.glVDPAUIsSurfaceNV = (PFNGLVDPAUISSURFACENVPROC)glXGetProcAddress((GLubyte *) "glVDPAUIsSurfaceNV");
-  m_interop.glVDPAUUnregisterSurfaceNV = (PFNGLVDPAUUNREGISTERSURFACENVPROC)glXGetProcAddress((GLubyte *) "glVDPAUUnregisterSurfaceNV");
-  m_interop.glVDPAUSurfaceAccessNV = (PFNGLVDPAUSURFACEACCESSNVPROC)glXGetProcAddress((GLubyte *) "glVDPAUSurfaceAccessNV");
-  m_interop.glVDPAUMapSurfacesNV = (PFNGLVDPAUMAPSURFACESNVPROC)glXGetProcAddress((GLubyte *) "glVDPAUMapSurfacesNV");
-  m_interop.glVDPAUUnmapSurfacesNV = (PFNGLVDPAUUNMAPSURFACESNVPROC)glXGetProcAddress((GLubyte *) "glVDPAUUnmapSurfacesNV");
-  m_interop.glVDPAUGetSurfaceivNV = (PFNGLVDPAUGETSURFACEIVNVPROC)glXGetProcAddress((GLubyte *) "glVDPAUGetSurfaceivNV");
+  m_interop.glVDPAUInitNV = (PFNGLVDPAUINITNVPROC)glXGetProcAddress((const GLubyte *) "glVDPAUInitNV");
+  m_interop.glVDPAUFiniNV = (PFNGLVDPAUFININVPROC)glXGetProcAddress((const GLubyte *) "glVDPAUFiniNV");
+  m_interop.glVDPAURegisterOutputSurfaceNV = (PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)glXGetProcAddress((const GLubyte *) "glVDPAURegisterOutputSurfaceNV");
+  m_interop.glVDPAURegisterVideoSurfaceNV = (PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)glXGetProcAddress((const GLubyte *) "glVDPAURegisterVideoSurfaceNV");
+  m_interop.glVDPAUIsSurfaceNV = (PFNGLVDPAUISSURFACENVPROC)glXGetProcAddress((const GLubyte *) "glVDPAUIsSurfaceNV");
+  m_interop.glVDPAUUnregisterSurfaceNV = (PFNGLVDPAUUNREGISTERSURFACENVPROC)glXGetProcAddress((const GLubyte *) "glVDPAUUnregisterSurfaceNV");
+  m_interop.glVDPAUSurfaceAccessNV = (PFNGLVDPAUSURFACEACCESSNVPROC)glXGetProcAddress((const GLubyte *) "glVDPAUSurfaceAccessNV");
+  m_interop.glVDPAUMapSurfacesNV = (PFNGLVDPAUMAPSURFACESNVPROC)glXGetProcAddress((const GLubyte *) "glVDPAUMapSurfacesNV");
+  m_interop.glVDPAUUnmapSurfacesNV = (PFNGLVDPAUUNMAPSURFACESNVPROC)glXGetProcAddress((const GLubyte *) "glVDPAUUnmapSurfacesNV");
+  m_interop.glVDPAUGetSurfaceivNV = (PFNGLVDPAUGETSURFACEIVNVPROC)glXGetProcAddress((const GLubyte *) "glVDPAUGetSurfaceivNV");
 
   while (glGetError() != GL_NO_ERROR);
   m_interop.glVDPAUInitNV(m_device, m_procFunc);
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.cpp
index e721db639fff..e8ab99e1e968 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/LinuxRendererGLES.cpp
@@ -336,13 +336,13 @@ void CLinuxRendererGLES::LoadPlane(YUVPLANE& plane, int type,
     glTexSubImage2D( m_textureTarget, 0
                    , 0, height, width, 1
                    , type, datatype
-                   , (unsigned char*)pixelData + stride * (height-1));
+                   , (const unsigned char*)pixelData + stride * (height-1));
 
   if (width  < plane.texwidth)
     glTexSubImage2D( m_textureTarget, 0
                    , width, 0, 1, height
                    , type, datatype
-                   , (unsigned char*)pixelData + bps * (width-1));
+                   , (const unsigned char*)pixelData + bps * (width-1));
 
   glBindTexture(m_textureTarget, 0);
 }
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGL.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGL.cpp
index 3cee67326a42..a0f082f544e8 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGL.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGL.cpp
@@ -139,13 +139,13 @@ static void LoadTexture(GLenum target
     glTexSubImage2D( target, 0
                    , 0, height, width, 1
                    , externalFormat, GL_UNSIGNED_BYTE
-                   , (unsigned char*)pixelData + stride * (height-1));
+                   , (const unsigned char*)pixelData + stride * (height-1));
 
   if(width  < width2)
     glTexSubImage2D( target, 0
                    , width, 0, 1, height
                    , externalFormat, GL_UNSIGNED_BYTE
-                   , (unsigned char*)pixelData + bytesPerPixel * (width-1));
+                   , (const unsigned char*)pixelData + bytesPerPixel * (width-1));
 
 #ifndef HAS_GLES
   glPixelStorei(GL_UNPACK_ROW_LENGTH, 0);

From 44e167714211d3ef26d80bd336709238ac130d60 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 08/18] [cleanup][dbwrappers] silence casts away qualifiers
 warnings

---
 xbmc/dbwrappers/mysqldataset.cpp | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/xbmc/dbwrappers/mysqldataset.cpp b/xbmc/dbwrappers/mysqldataset.cpp
index 7aee501219ba..9f01993fc44f 100644
--- a/xbmc/dbwrappers/mysqldataset.cpp
+++ b/xbmc/dbwrappers/mysqldataset.cpp
@@ -804,7 +804,7 @@ void MysqlDatabase::mysqlVXPrintf(
     bool isLike = false;
     if( c!='%' ){
       int amt;
-      bufpt = (char *)fmt;
+      bufpt = const_cast<char *>(fmt);
       amt = 1;
       while( (c=(*++fmt))!='%' && c!=0 ) amt++;
       isLike = mysqlStrAccumAppend(pAccum, bufpt, amt);
@@ -1018,11 +1018,11 @@ void MysqlDatabase::mysqlVXPrintf(
           while( realvalue<1.0 ){ realvalue *= 10.0; exp--; }
           if( exp>350 ){
             if( prefix=='-' ){
-              bufpt = (char *)"-Inf";
+              bufpt = const_cast<char *>("-Inf");
             }else if( prefix=='+' ){
-              bufpt = (char *)"+Inf";
+              bufpt = const_cast<char *>("+Inf");
             }else{
-              bufpt = (char *)"Inf";
+              bufpt = const_cast<char *>("Inf");
             }
             length = strlen(bufpt);
             break;
@@ -1154,7 +1154,7 @@ void MysqlDatabase::mysqlVXPrintf(
       case etDYNSTRING:
         bufpt = va_arg(ap,char*);
         if( bufpt==0 ){
-          bufpt = (char *)"";
+          bufpt = const_cast<char *>("");
         }else if( xtype==etDYNSTRING ){
           zExtra = bufpt;
         }

From 4d2db3bcb1ad700741d7e69ba5030a7340527a41 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 09/18] [cleanup][filesystem] silence casts away qualifiers
 warnings

---
 xbmc/filesystem/CurlFile.cpp         | 18 +++++++-------
 xbmc/filesystem/ISO9660Directory.cpp |  2 +-
 xbmc/filesystem/ISOFile.cpp          |  6 ++---
 xbmc/filesystem/NFSFile.cpp          |  3 ++-
 xbmc/filesystem/PipesManager.cpp     |  4 +--
 xbmc/filesystem/ZipFile.cpp          |  6 ++---
 xbmc/filesystem/ZipManager.cpp       | 48 ++++++++++++++++++------------------
 xbmc/filesystem/iso9660.cpp          |  6 ++---
 xbmc/filesystem/iso9660.h            |  4 +--
 9 files changed, 49 insertions(+), 48 deletions(-)

diff --git a/xbmc/filesystem/CurlFile.cpp b/xbmc/filesystem/CurlFile.cpp
index 34f3fdf1d286..6fbeae4be91b 100644
--- a/xbmc/filesystem/CurlFile.cpp
+++ b/xbmc/filesystem/CurlFile.cpp
@@ -81,16 +81,16 @@ extern "C" int debug_callback(CURL_HANDLE *handle, curl_infotype info, char *out
   StringUtils::Tokenize(strLine, vecLines, "\r\n");
   std::vector<std::string>::const_iterator it = vecLines.begin();
 
-  char *infotype;
+  const char *infotype;
   switch(info)
   {
-    case CURLINFO_TEXT         : infotype = (char *) "TEXT: "; break;
-    case CURLINFO_HEADER_IN    : infotype = (char *) "HEADER_IN: "; break;
-    case CURLINFO_HEADER_OUT   : infotype = (char *) "HEADER_OUT: "; break;
-    case CURLINFO_SSL_DATA_IN  : infotype = (char *) "SSL_DATA_IN: "; break;
-    case CURLINFO_SSL_DATA_OUT : infotype = (char *) "SSL_DATA_OUT: "; break;
-    case CURLINFO_END          : infotype = (char *) "END: "; break;
-    default                    : infotype = (char *) ""; break;
+    case CURLINFO_TEXT         : infotype = "TEXT: "; break;
+    case CURLINFO_HEADER_IN    : infotype = "HEADER_IN: "; break;
+    case CURLINFO_HEADER_OUT   : infotype = "HEADER_OUT: "; break;
+    case CURLINFO_SSL_DATA_IN  : infotype = "SSL_DATA_IN: "; break;
+    case CURLINFO_SSL_DATA_OUT : infotype = "SSL_DATA_OUT: "; break;
+    case CURLINFO_END          : infotype = "END: "; break;
+    default                    : infotype = ""; break;
   }
 
   while (it != vecLines.end())
@@ -1761,7 +1761,7 @@ int8_t CCurlFile::CReadState::FillBuffer(unsigned int want)
 
 void CCurlFile::CReadState::SetReadBuffer(const void* lpBuf, int64_t uiBufSize)
 {
-  m_readBuffer = (char*)lpBuf;
+  m_readBuffer = const_cast<char*>((const char*)lpBuf);
   m_fileSize = uiBufSize;
   m_filePos = 0;
 }
diff --git a/xbmc/filesystem/ISO9660Directory.cpp b/xbmc/filesystem/ISO9660Directory.cpp
index 0e3d590439bf..b741e89e73cd 100644
--- a/xbmc/filesystem/ISO9660Directory.cpp
+++ b/xbmc/filesystem/ISO9660Directory.cpp
@@ -67,7 +67,7 @@ bool CISO9660Directory::GetDirectory(const CURL& url, CFileItemList &items)
     if (strSearchMask[i] == '/') strSearchMask[i] = '\\';
   }
 
-  hFind = m_isoReader.FindFirstFile9660((char*)strSearchMask.c_str(), &wfd);
+  hFind = m_isoReader.FindFirstFile9660(strSearchMask.c_str(), &wfd);
   if (hFind == NULL)
     return false;
 
diff --git a/xbmc/filesystem/ISOFile.cpp b/xbmc/filesystem/ISOFile.cpp
index 796c19adae6a..e280df290f42 100644
--- a/xbmc/filesystem/ISOFile.cpp
+++ b/xbmc/filesystem/ISOFile.cpp
@@ -55,7 +55,7 @@ bool CISOFile::Open(const CURL& url)
   {
     if (strFName[i] == '/') strFName[i] = '\\';
   }
-  m_hFile = m_isoReader.OpenFile((char*)strFName.c_str());
+  m_hFile = m_isoReader.OpenFile(strFName.c_str());
   if (m_hFile == INVALID_HANDLE_VALUE)
   {
     m_bOpened = false;
@@ -145,7 +145,7 @@ bool CISOFile::Exists(const CURL& url)
   {
     if (strFName[i] == '/') strFName[i] = '\\';
   }
-  m_hFile = m_isoReader.OpenFile((char*)strFName.c_str());
+  m_hFile = m_isoReader.OpenFile(strFName.c_str());
   if (m_hFile == INVALID_HANDLE_VALUE)
     return false;
 
@@ -161,7 +161,7 @@ int CISOFile::Stat(const CURL& url, struct __stat64* buffer)
   {
     if (strFName[i] == '/') strFName[i] = '\\';
   }
-  m_hFile = m_isoReader.OpenFile((char*)strFName.c_str());
+  m_hFile = m_isoReader.OpenFile(strFName.c_str());
   if (m_hFile != INVALID_HANDLE_VALUE)
   {
     memset(buffer, 0, sizeof(struct __stat64));
diff --git a/xbmc/filesystem/NFSFile.cpp b/xbmc/filesystem/NFSFile.cpp
index a6c232225ebb..8d4ab3db488e 100644
--- a/xbmc/filesystem/NFSFile.cpp
+++ b/xbmc/filesystem/NFSFile.cpp
@@ -751,10 +751,11 @@ ssize_t CNFSFile::Write(const void* lpBuf, size_t uiBufSize)
       chunkSize = leftBytes;//write last chunk with correct size
     }
     //write chunk
+    //! @bug libnfs < 2.0.0 isn't const correct
     writtenBytes = gNfsConnection.GetImpl()->nfs_write(m_pNfsContext,
                                   m_pFileHandle,
                                   chunkSize,
-                                  (char *)lpBuf + numberOfBytesWritten);
+                                  const_cast<char*>((const char *)lpBuf) + numberOfBytesWritten);
     //decrease left bytes
     leftBytes-= writtenBytes;
     //increase overall written bytes
diff --git a/xbmc/filesystem/PipesManager.cpp b/xbmc/filesystem/PipesManager.cpp
index ede6f822cf4c..132e3fad3dac 100644
--- a/xbmc/filesystem/PipesManager.cpp
+++ b/xbmc/filesystem/PipesManager.cpp
@@ -172,7 +172,7 @@ bool Pipe::Write(const char *buf, int nSize, int nWaitMillis)
   int writeSize = m_buffer.getMaxWriteSize();
   if (writeSize > nSize)
   {
-    m_buffer.WriteData((char*)buf, nSize);
+    m_buffer.WriteData(buf, nSize);
     bOk = true;
   }
   else
@@ -187,7 +187,7 @@ bool Pipe::Write(const char *buf, int nSize, int nWaitMillis)
       lock.Enter();
       if (bClear && (int)m_buffer.getMaxWriteSize() >= nSize)
       {
-        m_buffer.WriteData((char*)buf, nSize);
+        m_buffer.WriteData(buf, nSize);
         bOk = true;
         break;
       }
diff --git a/xbmc/filesystem/ZipFile.cpp b/xbmc/filesystem/ZipFile.cpp
index 20bc34e542bc..d2b15b36b3bb 100644
--- a/xbmc/filesystem/ZipFile.cpp
+++ b/xbmc/filesystem/ZipFile.cpp
@@ -429,14 +429,14 @@ int CZipFile::UnpackFromMemory(std::string& strDest, const std::string& strInput
     if (isGZ)
     {
       m_ZStream.avail_in = strInput.size();
-      m_ZStream.next_in = (Bytef*)strInput.data();
+      m_ZStream.next_in = const_cast<Bytef*>((const Bytef*)strInput.data());
       temp = new char[8192];
       toRead = 8191;
     }
     else
     {
       m_ZStream.avail_in = mZipItem.csize;
-      m_ZStream.next_in = (Bytef*)strInput.data()+iPos+LHDR_SIZE+mZipItem.flength+mZipItem.elength;
+      m_ZStream.next_in = const_cast<Bytef*>((const Bytef*)strInput.data())+iPos+LHDR_SIZE+mZipItem.flength+mZipItem.elength;
       // init m_zipitem
       strDest.reserve(mZipItem.usize);
       temp = new char[mZipItem.usize+1];
@@ -478,7 +478,7 @@ bool CZipFile::DecompressGzip(const std::string& in, std::string& out)
   unsigned char buffer[bufferSize];
 
   strm.avail_in = in.size();
-  strm.next_in = (unsigned char*)in.c_str();
+  strm.next_in = const_cast<unsigned char*>((const unsigned char*)in.c_str());
 
   do
   {
diff --git a/xbmc/filesystem/ZipManager.cpp b/xbmc/filesystem/ZipManager.cpp
index 845206d7cb44..27319a659928 100644
--- a/xbmc/filesystem/ZipManager.cpp
+++ b/xbmc/filesystem/ZipManager.cpp
@@ -283,37 +283,37 @@ bool CZipManager::ExtractArchive(const CURL& archive, const std::string& strPath
 // Read local file header
 void CZipManager::readHeader(const char* buffer, SZipEntry& info)
 {
-  info.header = Endian_SwapLE32(*(unsigned int*)buffer);
-  info.version = Endian_SwapLE16(*(unsigned short*)(buffer+4));
-  info.flags = Endian_SwapLE16(*(unsigned short*)(buffer+6));
-  info.method = Endian_SwapLE16(*(unsigned short*)(buffer+8));
-  info.mod_time = Endian_SwapLE16(*(unsigned short*)(buffer+10));
-  info.mod_date = Endian_SwapLE16(*(unsigned short*)(buffer+12));
-  info.crc32 = Endian_SwapLE32(*(unsigned int*)(buffer+14));
-  info.csize = Endian_SwapLE32(*(unsigned int*)(buffer+18));
-  info.usize = Endian_SwapLE32(*(unsigned int*)(buffer+22));
-  info.flength = Endian_SwapLE16(*(unsigned short*)(buffer+26));
-  info.elength = Endian_SwapLE16(*(unsigned short*)(buffer+28));
+  info.header = Endian_SwapLE32(*(const unsigned int*)buffer);
+  info.version = Endian_SwapLE16(*(const unsigned short*)(buffer+4));
+  info.flags = Endian_SwapLE16(*(const unsigned short*)(buffer+6));
+  info.method = Endian_SwapLE16(*(const unsigned short*)(buffer+8));
+  info.mod_time = Endian_SwapLE16(*(const unsigned short*)(buffer+10));
+  info.mod_date = Endian_SwapLE16(*(const unsigned short*)(buffer+12));
+  info.crc32 = Endian_SwapLE32(*(const unsigned int*)(buffer+14));
+  info.csize = Endian_SwapLE32(*(const unsigned int*)(buffer+18));
+  info.usize = Endian_SwapLE32(*(const unsigned int*)(buffer+22));
+  info.flength = Endian_SwapLE16(*(const unsigned short*)(buffer+26));
+  info.elength = Endian_SwapLE16(*(const unsigned short*)(buffer+28));
 }
 
 // Read central file header (from central directory)
 void CZipManager::readCHeader(const char* buffer, SZipEntry& info)
 {
-  info.header = Endian_SwapLE32(*(unsigned int*)buffer);
+  info.header = Endian_SwapLE32(*(const unsigned int*)buffer);
   // Skip version made by
-  info.version = Endian_SwapLE16(*(unsigned short*)(buffer+6));
-  info.flags = Endian_SwapLE16(*(unsigned short*)(buffer+8));
-  info.method = Endian_SwapLE16(*(unsigned short*)(buffer+10));
-  info.mod_time = Endian_SwapLE16(*(unsigned short*)(buffer+12));
-  info.mod_date = Endian_SwapLE16(*(unsigned short*)(buffer+14));
-  info.crc32 = Endian_SwapLE32(*(unsigned int*)(buffer+16));
-  info.csize = Endian_SwapLE32(*(unsigned int*)(buffer+20));
-  info.usize = Endian_SwapLE32(*(unsigned int*)(buffer+24));
-  info.flength = Endian_SwapLE16(*(unsigned short*)(buffer+28));
-  info.eclength = Endian_SwapLE16(*(unsigned short*)(buffer+30));
-  info.clength = Endian_SwapLE16(*(unsigned short*)(buffer+32));
+  info.version = Endian_SwapLE16(*(const unsigned short*)(buffer+6));
+  info.flags = Endian_SwapLE16(*(const unsigned short*)(buffer+8));
+  info.method = Endian_SwapLE16(*(const unsigned short*)(buffer+10));
+  info.mod_time = Endian_SwapLE16(*(const unsigned short*)(buffer+12));
+  info.mod_date = Endian_SwapLE16(*(const unsigned short*)(buffer+14));
+  info.crc32 = Endian_SwapLE32(*(const unsigned int*)(buffer+16));
+  info.csize = Endian_SwapLE32(*(const unsigned int*)(buffer+20));
+  info.usize = Endian_SwapLE32(*(const unsigned int*)(buffer+24));
+  info.flength = Endian_SwapLE16(*(const unsigned short*)(buffer+28));
+  info.eclength = Endian_SwapLE16(*(const unsigned short*)(buffer+30));
+  info.clength = Endian_SwapLE16(*(const unsigned short*)(buffer+32));
   // Skip disk number start, internal/external file attributes
-  info.lhdrOffset = Endian_SwapLE32(*(unsigned int*)(buffer+42));
+  info.lhdrOffset = Endian_SwapLE32(*(const unsigned int*)(buffer+42));
 
 }
 
diff --git a/xbmc/filesystem/iso9660.cpp b/xbmc/filesystem/iso9660.cpp
index 784e5f66bec4..fb73685b7570 100644
--- a/xbmc/filesystem/iso9660.cpp
+++ b/xbmc/filesystem/iso9660.cpp
@@ -588,7 +588,7 @@ void iso9660::Reset()
 }
 
 //******************************************************************************************************************
-struct iso_dirtree *iso9660::FindFolder( char *Folder )
+struct iso_dirtree *iso9660::FindFolder(const char *Folder )
 {
   char *work;
 
@@ -630,7 +630,7 @@ struct iso_dirtree *iso9660::FindFolder( char *Folder )
 }
 
 //******************************************************************************************************************
-HANDLE iso9660::FindFirstFile9660(char *szLocalFolder, WIN32_FIND_DATA *wfdFile)
+HANDLE iso9660::FindFirstFile9660(const char *szLocalFolder, WIN32_FIND_DATA *wfdFile)
 {
   if (m_info.ISO_HANDLE == nullptr) return static_cast<HANDLE>(nullptr);
   memset( wfdFile, 0, sizeof(WIN32_FIND_DATA));
@@ -735,7 +735,7 @@ HANDLE iso9660::OpenFile(const char *filename)
   pContext->m_bUseMode2 = false;
   m_info.curr_filepos = 0;
 
-  pointer = (char*)filename;
+  pointer = const_cast<char*>(filename);
   while ( strpbrk( pointer, "\\/" ) )
     pointer = strpbrk( pointer, "\\/" ) + 1;
 
diff --git a/xbmc/filesystem/iso9660.h b/xbmc/filesystem/iso9660.h
index 8d96f02a4b49..b3a184fc9d59 100644
--- a/xbmc/filesystem/iso9660.h
+++ b/xbmc/filesystem/iso9660.h
@@ -177,7 +177,7 @@ class iso9660
   iso9660( );
   virtual ~iso9660( );
 
-  HANDLE FindFirstFile9660( char *szLocalFolder, WIN32_FIND_DATA *wfdFile );
+  HANDLE FindFirstFile9660(const char *szLocalFolder, WIN32_FIND_DATA *wfdFile );
   int FindNextFile( HANDLE szLocalFolder, WIN32_FIND_DATA *wfdFile );
   bool FindClose( HANDLE szLocalFolder );
   DWORD SetFilePointer(HANDLE hFile, long lDistanceToMove, long* lpDistanceToMoveHigh, DWORD dwMoveMethod );
@@ -194,7 +194,7 @@ class iso9660
 protected:
   void IsoDateTimeToFileTime(iso9660_Datetime* isoDateTime, FILETIME* filetime);
   struct iso_dirtree* ReadRecursiveDirFromSector( DWORD sector, const char * );
-  struct iso_dirtree* FindFolder( char *Folder );
+  struct iso_dirtree* FindFolder(const char *Folder );
   std::string GetThinText(unsigned char* strTxt, int iLen );
   bool ReadSectorFromCache(iso9660::isofile* pContext, DWORD sector, uint8_t** ppBuffer);
   void ReleaseSectorFromCache(iso9660::isofile* pContext, DWORD sector);

From ff10a43de3555146abc8142f3013d9bf35c99281 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 10/18] [cleanup][guilib] silence casts away qualifiers
 warnings

---
 xbmc/guilib/GUIEditControl.cpp          | 2 +-
 xbmc/guilib/GUIVisualisationControl.cpp | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/xbmc/guilib/GUIEditControl.cpp b/xbmc/guilib/GUIEditControl.cpp
index d7c64041e165..af99def23f87 100644
--- a/xbmc/guilib/GUIEditControl.cpp
+++ b/xbmc/guilib/GUIEditControl.cpp
@@ -714,7 +714,7 @@ bool CGUIEditControl::ValidateInput(const std::wstring &data) const
   if (m_inputValidator == NULL)
     return true;
 
-  return m_inputValidator(GetLabel2(), (void*)(m_inputValidatorData != NULL ? m_inputValidatorData : this));
+  return m_inputValidator(GetLabel2(), m_inputValidatorData != NULL ? m_inputValidatorData : const_cast<void*>((const void*)this));
 }
 
 void CGUIEditControl::ValidateInput()
diff --git a/xbmc/guilib/GUIVisualisationControl.cpp b/xbmc/guilib/GUIVisualisationControl.cpp
index 696f453ce89a..38f7696755dc 100644
--- a/xbmc/guilib/GUIVisualisationControl.cpp
+++ b/xbmc/guilib/GUIVisualisationControl.cpp
@@ -306,7 +306,7 @@ void CGUIVisualisationControl::UpdateTrack()
   else
     CLog::Log(LOGDEBUG, "Updating visualization albumart: %s", m_albumThumb.c_str());
 
-  m_instance->OnAction(VIS_ACTION_UPDATE_ALBUMART, (void*)(m_albumThumb.c_str()));
+  m_instance->OnAction(VIS_ACTION_UPDATE_ALBUMART, (const void*)(m_albumThumb.c_str()));
 
   const MUSIC_INFO::CMusicInfoTag* tag = CServiceBroker::GetGUI()->GetInfoManager().GetCurrentSongTag();
   if (!tag)

From 44d7411b35b31943bd664bf0c040907e84e79455 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 11/18] [cleanup][interfaces] silence casts away qualifiers
 warnings

---
 xbmc/interfaces/legacy/AddonClass.h                |  6 +--
 xbmc/interfaces/legacy/AddonUtils.cpp              |  2 +-
 xbmc/interfaces/legacy/AddonUtils.h                |  2 +-
 xbmc/interfaces/legacy/Control.cpp                 | 48 +++++++++++-----------
 xbmc/interfaces/python/ContextItemAddonInvoker.cpp |  3 +-
 xbmc/interfaces/python/LanguageHook.cpp            |  6 +--
 xbmc/interfaces/python/PythonInvoker.cpp           | 18 ++++----
 xbmc/interfaces/python/PythonSwig.cpp.template     | 39 +++++++++---------
 xbmc/interfaces/python/XBPython.cpp                |  5 ++-
 xbmc/interfaces/python/swig.cpp                    |  2 +-
 10 files changed, 68 insertions(+), 63 deletions(-)

diff --git a/xbmc/interfaces/legacy/AddonClass.h b/xbmc/interfaces/legacy/AddonClass.h
index 97bd8d1c5aa2..fa8b9a993bc2 100644
--- a/xbmc/interfaces/legacy/AddonClass.h
+++ b/xbmc/interfaces/legacy/AddonClass.h
@@ -166,10 +166,10 @@ namespace XBMCAddon
       T * ac;
     public:
       inline Ref() : ac(NULL) {}
-      inline Ref(const T* _ac) : ac((T*)_ac) { if (ac) ac->Acquire(); refcheck; }
+      inline Ref(const T* _ac) : ac(const_cast<T*>(_ac)) { if (ac) ac->Acquire(); refcheck; }
 
       // copy semantics
-      inline Ref(Ref<T> const & oref) : ac((T*)(oref.get())) { if (ac) ac->Acquire(); refcheck; }
+      inline Ref(Ref<T> const & oref) : ac(const_cast<T*>(oref.get())) { if (ac) ac->Acquire(); refcheck; }
       template<class O> inline Ref(Ref<O> const & oref) : ac(static_cast<T*>(oref.get())) { if (ac) ac->Acquire(); refcheck; }
 
       /**
@@ -190,7 +190,7 @@ namespace XBMCAddon
        * opting for the route the boost took here figuring it has more history behind it.
        */
       inline Ref<T>& operator=(Ref<T> const & oref)
-      { T* tmp = ac; ac=((T*)oref.get()); if (ac) ac->Acquire(); if (tmp) tmp->Release(); refcheck; return *this; }
+      { T* tmp = ac; ac = const_cast<T*>(oref.get()); if (ac) ac->Acquire(); if (tmp) tmp->Release(); refcheck; return *this; }
 
       inline T* operator->() const { refcheck; return ac; }
 
diff --git a/xbmc/interfaces/legacy/AddonUtils.cpp b/xbmc/interfaces/legacy/AddonUtils.cpp
index b7522d324cdc..c62fe819b614 100644
--- a/xbmc/interfaces/legacy/AddonUtils.cpp
+++ b/xbmc/interfaces/legacy/AddonUtils.cpp
@@ -52,7 +52,7 @@ namespace XBMCAddonUtils
 
   static char defaultImage[1024];
 
-  const char *getDefaultImage(char* cControlType, char* cTextureType)
+  const char *getDefaultImage(const char* cControlType, const char* cTextureType)
   {
     // create an xml block so that we can resolve our defaults
     // <control type="type">
diff --git a/xbmc/interfaces/legacy/AddonUtils.h b/xbmc/interfaces/legacy/AddonUtils.h
index 922c58a658f1..5856db39b6d0 100644
--- a/xbmc/interfaces/legacy/AddonUtils.h
+++ b/xbmc/interfaces/legacy/AddonUtils.h
@@ -74,7 +74,7 @@ namespace XBMCAddonUtils
    * Looks in references.xml for image name
    * If none exist return default image name
    */
-  const char *getDefaultImage(char* cControlType, char* cTextureType);
+  const char *getDefaultImage(const char* cControlType, const char* cTextureType);
 
 #ifdef ENABLE_XBMC_TRACE_API
   class TraceGuard
diff --git a/xbmc/interfaces/legacy/Control.cpp b/xbmc/interfaces/legacy/Control.cpp
index a5e6d4f42d60..7dc83f41c6fd 100644
--- a/xbmc/interfaces/legacy/Control.cpp
+++ b/xbmc/interfaces/legacy/Control.cpp
@@ -216,9 +216,9 @@ namespace XBMCAddon
 
       // if texture is supplied use it, else get default ones
       strTextureFocus = focusTexture ? focusTexture :
-        XBMCAddonUtils::getDefaultImage((char*)"button", (char*)"texturefocus");
+        XBMCAddonUtils::getDefaultImage("button", "texturefocus");
       strTextureNoFocus = noFocusTexture ? noFocusTexture :
-        XBMCAddonUtils::getDefaultImage((char*)"button", (char*)"texturenofocus");
+        XBMCAddonUtils::getDefaultImage("button", "texturenofocus");
 
       if (font) strFont = font;
       if (_textColor) sscanf( _textColor, "%x", &textColor );
@@ -383,15 +383,15 @@ namespace XBMCAddon
 
       // if texture is supplied use it, else get default ones
       strTextureBg = texturebg ? texturebg :
-        XBMCAddonUtils::getDefaultImage((char*)"progress", (char*)"texturebg");
+        XBMCAddonUtils::getDefaultImage("progress", "texturebg");
       strTextureLeft = textureleft ? textureleft :
-        XBMCAddonUtils::getDefaultImage((char*)"progress", (char*)"lefttexture");
+        XBMCAddonUtils::getDefaultImage("progress", "lefttexture");
       strTextureMid = texturemid ? texturemid :
-        XBMCAddonUtils::getDefaultImage((char*)"progress", (char*)"midtexture");
+        XBMCAddonUtils::getDefaultImage("progress", "midtexture");
       strTextureRight = textureright ? textureright :
-        XBMCAddonUtils::getDefaultImage((char*)"progress", (char*)"righttexture");
+        XBMCAddonUtils::getDefaultImage("progress", "righttexture");
       strTextureOverlay = textureoverlay ? textureoverlay :
-        XBMCAddonUtils::getDefaultImage((char*)"progress", (char*)"overlaytexture");
+        XBMCAddonUtils::getDefaultImage("progress", "overlaytexture");
     }
 
     void ControlProgress::setPercent(float pct)
@@ -437,11 +437,11 @@ namespace XBMCAddon
 
       // if texture is supplied use it, else get default ones
       strTextureBack = textureback ? textureback :
-        XBMCAddonUtils::getDefaultImage((char*)"slider", (char*)"texturesliderbar");
+        XBMCAddonUtils::getDefaultImage("slider", "texturesliderbar");
       strTexture = texture ? texture :
-        XBMCAddonUtils::getDefaultImage((char*)"slider", (char*)"textureslidernib");
+        XBMCAddonUtils::getDefaultImage("slider", "textureslidernib");
       strTextureFoc = texturefocus ? texturefocus :
-        XBMCAddonUtils::getDefaultImage((char*)"slider", (char*)"textureslidernibfocus");
+        XBMCAddonUtils::getDefaultImage("slider", "textureslidernibfocus");
     }
 
     float ControlSlider::getPercent()
@@ -546,9 +546,9 @@ namespace XBMCAddon
 
       // if texture is supplied use it, else get default ones
       strTextureFocus = focusTexture ? focusTexture :
-        XBMCAddonUtils::getDefaultImage((char*)"button", (char*)"texturefocus");
+        XBMCAddonUtils::getDefaultImage("button", "texturefocus");
       strTextureNoFocus = noFocusTexture ? noFocusTexture :
-        XBMCAddonUtils::getDefaultImage((char*)"button", (char*)"texturenofocus");
+        XBMCAddonUtils::getDefaultImage("button", "texturenofocus");
 
       if (focusOnTexture && noFocusOnTexture)
       {
@@ -558,7 +558,7 @@ namespace XBMCAddon
       else
       {
         strTextureRadioOnFocus = strTextureRadioOnNoFocus = focusTexture ? focusTexture :
-          XBMCAddonUtils::getDefaultImage((char*)"radiobutton", (char*)"textureradiofocus");
+          XBMCAddonUtils::getDefaultImage("radiobutton", "textureradiofocus");
       }
 
       if (focusOffTexture && noFocusOffTexture)
@@ -569,7 +569,7 @@ namespace XBMCAddon
       else
       {
         strTextureRadioOffFocus = strTextureRadioOffNoFocus = noFocusTexture ? noFocusTexture :
-          XBMCAddonUtils::getDefaultImage((char*)"radiobutton", (char*)"textureradiofocus");
+          XBMCAddonUtils::getDefaultImage("radiobutton", "textureradiofocus");
       }
 
       if (font) strFont = font;
@@ -885,12 +885,12 @@ namespace XBMCAddon
       dwHeight = 16;
 
       // get default images
-      strTextureUp = XBMCAddonUtils::getDefaultImage((char*)"listcontrol", (char*)"textureup");
-      strTextureDown = XBMCAddonUtils::getDefaultImage((char*)"listcontrol", (char*)"texturedown");
-      strTextureUpFocus = XBMCAddonUtils::getDefaultImage((char*)"listcontrol", (char*)"textureupfocus");
-      strTextureDownFocus = XBMCAddonUtils::getDefaultImage((char*)"listcontrol", (char*)"texturedownfocus");
-      strTextureUpDisabled = XBMCAddonUtils::getDefaultImage((char*)"listcontrol", (char*)"textureupdisabled");
-      strTextureDownDisabled = XBMCAddonUtils::getDefaultImage((char*)"listcontrol", (char*)"texturedowndisabled");
+      strTextureUp = XBMCAddonUtils::getDefaultImage("listcontrol", "textureup");
+      strTextureDown = XBMCAddonUtils::getDefaultImage("listcontrol", "texturedown");
+      strTextureUpFocus = XBMCAddonUtils::getDefaultImage("listcontrol", "textureupfocus");
+      strTextureDownFocus = XBMCAddonUtils::getDefaultImage("listcontrol", "texturedownfocus");
+      strTextureUpDisabled = XBMCAddonUtils::getDefaultImage("listcontrol", "textureupdisabled");
+      strTextureDownDisabled = XBMCAddonUtils::getDefaultImage("listcontrol", "texturedowndisabled");
     }
 
     void ControlSpin::setTextures(const char* up, const char* down,
@@ -1003,10 +1003,10 @@ namespace XBMCAddon
 
     {
       strTextureFocus = focusTexture ? focusTexture :
-        XBMCAddonUtils::getDefaultImage((char*)"edit", (char*)"texturefocus");
+        XBMCAddonUtils::getDefaultImage("edit", "texturefocus");
 
       strTextureNoFocus = noFocusTexture ? noFocusTexture :
-        XBMCAddonUtils::getDefaultImage((char*)"edit", (char*)"texturenofocus");
+        XBMCAddonUtils::getDefaultImage("edit", "texturenofocus");
 
       if (font) strFont = font;
       if (_textColor) sscanf( _textColor, "%x", &textColor );
@@ -1117,10 +1117,10 @@ namespace XBMCAddon
         sscanf( cselectedColor, "%x", &selectedColor );
 
       strTextureButton = cbuttonTexture ? cbuttonTexture :
-        XBMCAddonUtils::getDefaultImage((char*)"listcontrol", (char*)"texturenofocus");
+        XBMCAddonUtils::getDefaultImage("listcontrol", "texturenofocus");
 
       strTextureButtonFocus = cbuttonFocusTexture ? cbuttonFocusTexture :
-        XBMCAddonUtils::getDefaultImage((char*)"listcontrol", (char*)"texturefocus");
+        XBMCAddonUtils::getDefaultImage("listcontrol", "texturefocus");
 
       // default values for spin control
       pControlSpin->dwPosX = dwWidth - 35;
diff --git a/xbmc/interfaces/python/ContextItemAddonInvoker.cpp b/xbmc/interfaces/python/ContextItemAddonInvoker.cpp
index 96c48e0070b1..2bb32136926f 100644
--- a/xbmc/interfaces/python/ContextItemAddonInvoker.cpp
+++ b/xbmc/interfaces/python/ContextItemAddonInvoker.cpp
@@ -43,7 +43,8 @@ void CContextItemAddonInvoker::onPythonModuleInitialization(void* moduleDict)
   {
     XBMCAddon::xbmcgui::ListItem* arg = new XBMCAddon::xbmcgui::ListItem(m_item);
     PyObject* pyItem = PythonBindings::makePythonInstance(arg, true);
-    if (pyItem == Py_None || PySys_SetObject((char*)"listitem", pyItem) == -1)
+    //! @bug libpython < 3.0 isn't const correct
+    if (pyItem == Py_None || PySys_SetObject(const_cast<char*>("listitem"), pyItem) == -1)
     {
       CLog::Log(LOGERROR, "CPythonInvoker(%d, %s): Failed to set sys parameter", GetId(), m_sourceFile.c_str());
       //FIXME: we should really abort execution
diff --git a/xbmc/interfaces/python/LanguageHook.cpp b/xbmc/interfaces/python/LanguageHook.cpp
index e2ebf97b4bc3..4948048feae2 100644
--- a/xbmc/interfaces/python/LanguageHook.cpp
+++ b/xbmc/interfaces/python/LanguageHook.cpp
@@ -131,7 +131,7 @@ namespace XBMCAddon
 
       // Get a reference to the main module
       // and global dictionary
-      PyObject* main_module = PyImport_AddModule((char*)"__main__");
+      PyObject* main_module = PyImport_AddModule("__main__");
       PyObject* global_dict = PyModule_GetDict(main_module);
       // Extract a reference to the function "func_name"
       // from the global dictionary
@@ -146,7 +146,7 @@ namespace XBMCAddon
       XBMC_TRACE;
       // Get a reference to the main module
       // and global dictionary
-      PyObject* main_module = PyImport_AddModule((char*)"__main__");
+      PyObject* main_module = PyImport_AddModule("__main__");
       PyObject* global_dict = PyModule_GetDict(main_module);
       // Extract a reference to the function "func_name"
       // from the global dictionary
@@ -162,7 +162,7 @@ namespace XBMCAddon
 
       // Get a reference to the main module
       // and global dictionary
-      PyObject* main_module = PyImport_AddModule((char*)"__main__");
+      PyObject* main_module = PyImport_AddModule("__main__");
       PyObject* global_dict = PyModule_GetDict(main_module);
       // Extract a reference to the function "func_name"
       // from the global dictionary
diff --git a/xbmc/interfaces/python/PythonInvoker.cpp b/xbmc/interfaces/python/PythonInvoker.cpp
index aae46e9a8b73..8c1b49b96d90 100644
--- a/xbmc/interfaces/python/PythonInvoker.cpp
+++ b/xbmc/interfaces/python/PythonInvoker.cpp
@@ -222,7 +222,7 @@ bool CPythonInvoker::execute(const std::string &script, const std::vector<std::s
 
     // we want to use sys.path so it includes site-packages
     // if this fails, default to using Py_GetPath
-    PyObject *sysMod(PyImport_ImportModule((char*)"sys")); // must call Py_DECREF when finished
+    PyObject *sysMod(PyImport_ImportModule("sys")); // must call Py_DECREF when finished
     PyObject *sysModDict(PyModule_GetDict(sysMod)); // borrowed ref, no need to delete
     PyObject *pathObj(PyDict_GetItemString(sysModDict, "path")); // borrowed ref, no need to delete
 
@@ -256,7 +256,8 @@ bool CPythonInvoker::execute(const std::string &script, const std::vector<std::s
 #else // ! TARGET_WINDOWS
     CLog::Log(LOGDEBUG, "CPythonInvoker(%d, %s): setting the Python path to %s", GetId(), m_sourceFile.c_str(), m_pythonPath.c_str());
 #endif // ! TARGET_WINDOWS
-    PySys_SetPath((char *)m_pythonPath.c_str());
+    //! @bug libpython < 3.0 isn't const correct
+    PySys_SetPath(const_cast<char*>(m_pythonPath.c_str()));
   }
   else
     // swap in my thread m_threadState
@@ -266,7 +267,7 @@ bool CPythonInvoker::execute(const std::string &script, const std::vector<std::s
   PySys_SetArgv(argc, &argv[0]);
 
   CLog::Log(LOGDEBUG, "CPythonInvoker(%d, %s): entering source directory %s", GetId(), m_sourceFile.c_str(), scriptDir.c_str());
-  PyObject* module = PyImport_AddModule((char*)"__main__");
+  PyObject* module = PyImport_AddModule("__main__");
   PyObject* moduleDict = PyModule_GetDict(module);
 
   // when we are done initing we store thread m_threadState so we can be aborted
@@ -300,7 +301,8 @@ bool CPythonInvoker::execute(const std::string &script, const std::vector<std::s
         return false;
       }
 #endif
-      PyObject* file = PyFile_FromString((char *)nativeFilename.c_str(), (char*)"r");
+      //! @bug libpython isn't const correct
+      PyObject* file = PyFile_FromString(const_cast<char*>(nativeFilename.c_str()), const_cast<char*>("r"));
       FILE *fp = PyFile_AsFile(file);
 
       if (fp != NULL)
@@ -377,8 +379,8 @@ bool CPythonInvoker::execute(const std::string &script, const std::vector<std::s
 
   if (m_threadState)
   {
-    PyObject *m = PyImport_AddModule((char*)"xbmc");
-    if (m == NULL || PyObject_SetAttrString(m, (char*)"abortRequested", PyBool_FromLong(1)))
+    PyObject *m = PyImport_AddModule("xbmc");
+    if (m == NULL || PyObject_SetAttrString(m, "abortRequested", PyBool_FromLong(1)))
       CLog::Log(LOGERROR, "CPythonInvoker(%d, %s): failed to set abortRequested", GetId(), m_sourceFile.c_str());
 
     // make sure all sub threads have finished
@@ -451,8 +453,8 @@ bool CPythonInvoker::stop(bool abort)
       }
 
       PyObject *m;
-      m = PyImport_AddModule((char*)"xbmc");
-      if (m == NULL || PyObject_SetAttrString(m, (char*)"abortRequested", PyBool_FromLong(1)))
+      m = PyImport_AddModule("xbmc");
+      if (m == NULL || PyObject_SetAttrString(m, "abortRequested", PyBool_FromLong(1)))
         CLog::Log(LOGERROR, "CPythonInvoker(%d, %s): failed to set abortRequested", GetId(), m_sourceFile.c_str());
 
       PyThreadState_Swap(old);
diff --git a/xbmc/interfaces/python/PythonSwig.cpp.template b/xbmc/interfaces/python/PythonSwig.cpp.template
index dc34cade666b..9e2e6ee3502c 100644
--- a/xbmc/interfaces/python/PythonSwig.cpp.template
+++ b/xbmc/interfaces/python/PythonSwig.cpp.template
@@ -59,12 +59,12 @@ Helper.setup(this,classes,
     [ 'void' : 'Py_INCREF(Py_None);\n    ${result} = Py_None;',
       'long': '${result} = PyInt_FromLong(${api});',
       'unsigned long': '${result} = PyInt_FromLong(${api});',
-      'bool': '${result} = Py_BuildValue((char*)"b", ${api});',
-      'long long': '${result} = Py_BuildValue((char*)"L", ${api});',
-      'int': '${result} = Py_BuildValue((char*)"i", ${api});',
-      'unsigned int': '${result} = Py_BuildValue((char*)"I", ${api});',
+      'bool': '${result} = Py_BuildValue("b", ${api});',
+      'long long': '${result} = Py_BuildValue("L", ${api});',
+      'int': '${result} = Py_BuildValue("i", ${api});',
+      'unsigned int': '${result} = Py_BuildValue("I", ${api});',
       'double': '${result} = PyFloat_FromDouble(${api});',
-      'float': '${result} = Py_BuildValue((char*)"f", ${api});',
+      'float': '${result} = Py_BuildValue("f", ${api});',
       'std::string' : new File('typemaps/python.string.outtm'),
       'p.q(const).char' : '${result} = PyString_FromString(${api});',
       (Pattern.compile('''(p.){0,1}XbmcCommons::Buffer''')) : new File('typemaps/python.buffer.outtm'),
@@ -178,8 +178,8 @@ void doMethod(Node method, MethodType methodType)
     if (!${useKeywordParsing ? 'PyArg_ParseTupleAndKeywords' : 'PyArg_ParseTuple'}(
        args,
        <% if (useKeywordParsing) { %>kwds,<% } %>
-       (char*)"<%= PythonTools.makeFormatStringFromParameters(method) %>",
-       <% if (useKeywordParsing) { %>(char**)keywords,<% } %><%    params.eachWithIndex { param,i -> %>
+       "<%= PythonTools.makeFormatStringFromParameters(method) %>",
+       <% if (useKeywordParsing) { %>const_cast<char**>(keywords),<% } %><%    params.eachWithIndex { param,i -> %>
          &${PythonTools.parameterCanBeUsedDirectly(param) ? '' : 'py'}${param.@name}${i < params.size() - 1 ? "," : ""}<% } %>
        ))
     {
@@ -436,7 +436,7 @@ void doClassMethodInfo(Node clazz, List initTypeCalls)
   // All of the methods on this class
   static PyMethodDef ${classNameAsVariable}_methods[] = { <%
     normalMethods.each {  %>
-    {(char*)"${it.@sym_name}", (PyCFunction)${module.@name}_${PythonTools.getPyMethodName(it,MethodType.method)}, METH_VARARGS|METH_KEYWORDS, ${Helper.hasDoc(it) ? PythonTools.getPyMethodName(it,MethodType.method) + '__doc__' : 'NULL'} }, <% }
+    {"${it.@sym_name}", (PyCFunction)${module.@name}_${PythonTools.getPyMethodName(it,MethodType.method)}, METH_VARARGS|METH_KEYWORDS, ${Helper.hasDoc(it) ? PythonTools.getPyMethodName(it,MethodType.method) + '__doc__' : 'NULL'} }, <% }
 
     // now do all of the explicit feature:python:method's that may be in this class
     List tmpl = []
@@ -445,7 +445,7 @@ void doClassMethodInfo(Node clazz, List initTypeCalls)
     newMethodKeys.each { key ->
       String featureEntry = clazz.attribute(key)
       String methodName = key.substring('feature_python_method_'.length()) %>
-    {(char*)"${methodName}", (PyCFunction)${module.@name}_${PythonTools.getClassNameAsVariable(clazz)}_${methodName}, METH_VARARGS|METH_KEYWORDS, NULL},
+    {"${methodName}", (PyCFunction)${module.@name}_${PythonTools.getClassNameAsVariable(clazz)}_${methodName}, METH_VARARGS|METH_KEYWORDS, NULL},
 <%
     }
 %>
@@ -662,7 +662,7 @@ void doClassMethodInfo(Node clazz, List initTypeCalls)
 <%  } %>
 
     PyTypeObject& pythonType = Ty${classNameAsVariable}_Type.pythonType;
-    pythonType.tp_name = (char*)"${module.@name}.${clazz.@sym_name}";
+    pythonType.tp_name = "${module.@name}.${clazz.@sym_name}";
     pythonType.tp_basicsize = sizeof(PyHolder);
     pythonType.tp_dealloc = (destructor)${module.@name}_${classNameAsVariable}_Dealloc; <%
   if (doComparator) { %>
@@ -854,7 +854,8 @@ namespace PythonBindings
         }
 %>
         XBMCAddon::Python::PyContext pyContext;
-        PyObject_CallMethod(self,(char*)"${Helper.callingName(it)}",(char*)"(${paramFormatStr})"<%
+        //! @bug libpython < 3.4 isn't const correct
+        PyObject_CallMethod(self,const_cast<char*>("${Helper.callingName(it)}"),const_cast<char*>("(${paramFormatStr})")<%
           params.each {
              %>, py${it.@name} <%
           }
@@ -895,7 +896,7 @@ namespace PythonBindings
 
   static PyMethodDef ${module.@name}_methods[] = { <%
     module.depthFirst().findAll({ it.name() == 'function' && Helper.parents(it, { Node lnode -> lnode.name() == 'class'}).size() == 0 }).each {  %>
-    {(char*)"${it.@sym_name}", (PyCFunction)${module.@name}_${PythonTools.getPyMethodName(it,MethodType.method)}, METH_VARARGS|METH_KEYWORDS, ${Helper.hasDoc(it) ? PythonTools.getPyMethodName(it,MethodType.method) + '__doc__' : 'NULL'} }, <% }
+    {"${it.@sym_name}", (PyCFunction)${module.@name}_${PythonTools.getPyMethodName(it,MethodType.method)}, METH_VARARGS|METH_KEYWORDS, ${Helper.hasDoc(it) ? PythonTools.getPyMethodName(it,MethodType.method) + '__doc__' : 'NULL'} }, <% }
 %>
     {NULL, NULL, 0, NULL}
   };
@@ -931,19 +932,19 @@ namespace PythonBindings
     Py_INCREF(&(Ty${it}_Type.pythonType));<%
    }%>
 
-    module = Py_InitModule((char*)"${module.@name}", ${module.@name}_methods);
+    module = Py_InitModule("${module.@name}", ${module.@name}_methods);
     if (module == NULL) return;
 
 <% classes.each { clazz -> %>
-    PyModule_AddObject(module, (char*)"${clazz.@sym_name}", (PyObject*)(&(Ty${PythonTools.getClassNameAsVariable(clazz)}_Type.pythonType)));<%
+    PyModule_AddObject(module, "${clazz.@sym_name}", (PyObject*)(&(Ty${PythonTools.getClassNameAsVariable(clazz)}_Type.pythonType)));<%
    }%>
 
    // constants
-   PyModule_AddStringConstant(module, (char*)"__author__", (char*)"Team Kodi <http://kodi.tv>");
-   PyModule_AddStringConstant(module, (char*)"__date__", (char*)"${new Date().toString()}");
-   PyModule_AddStringConstant(module, (char*)"__version__", (char*)"2.25.0");
-   PyModule_AddStringConstant(module, (char*)"__credits__", (char*)"Team Kodi");
-   PyModule_AddStringConstant(module, (char*)"__platform__", (char*)"ALL");
+   PyModule_AddStringConstant(module, "__author__", "Team Kodi <http://kodi.tv>");
+   PyModule_AddStringConstant(module, "__date__", "${new Date().toString()}");
+   PyModule_AddStringConstant(module, "__version__", "2.25.0");
+   PyModule_AddStringConstant(module, "__credits__", "Team Kodi");
+   PyModule_AddStringConstant(module, "__platform__", "ALL");
 
    // need to handle constants
 <% module.depthFirst().findAll( { it.name() == 'constant'} ).each {
diff --git a/xbmc/interfaces/python/XBPython.cpp b/xbmc/interfaces/python/XBPython.cpp
index 157ca2f7974c..a6cce96b0e24 100644
--- a/xbmc/interfaces/python/XBPython.cpp
+++ b/xbmc/interfaces/python/XBPython.cpp
@@ -645,8 +645,9 @@ bool XBPython::OnScriptInitialized(ILanguageInvoker *invoker)
     // lock already exists and we need to lock it as PyEval_InitThreads
     // would not do that in that case.
     PyEval_AcquireLock();
-    char* python_argv[1] = { (char*)"" };
-    PySys_SetArgv(1, python_argv);
+    const char* python_argv[1] = { "" };
+    //! @bug libpython isn't const correct
+    PySys_SetArgv(1, const_cast<char**>(python_argv));
 
     if (!(m_mainThreadState = PyThreadState_Get()))
       CLog::Log(LOGERROR, "Python threadstate is NULL.");
diff --git a/xbmc/interfaces/python/swig.cpp b/xbmc/interfaces/python/swig.cpp
index b4f5354b4399..e42343a861de 100644
--- a/xbmc/interfaces/python/swig.cpp
+++ b/xbmc/interfaces/python/swig.cpp
@@ -369,7 +369,7 @@ namespace PythonBindings
 
     // retrieve the TypeInfo from the api class
     const TypeInfo* typeInfo = getTypeInfoForInstance(api);
-    PyTypeObject* typeObj = pytype == NULL ? (PyTypeObject*)(&(typeInfo->pythonType)) : pytype;
+    PyTypeObject* typeObj = pytype == NULL ? const_cast<PyTypeObject*>(&(typeInfo->pythonType)) : pytype;
 
     PyHolder* self = reinterpret_cast<PyHolder*>(typeObj->tp_alloc(typeObj,0));
     if (!self) return NULL;

From bd5d5efbde25a544357aa7a82edef4a17a1c0639 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 12/18] [cleanup][network] silence casts away qualifiers
 warnings

---
 xbmc/network/AirTunesServer.cpp                              |  6 +++---
 xbmc/network/EventPacket.cpp                                 |  2 +-
 xbmc/network/Network.cpp                                     |  2 +-
 xbmc/network/WebServer.cpp                                   | 11 ++++++-----
 xbmc/network/cddb.cpp                                        |  6 +++---
 xbmc/network/httprequesthandler/HTTPFileHandler.cpp          |  2 +-
 .../httprequesthandler/python/HTTPPythonWsgiInvoker.cpp      |  5 +++--
 xbmc/network/websocket/WebSocket.cpp                         | 12 ++++++------
 8 files changed, 24 insertions(+), 22 deletions(-)

diff --git a/xbmc/network/AirTunesServer.cpp b/xbmc/network/AirTunesServer.cpp
index 075d7afd24da..cbc28c900273 100644
--- a/xbmc/network/AirTunesServer.cpp
+++ b/xbmc/network/AirTunesServer.cpp
@@ -95,7 +95,7 @@ std::map<std::string, std::string> decodeDMAP(const char *buffer, unsigned int s
     std::string tag;
     tag.append(buffer + offset, 4);
     offset += 4;
-    uint32_t length = Endian_SwapBE32(*(uint32_t *)(buffer + offset));
+    uint32_t length = Endian_SwapBE32(*(const uint32_t *)(buffer + offset));
     offset += sizeof(uint32_t);
     std::string content;
     content.append(buffer + offset, length);//possible fixme - utf8?
@@ -350,12 +350,12 @@ LAuE4Pu13aKiJnfft7hIjbK+5kyb3TysZvoyDnb3HOKvInK7vXbKuU4ISgxB2bB3HcYzQMGsz1qJ\
 
 void CAirTunesServer::AudioOutputFunctions::audio_set_metadata(void *cls, void *session, const void *buffer, int buflen)
 {
-  CAirTunesServer::SetMetadataFromBuffer((char *)buffer, buflen);
+  CAirTunesServer::SetMetadataFromBuffer((const char *)buffer, buflen);
 }
 
 void CAirTunesServer::AudioOutputFunctions::audio_set_coverart(void *cls, void *session, const void *buffer, int buflen)
 {
-  CAirTunesServer::SetCoverArtFromBuffer((char *)buffer, buflen);
+  CAirTunesServer::SetCoverArtFromBuffer((const char *)buffer, buflen);
 }
 
 char session[]="Kodi-AirTunes";
diff --git a/xbmc/network/EventPacket.cpp b/xbmc/network/EventPacket.cpp
index 440bbfbb63f9..1735a47ff7df 100644
--- a/xbmc/network/EventPacket.cpp
+++ b/xbmc/network/EventPacket.cpp
@@ -29,7 +29,7 @@ using namespace EVENTPACKET;
 /************************************************************************/
 bool CEventPacket::Parse(int datasize, const void *data)
 {
-  unsigned char* buf = (unsigned char *)data;
+  unsigned char* buf = const_cast<unsigned char*>((const unsigned char *)data);
   if (datasize < HEADER_SIZE || datasize > PACKET_SIZE)
     return false;
 
diff --git a/xbmc/network/Network.cpp b/xbmc/network/Network.cpp
index 5533b71929cd..a769efbeb047 100644
--- a/xbmc/network/Network.cpp
+++ b/xbmc/network/Network.cpp
@@ -364,7 +364,7 @@ static const char* ConnectHostPort(SOCKET soc, const struct sockaddr_in& addr, s
   if (result != 0)
     return "set non-blocking option failed";
 
-  result = connect(soc, (struct sockaddr *)&addr, sizeof(addr)); // non-blocking connect, will fail ..
+  result = connect(soc, (const struct sockaddr *)&addr, sizeof(addr)); // non-blocking connect, will fail ..
 
   if (result < 0)
   {
diff --git a/xbmc/network/WebServer.cpp b/xbmc/network/WebServer.cpp
index bd9b05a45c63..d7a8f0f82d14 100644
--- a/xbmc/network/WebServer.cpp
+++ b/xbmc/network/WebServer.cpp
@@ -95,14 +95,15 @@ CWebServer::CWebServer()
 #endif
 }
 
-static MHD_Response* create_response(size_t size, void* data, int free, int copy)
+static MHD_Response* create_response(size_t size, const void* data, int free, int copy)
 {
   MHD_ResponseMemoryMode mode = MHD_RESPMEM_PERSISTENT;
   if (copy)
     mode = MHD_RESPMEM_MUST_COPY;
   else if (free)
     mode = MHD_RESPMEM_MUST_FREE;
-  return MHD_create_response_from_buffer(size, data, mode);
+  //! @bug libmicrohttpd isn't const correct
+  return MHD_create_response_from_buffer(size, const_cast<void*>(data), mode);
 }
 
 int CWebServer::AskForAuthentication(const HTTPRequest& request) const
@@ -868,7 +869,7 @@ int CWebServer::CreateFileDownloadResponse(const std::shared_ptr<IHTTPRequestHan
 int CWebServer::CreateErrorResponse(struct MHD_Connection *connection, int responseType, HTTPMethod method, struct MHD_Response *&response) const
 {
   size_t payloadSize = 0;
-  void *payload = nullptr;
+  const void *payload = nullptr;
 
   if (method != HEAD)
   {
@@ -876,12 +877,12 @@ int CWebServer::CreateErrorResponse(struct MHD_Connection *connection, int respo
     {
       case MHD_HTTP_NOT_FOUND:
         payloadSize = strlen(PAGE_FILE_NOT_FOUND);
-        payload = (void *)PAGE_FILE_NOT_FOUND;
+        payload = (const void *)PAGE_FILE_NOT_FOUND;
         break;
 
       case MHD_HTTP_NOT_IMPLEMENTED:
         payloadSize = strlen(NOT_SUPPORTED);
-        payload = (void *)NOT_SUPPORTED;
+        payload = (const void *)NOT_SUPPORTED;
         break;
     }
   }
diff --git a/xbmc/network/cddb.cpp b/xbmc/network/cddb.cpp
index 02b7600d6d6f..2e4e8c2c14c6 100644
--- a/xbmc/network/cddb.cpp
+++ b/xbmc/network/cddb.cpp
@@ -484,7 +484,7 @@ void Xcddb::parseData(const char *buffer)
   // the data contained on those lines should be concatenated
   char *line;
   const char trenner[3] = {'\n', '\r', '\0'};
-  strtok((char*)buffer, trenner); // skip first line
+  strtok(const_cast<char*>(buffer), trenner); // skip first line
   while ((line = strtok(0, trenner)))
   {
     // Lines that begin with # are comments, should be ignored
@@ -774,7 +774,7 @@ bool Xcddb::writeCacheFile( const char* pBuffer, uint32_t discid )
   XFILE::CFile file;
   if (file.OpenForWrite(GetCacheFile(discid), true))
   {
-    const bool ret = ( (size_t) file.Write((void*)pBuffer, strlen(pBuffer) + 1) == strlen(pBuffer) + 1);
+    const bool ret = ( (size_t) file.Write((const void*)pBuffer, strlen(pBuffer) + 1) == strlen(pBuffer) + 1);
     file.Close();
     return ret;
   }
@@ -963,7 +963,7 @@ bool Xcddb::queryCDinfo(CCdInfo* pInfo)
   switch(m_lastError)
   {
   case 200: //Found exact match
-    strtok((char *)recv_buffer.c_str(), " ");
+    strtok(const_cast<char *>(recv_buffer.c_str()), " ");
     read_buffer = StringUtils::Format("cddb read %s %08x", strtok(NULL, " "), discid);
     break;
 
diff --git a/xbmc/network/httprequesthandler/HTTPFileHandler.cpp b/xbmc/network/httprequesthandler/HTTPFileHandler.cpp
index e0f72598b07d..fb06618f033f 100644
--- a/xbmc/network/httprequesthandler/HTTPFileHandler.cpp
+++ b/xbmc/network/httprequesthandler/HTTPFileHandler.cpp
@@ -104,7 +104,7 @@ void CHTTPFileHandler::SetLastModifiedDate(const struct __stat64 *statBuffer)
   struct tm *time;
 #ifdef HAVE_LOCALTIME_R
   struct tm result = { };
-  time = localtime_r((time_t*)&statBuffer->st_mtime, &result);
+  time = localtime_r((const time_t*)&statBuffer->st_mtime, &result);
 #else
   time = localtime((time_t *)&statBuffer->st_mtime);
 #endif
diff --git a/xbmc/network/httprequesthandler/python/HTTPPythonWsgiInvoker.cpp b/xbmc/network/httprequesthandler/python/HTTPPythonWsgiInvoker.cpp
index f041823df9f5..4a3643015aeb 100644
--- a/xbmc/network/httprequesthandler/python/HTTPPythonWsgiInvoker.cpp
+++ b/xbmc/network/httprequesthandler/python/HTTPPythonWsgiInvoker.cpp
@@ -283,9 +283,10 @@ void CHTTPPythonWsgiInvoker::executeScript(void *fp, const std::string &script,
   if (pyResultIterator != NULL)
   {
     // Call optional close method on iterator
-    if (PyObject_HasAttrString(pyResultIterator, (char*)"close") == 1)
+    if (PyObject_HasAttrString(pyResultIterator, "close") == 1)
     {
-      if (PyObject_CallMethod(pyResultIterator, (char*)"close", NULL) == NULL)
+      //! @bug libpython < 3.4 isn't const correct
+      if (PyObject_CallMethod(pyResultIterator, const_cast<char*>("close"), NULL) == NULL)
         CLog::Log(LOGERROR, "CHTTPPythonWsgiInvoker: failed to close iterator object for WSGI script \"%s\"", script.c_str());
     }
     Py_DECREF(pyResultIterator);
diff --git a/xbmc/network/websocket/WebSocket.cpp b/xbmc/network/websocket/WebSocket.cpp
index 7508d4687bbb..c4fa5e4602ca 100644
--- a/xbmc/network/websocket/WebSocket.cpp
+++ b/xbmc/network/websocket/WebSocket.cpp
@@ -98,12 +98,12 @@ CWebSocketFrame::CWebSocketFrame(const char* data, uint64_t length)
   int offset = 0;
   if (m_length == 126)
   {
-    m_length = (uint64_t)Endian_SwapBE16(*(uint16_t *)(m_data + 2));
+    m_length = (uint64_t)Endian_SwapBE16(*(const uint16_t *)(m_data + 2));
     offset = 2;
   }
   else if (m_length == 127)
   {
-    m_length = Endian_SwapBE64(*(uint64_t *)(m_data + 2));
+    m_length = Endian_SwapBE64(*(const uint64_t *)(m_data + 2));
     offset = 8;
   }
 
@@ -117,7 +117,7 @@ CWebSocketFrame::CWebSocketFrame(const char* data, uint64_t length)
   // Get the mask
   if (m_masked)
   {
-    m_mask = *(uint32_t *)(m_data + LENGTH_MIN + offset);
+    m_mask = *(const uint32_t *)(m_data + LENGTH_MIN + offset);
     offset += 4;
   }
 
@@ -126,7 +126,7 @@ CWebSocketFrame::CWebSocketFrame(const char* data, uint64_t length)
 
   // Get application data
   if (m_length > 0)
-    m_applicationData = (char *)(m_data + LENGTH_MIN + offset);
+    m_applicationData = const_cast<char *>(m_data + LENGTH_MIN + offset);
   else
     m_applicationData = NULL;
 
@@ -224,11 +224,11 @@ CWebSocketFrame::CWebSocketFrame(WebSocketFrameOpcode opcode, const char* data /
   // Get the whole data
   m_lengthFrame = buffer.size();
   m_data = new char[(uint32_t)m_lengthFrame];
-  memcpy((char *)m_data, buffer.c_str(), (uint32_t)m_lengthFrame);
+  memcpy(const_cast<char *>(m_data), buffer.c_str(), (uint32_t)m_lengthFrame);
 
   if (data)
   {
-    m_applicationData = (char *)m_data;
+    m_applicationData = const_cast<char *>(m_data);
     m_applicationData += applicationDataOffset;
   }
 

From 32598568f86967b713c71ba63f46ee90e1ea7640 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 13/18] [cleanup][pictures] silence casts away qualifiers
 warnings

---
 xbmc/pictures/ExifParse.cpp      | 34 +++++++++++++++++-----------------
 xbmc/pictures/IptcParse.cpp      |  6 +++---
 xbmc/pictures/PictureInfoTag.cpp |  4 ++--
 3 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/xbmc/pictures/ExifParse.cpp b/xbmc/pictures/ExifParse.cpp
index 1627c9cf7a21..d90a1eb3a113 100644
--- a/xbmc/pictures/ExifParse.cpp
+++ b/xbmc/pictures/ExifParse.cpp
@@ -206,9 +206,9 @@ static void ErrNonfatal(const char* const msg, int a1, int a2)
 int CExifParse::Get16(const void* const Short, const bool motorolaOrder)
 {
     if (motorolaOrder) {
-        return (((unsigned char *)Short)[0] << 8) | ((unsigned char *)Short)[1];
+        return (((const unsigned char *)Short)[0] << 8) | ((const unsigned char *)Short)[1];
     } else {
-        return (((unsigned char *)Short)[1] << 8) | ((unsigned char *)Short)[0];
+        return (((const unsigned char *)Short)[1] << 8) | ((const unsigned char *)Short)[0];
     }
 }
 
@@ -218,11 +218,11 @@ int CExifParse::Get16(const void* const Short, const bool motorolaOrder)
 int CExifParse::Get32(const void* const Long, const bool motorolaOrder)
 {
     if (motorolaOrder) {
-        return  ((( char *)Long)[0] << 24) | (((unsigned char *)Long)[1] << 16)
-          | (((unsigned char *)Long)[2] << 8 ) | (((unsigned char *)Long)[3] << 0 );
+        return  (((const char *)Long)[0] << 24) | (((const unsigned char *)Long)[1] << 16)
+          | (((const unsigned char *)Long)[2] << 8 ) | (((const unsigned char *)Long)[3] << 0 );
     } else {
-        return  ((( char *)Long)[3] << 24) | (((unsigned char *)Long)[2] << 16)
-          | (((unsigned char *)Long)[1] << 8 ) | (((unsigned char *)Long)[0] << 0 );
+        return  (((const char *)Long)[3] << 24) | (((const unsigned char *)Long)[2] << 16)
+          | (((const unsigned char *)Long)[1] << 8 ) | (((const unsigned char *)Long)[0] << 0 );
     }
 }
 
@@ -254,8 +254,8 @@ double CExifParse::ConvertAnyFormat(const void* const ValuePtr, int Format)
 
   switch(Format)
   {
-    case FMT_SBYTE:     Value = *(  signed char*)ValuePtr;          break;
-    case FMT_BYTE:      Value = *(unsigned char*)ValuePtr;          break;
+    case FMT_SBYTE:     Value = *(const   signed char*)ValuePtr;          break;
+    case FMT_BYTE:      Value = *(const unsigned char*)ValuePtr;          break;
 
     case FMT_USHORT:    Value = Get16(ValuePtr, m_MotorolaOrder);   break;
     case FMT_ULONG:     Value = (unsigned)Get32(ValuePtr, m_MotorolaOrder);   break;
@@ -265,7 +265,7 @@ double CExifParse::ConvertAnyFormat(const void* const ValuePtr, int Format)
     {
       int Num,Den;
       Num = Get32(ValuePtr, m_MotorolaOrder);
-      Den = Get32(4+(char *)ValuePtr, m_MotorolaOrder);
+      Den = Get32(4+(const char *)ValuePtr, m_MotorolaOrder);
 
       if (Den == 0)    Value = 0;
       else             Value = (double)Num/Den;
@@ -276,8 +276,8 @@ double CExifParse::ConvertAnyFormat(const void* const ValuePtr, int Format)
     case FMT_SLONG:     Value = Get32(ValuePtr, m_MotorolaOrder);                  break;
 
     // Not sure if this is correct (never seen float used in Exif format)
-    case FMT_SINGLE:    Value = (double)*(float*)ValuePtr;          break;
-    case FMT_DOUBLE:    Value = *(double*)ValuePtr;                 break;
+    case FMT_SINGLE:    Value = (double)*(const float*)ValuePtr;          break;
+    case FMT_DOUBLE:    Value = *(const double*)ValuePtr;                 break;
 
     default:
       ErrNonfatal("Illegal format code %d",Format,0);
@@ -338,7 +338,7 @@ void CExifParse::ProcessDir(const unsigned char* const DirStart,
   IndentString[NestingLevel * 4] = '\0';
 
 
-  int NumDirEntries = Get16((void*)DirStart, m_MotorolaOrder);
+  int NumDirEntries = Get16((const void*)DirStart, m_MotorolaOrder);
 
   const unsigned char* const DirEnd = DIR_ENTRY_ADDR(DirStart, NumDirEntries);
   if (DirEnd+4 > (OffsetBase+ExifLength))
@@ -391,7 +391,7 @@ void CExifParse::ProcessDir(const unsigned char* const DirStart,
         ErrNonfatal("Illegal value pointer for tag %04x", Tag,0);
         continue;
       }
-      ValuePtr = (unsigned char*)(OffsetBase+OffsetVal);
+      ValuePtr = (unsigned char*)(const_cast<unsigned char*>(OffsetBase)+OffsetVal);
 
       if (OffsetVal > m_LargestExifOffset)
       {
@@ -401,7 +401,7 @@ void CExifParse::ProcessDir(const unsigned char* const DirStart,
     }
     else {
       // 4 bytes or less and value is in the dir entry itself
-      ValuePtr = (unsigned char*)(DirEntry+8);
+      ValuePtr = (unsigned char*)(const_cast<unsigned char*>(DirEntry)+8);
     }
 
 
@@ -763,7 +763,7 @@ bool CExifParse::Process (const unsigned char* const ExifSection, const unsigned
   const char ExifAlignment1[] = "MM";
   const char ExifExtra        = 0x2a;
 
-  char* pos = (char*)(ExifSection + sizeof(short));   // position data pointer after length field
+  const char* pos = (const char*)(ExifSection + sizeof(short));   // position data pointer after length field
 
   if (memcmp(pos, ExifHeader,6))
   {
@@ -788,14 +788,14 @@ bool CExifParse::Process (const unsigned char* const ExifSection, const unsigned
   pos += strlen(ExifAlignment0);
 
   // Check the next value for correctness.
-  if (Get16((void*)(pos), m_MotorolaOrder) != ExifExtra)
+  if (Get16((const void*)(pos), m_MotorolaOrder) != ExifExtra)
   {
     printf("ExifParse: invalid Exif start (1)");
     return false;
   }
   pos += sizeof(short);
 
-  unsigned long FirstOffset = (unsigned)Get32((void*)pos, m_MotorolaOrder);
+  unsigned long FirstOffset = (unsigned)Get32((const void*)pos, m_MotorolaOrder);
   if (FirstOffset < 8 || FirstOffset > 16)
   {
     // Usually set to 8, but other values valid too.
diff --git a/xbmc/pictures/IptcParse.cpp b/xbmc/pictures/IptcParse.cpp
index 20c5b80ed552..aae6c5d66cee 100644
--- a/xbmc/pictures/IptcParse.cpp
+++ b/xbmc/pictures/IptcParse.cpp
@@ -95,8 +95,8 @@ bool CIptcParse::Process (const unsigned char* const Data, const unsigned short
   const char IptcSignature3[] = {0x04, 0x04};
 
   // Check IPTC signatures
-  char* pos = (char*)(Data + sizeof(short));  // position data pointer after length field
-  char* maxpos = (char*)(Data+itemlen);
+  const char* pos = (const char*)(Data + sizeof(short));  // position data pointer after length field
+  const char* maxpos = (const char*)(Data+itemlen);
   unsigned char headerLen = 0;
   unsigned char dataLen = 0;
   memset(info, 0, sizeof(IPTCInfo_t));
@@ -139,7 +139,7 @@ bool CIptcParse::Process (const unsigned char* const Data, const unsigned short
   pos += 4;                                   // move data pointer to the next field
 
   // Now read IPTC data
-  while (pos < (char*)(Data + itemlen-5))
+  while (pos < (const char*)(Data + itemlen-5))
   {
     if (pos + 5 > maxpos) return false;
 
diff --git a/xbmc/pictures/PictureInfoTag.cpp b/xbmc/pictures/PictureInfoTag.cpp
index 54407c469066..675f738ec52a 100644
--- a/xbmc/pictures/PictureInfoTag.cpp
+++ b/xbmc/pictures/PictureInfoTag.cpp
@@ -317,7 +317,7 @@ const std::string CPictureInfoTag::GetInfo(int info) const
     // Ascii, Unicode (UCS2), JIS (X208-1990), Unknown (application specific)
     if (m_exifInfo.CommentsCharset == EXIF_COMMENT_CHARSET_UNICODE)
     {
-      g_charsetConverter.ucs2ToUTF8(std::u16string((char16_t*)m_exifInfo.Comments), value);
+      g_charsetConverter.ucs2ToUTF8(std::u16string((const char16_t*)m_exifInfo.Comments), value);
     }
     else
     {
@@ -331,7 +331,7 @@ const std::string CPictureInfoTag::GetInfo(int info) const
   case SLIDESHOW_EXIF_XPCOMMENT:
     if (m_exifInfo.XPCommentsCharset == EXIF_COMMENT_CHARSET_UNICODE)
     {
-      g_charsetConverter.ucs2ToUTF8(std::u16string((char16_t*)m_exifInfo.XPComment), value);
+      g_charsetConverter.ucs2ToUTF8(std::u16string((const char16_t*)m_exifInfo.XPComment), value);
     }
     else
     {

From f659d6a151985989495b7ff88e9a28422e7c5b08 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 14/18] [cleanup][platform] silence casts away qualifiers
 warnings

---
 xbmc/platform/linux/storage/UDevProvider.cpp | 2 +-
 xbmc/platform/posix/filesystem/SMBFile.cpp   | 8 +++++---
 2 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/xbmc/platform/linux/storage/UDevProvider.cpp b/xbmc/platform/linux/storage/UDevProvider.cpp
index 4bcebf48f705..ebe69deb2734 100644
--- a/xbmc/platform/linux/storage/UDevProvider.cpp
+++ b/xbmc/platform/linux/storage/UDevProvider.cpp
@@ -52,7 +52,7 @@ static const char *get_mountpoint(const char *devnode)
     // If mount point contain characters like space, it is converted to
     // "\040". This situation should be handled.
     char *c1, *c2;
-    for (c1 = c2 = (char*)mountpoint; *c2; ++c1)
+    for (c1 = c2 = const_cast<char*>(mountpoint); *c2; ++c1)
     {
       if (*c2 == '\\')
       {
diff --git a/xbmc/platform/posix/filesystem/SMBFile.cpp b/xbmc/platform/posix/filesystem/SMBFile.cpp
index 252d2b39f7ae..5d78f4dcf78f 100644
--- a/xbmc/platform/posix/filesystem/SMBFile.cpp
+++ b/xbmc/platform/posix/filesystem/SMBFile.cpp
@@ -190,9 +190,11 @@ void CSMB::Init()
     smbc_setTimeout(m_context, g_advancedSettings.m_sambaclienttimeout * 1000);
     // we do not need to strdup these, smbc_setXXX below will make their own copies
     if (CServiceBroker::GetSettings().GetString(CSettings::SETTING_SMB_WORKGROUP).length() > 0)
-      smbc_setWorkgroup(m_context, (char*)CServiceBroker::GetSettings().GetString(CSettings::SETTING_SMB_WORKGROUP).c_str());
+      //! @bug libsmbclient < 4.9 isn't const correct
+      smbc_setWorkgroup(m_context, const_cast<char*>(CServiceBroker::GetSettings().GetString(CSettings::SETTING_SMB_WORKGROUP).c_str()));
     std::string guest = "guest";
-    smbc_setUser(m_context, (char*)guest.c_str());
+    //! @bug libsmbclient < 4.8 isn't const correct
+    smbc_setUser(m_context, const_cast<char*>(guest.c_str()));
 #else
     m_context->debug = (g_advancedSettings.CanLogComponent(LOGSAMBA) ? 10 : 0);
     m_context->callbacks.auth_fn = xb_smbc_auth;
@@ -585,7 +587,7 @@ ssize_t CSMBFile::Write(const void* lpBuf, size_t uiBufSize)
   // lpBuf can be safely casted to void* since xbmc_write will only read from it.
   CSingleLock lock(smb);
 
-  return  smbc_write(m_fd, (void*)lpBuf, uiBufSize);
+  return  smbc_write(m_fd, lpBuf, uiBufSize);
 }
 
 bool CSMBFile::Delete(const CURL& url)

From db5c090d3b29902eefafd04fca4e2f87a42f37e7 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 15/18] [cleanup][threads] silence casts away qualifiers
 warnings

---
 xbmc/threads/test/TestHelpers.h | 10 ++--------
 1 file changed, 2 insertions(+), 8 deletions(-)

diff --git a/xbmc/threads/test/TestHelpers.h b/xbmc/threads/test/TestHelpers.h
index e36b426e6ebb..8a31c04dfa27 100644
--- a/xbmc/threads/test/TestHelpers.h
+++ b/xbmc/threads/test/TestHelpers.h
@@ -82,14 +82,8 @@ class thread
     delete cthread;
   }
 
-  /**
-   * Gcc-4.2 requires this to be 'const' to find the right constructor.
-   * It really shouldn't be since it modifies the parameter thread
-   * to ensure only one thread instance has control of the
-   * Runnable.a
-   */
-  inline thread(const thread& other) : f(other.f), cthread(other.cthread) { ((thread&)other).f = NULL; ((thread&)other).cthread = NULL; }
-  inline thread& operator=(const thread& other) { f = other.f; ((thread&)other).f = NULL; cthread = other.cthread; ((thread&)other).cthread = NULL; return *this; }
+  inline thread(thread& other) : f(other.f), cthread(other.cthread) { other.f = NULL; other.cthread = NULL; }
+  inline thread& operator=(thread& other) { f = other.f; other.f = NULL; cthread = other.cthread; other.cthread = NULL; return *this; }
 
   void join()
   {

From 175adcaa739ff0279f52a62137e30208944856b7 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 16/18] [cleanup][utils] silence casts away qualifiers warnings

---
 xbmc/utils/StringUtils.cpp | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/xbmc/utils/StringUtils.cpp b/xbmc/utils/StringUtils.cpp
index 74cc92d36aad..f2c0e519c265 100644
--- a/xbmc/utils/StringUtils.cpp
+++ b/xbmc/utils/StringUtils.cpp
@@ -312,9 +312,9 @@ std::wstring StringUtils::FormatV(const wchar_t *fmt, va_list args)
 
 int compareWchar (const void* a, const void* b)
 {
-  if (*(wchar_t*)a <  *(wchar_t*)b)
+  if (*(const wchar_t*)a <  *(const wchar_t*)b)
     return -1;
-  else if (*(wchar_t*)a >  *(wchar_t*)b)
+  else if (*(const wchar_t*)a >  *(const wchar_t*)b)
     return 1;
   return 0;
 }
@@ -769,9 +769,9 @@ int StringUtils::FindNumber(const std::string& strInput, const std::string &strF
 // and 0 if they are identical (essentially calculates left - right)
 int64_t StringUtils::AlphaNumericCompare(const wchar_t *left, const wchar_t *right)
 {
-  wchar_t *l = (wchar_t *)left;
-  wchar_t *r = (wchar_t *)right;
-  wchar_t *ld, *rd;
+  const wchar_t *l = left;
+  const wchar_t *r = right;
+  const wchar_t *ld, *rd;
   wchar_t lc, rc;
   int64_t lnum, rnum;
   const std::collate<wchar_t>& coll = std::use_facet<std::collate<wchar_t> >(g_langInfo.GetSystemLocale());
@@ -1058,12 +1058,12 @@ int IsUTF8Letter(const unsigned char *str)
 size_t StringUtils::FindWords(const char *str, const char *wordLowerCase)
 {
   // NOTE: This assumes word is lowercase!
-  unsigned char *s = (unsigned char *)str;
+  const unsigned char *s = (const unsigned char *)str;
   do
   {
     // start with a compare
-    unsigned char *c = s;
-    unsigned char *w = (unsigned char *)wordLowerCase;
+    const unsigned char *c = s;
+    const unsigned char *w = (const unsigned char *)wordLowerCase;
     bool same = true;
     while (same && *c && *w)
     {

From e7c0cafad75e596ee3ada273a0783cde242a05fe Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 17/18] [cleanup][video] silence casts away qualifiers warnings

---
 xbmc/video/Teletext.cpp      |  8 ++++----
 xbmc/video/Teletext.h        |  2 +-
 xbmc/video/VideoDatabase.cpp | 16 ++++++++--------
 3 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/xbmc/video/Teletext.cpp b/xbmc/video/Teletext.cpp
index 4cd73e44033e..1eb9429e2053 100644
--- a/xbmc/video/Teletext.cpp
+++ b/xbmc/video/Teletext.cpp
@@ -645,12 +645,12 @@ bool CTeletextDecoder::InitDecoder()
     m_RenderInfo.axdrcs[i+12+1] = (m_RenderInfo.FontHeight * i + 6) / 10;
 
   /* center screen */
-  m_TypeTTF.face_id   = (FTC_FaceID) m_teletextFont.c_str();
+  m_TypeTTF.face_id   = (FTC_FaceID) const_cast<char*>(m_teletextFont.c_str());
   m_TypeTTF.height    = (FT_UShort) m_RenderInfo.FontHeight;
   m_TypeTTF.flags     = FT_LOAD_MONOCHROME;
   if (FTC_Manager_LookupFace(m_Manager, m_TypeTTF.face_id, &m_Face))
   {
-    m_TypeTTF.face_id = (FTC_FaceID) m_teletextFont.c_str();
+    m_TypeTTF.face_id = (FTC_FaceID) const_cast<char*>(m_teletextFont.c_str());
     if ((error = FTC_Manager_LookupFace(m_Manager, m_TypeTTF.face_id, &m_Face)))
     {
       CLog::Log(LOGERROR, "%s: <FTC_Manager_Lookup_Face failed with Errorcode 0x%.2X>\n", __FUNCTION__, error);
@@ -670,7 +670,7 @@ bool CTeletextDecoder::InitDecoder()
   ClearFB(GetColorRGB(TXT_ColorTransp));
   ClearBB(GetColorRGB(TXT_ColorTransp)); /* initialize backbuffer */
   /* set new colormap */
-  SetColors((unsigned short *)DefaultColors, 0, TXT_Color_SIZECOLTABLE);
+  SetColors(DefaultColors, 0, TXT_Color_SIZECOLTABLE);
 
   for (int i = 0; i < 40 * 25; i++)
   {
@@ -3965,7 +3965,7 @@ int CTeletextDecoder::NextHex(int i) /* return next existing non-decimal page nu
   return i;
 }
 
-void CTeletextDecoder::SetColors(unsigned short *pcolormap, int offset, int number)
+void CTeletextDecoder::SetColors(const unsigned short *pcolormap, int offset, int number)
 {
   int j = offset; /* index in global color table */
 
diff --git a/xbmc/video/Teletext.h b/xbmc/video/Teletext.h
index a8a18c8af5e4..2150b8e3d832 100644
--- a/xbmc/video/Teletext.h
+++ b/xbmc/video/Teletext.h
@@ -136,7 +136,7 @@ class CTeletextDecoder
   int iTripletNumber2Data(int iONr, TextCachedPage_t *pstCachedPage, unsigned char* pagedata);
   int SetNational(unsigned char sec);
   int NextHex(int i);
-  void SetColors(unsigned short *pcolormap, int offset, int number);
+  void SetColors(const unsigned short *pcolormap, int offset, int number);
   UTILS::Color GetColorRGB(enumTeletextColor ttc);
 
   static FT_Error MyFaceRequester(FTC_FaceID face_id, FT_Library library, FT_Pointer request_data, FT_Face *aface);
diff --git a/xbmc/video/VideoDatabase.cpp b/xbmc/video/VideoDatabase.cpp
index 1ce60a9c672c..70e6e12b099f 100644
--- a/xbmc/video/VideoDatabase.cpp
+++ b/xbmc/video/VideoDatabase.cpp
@@ -2208,14 +2208,14 @@ std::string CVideoDatabase::GetValueString(const CVideoInfoTag &details, int min
     switch (offsets[i].type)
     {
     case VIDEODB_TYPE_STRING:
-      conditions.emplace_back(PrepareSQL("c%02d='%s'", i, ((std::string*)(((char*)&details)+offsets[i].offset))->c_str()));
+      conditions.emplace_back(PrepareSQL("c%02d='%s'", i, ((const std::string*)(((const char*)&details)+offsets[i].offset))->c_str()));
       break;
     case VIDEODB_TYPE_INT:
-      conditions.emplace_back(PrepareSQL("c%02d='%i'", i, *(int*)(((char*)&details)+offsets[i].offset)));
+      conditions.emplace_back(PrepareSQL("c%02d='%i'", i, *(const int*)(((const char*)&details)+offsets[i].offset)));
       break;
     case VIDEODB_TYPE_COUNT:
       {
-        int value = *(int*)(((char*)&details)+offsets[i].offset);
+        int value = *(const int*)(((const char*)&details)+offsets[i].offset);
         if (value)
           conditions.emplace_back(PrepareSQL("c%02d=%i", i, value));
         else
@@ -2223,20 +2223,20 @@ std::string CVideoDatabase::GetValueString(const CVideoInfoTag &details, int min
       }
       break;
     case VIDEODB_TYPE_BOOL:
-      conditions.emplace_back(PrepareSQL("c%02d='%s'", i, *(bool*)(((char*)&details)+offsets[i].offset)?"true":"false"));
+      conditions.emplace_back(PrepareSQL("c%02d='%s'", i, *(const bool*)(((const char*)&details)+offsets[i].offset)?"true":"false"));
       break;
     case VIDEODB_TYPE_FLOAT:
-      conditions.emplace_back(PrepareSQL("c%02d='%f'", i, *(float*)(((char*)&details)+offsets[i].offset)));
+      conditions.emplace_back(PrepareSQL("c%02d='%f'", i, *(const float*)(((const char*)&details)+offsets[i].offset)));
       break;
     case VIDEODB_TYPE_STRINGARRAY:
-      conditions.emplace_back(PrepareSQL("c%02d='%s'", i, StringUtils::Join(*((std::vector<std::string>*)(((char*)&details)+offsets[i].offset)),
+      conditions.emplace_back(PrepareSQL("c%02d='%s'", i, StringUtils::Join(*((const std::vector<std::string>*)(((const char*)&details)+offsets[i].offset)),
                                                                           g_advancedSettings.m_videoItemSeparator).c_str()));
       break;
     case VIDEODB_TYPE_DATE:
-      conditions.emplace_back(PrepareSQL("c%02d='%s'", i, ((CDateTime*)(((char*)&details)+offsets[i].offset))->GetAsDBDate().c_str()));
+      conditions.emplace_back(PrepareSQL("c%02d='%s'", i, ((const CDateTime*)(((const char*)&details)+offsets[i].offset))->GetAsDBDate().c_str()));
       break;
     case VIDEODB_TYPE_DATETIME:
-      conditions.emplace_back(PrepareSQL("c%02d='%s'", i, ((CDateTime*)(((char*)&details)+offsets[i].offset))->GetAsDBDateTime().c_str()));
+      conditions.emplace_back(PrepareSQL("c%02d='%s'", i, ((const CDateTime*)(((const char*)&details)+offsets[i].offset))->GetAsDBDateTime().c_str()));
       break;
     case VIDEODB_TYPE_UNUSED: // Skip the unused field to avoid populating unused data
       continue;

From 9e0fc7394a5a604d74925647ed82866bd3d7cd2b Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Sat, 21 Jul 2018 11:00:00 +0200
Subject: [PATCH 18/18] [cleanup][windowing] silence casts away qualifiers
 warnings

---
 xbmc/windowing/X11/WinSystemX11.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/xbmc/windowing/X11/WinSystemX11.cpp b/xbmc/windowing/X11/WinSystemX11.cpp
index 0232274183fc..e2a874849d26 100644
--- a/xbmc/windowing/X11/WinSystemX11.cpp
+++ b/xbmc/windowing/X11/WinSystemX11.cpp
@@ -816,7 +816,7 @@ bool CWinSystemX11::SetWindow(int width, int height, bool fullscreen, const std:
 
       std::string titleString = CCompileInfo::GetAppName();
       std::string classString = titleString;
-      char *title = (char*)titleString.c_str();
+      char *title = const_cast<char*>(titleString.c_str());
 
       XStringListToTextProperty(&title, 1, &windowName);
       XStringListToTextProperty(&title, 1, &iconName);
@@ -827,8 +827,8 @@ bool CWinSystemX11::SetWindow(int width, int height, bool fullscreen, const std:
       wm_hints->flags = StateHint | IconPixmapHint;
 
       class_hints = XAllocClassHint();
-      class_hints->res_class = (char*)classString.c_str();
-      class_hints->res_name = (char*)classString.c_str();
+      class_hints->res_class = const_cast<char*>(classString.c_str());
+      class_hints->res_name = const_cast<char*>(classString.c_str());
 
       XSetWMProperties(m_dpy, m_mainWindow, &windowName, &iconName,
                             NULL, 0, NULL, wm_hints,
