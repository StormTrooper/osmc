From 6f32f4151c3280743b75cc8069d3487dc65267cc Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Fri, 7 Jun 2019 12:22:19 +0200
Subject: [PATCH] [cmake] pass all CPPFLAGS to libcpluff configure

---
 cmake/modules/FindCpluff.cmake | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/cmake/modules/FindCpluff.cmake b/cmake/modules/FindCpluff.cmake
index 9e29e1736cd3..87f4dec3ea88 100644
--- a/cmake/modules/FindCpluff.cmake
+++ b/cmake/modules/FindCpluff.cmake
@@ -12,15 +12,10 @@ if(CORE_SYSTEM_NAME MATCHES windows)
   set(CPLUFF_LIBRARIES $<TARGET_FILE:libcpluff> ${EXPAT_LIBRARIES})
 else()
   string(REPLACE ";" " " defines "${CMAKE_C_FLAGS} ${SYSTEM_DEFINES} -I${EXPAT_INCLUDE_DIR}")
+  string(REPLACE ";" " " cppflags "${CMAKE_CPP_FLAGS}")
   get_filename_component(expat_dir ${EXPAT_LIBRARY} DIRECTORY)
   set(ldflags "-L${expat_dir}")
 
-  # iOS: Without specifying -arch, configure tries to use /bin/cpp as C-preprocessor
-  # http://stackoverflow.com/questions/38836754/cant-cross-compile-c-library-for-arm-ios
-  if(CORE_SYSTEM_NAME STREQUAL ios)
-    set(cppflags "-arch ${CPU}")
-  endif()
-
   ExternalProject_Add(libcpluff SOURCE_DIR ${CMAKE_SOURCE_DIR}/lib/cpluff
                       BUILD_IN_SOURCE 1
                       PREFIX ${CORE_BUILD_DIR}/cpluff
