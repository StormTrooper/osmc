From 68677eebe4c787ba67e6ec7d8bffcff2f2925d27 Mon Sep 17 00:00:00 2001
From: David Bridson <david@bridson.co.uk>
Date: Sun, 28 Apr 2019 19:18:39 +0100
Subject: [PATCH] Simplify some boolean expressions in RetroPlayer

---
 .../buffers/RenderBufferPoolOpenGL.cpp        |  5 +----
 .../buffers/RenderBufferPoolOpenGLES.cpp      |  5 +----
 .../VideoRenderers/RPBaseRenderer.cpp         | 10 ++-------
 .../VideoRenderers/RPRendererGuiTexture.cpp   | 18 +++++----------
 .../VideoRenderers/RPRendererOpenGL.cpp       | 22 +++++--------------
 .../VideoRenderers/RPRendererOpenGLES.cpp     | 22 +++++--------------
 6 files changed, 21 insertions(+), 61 deletions(-)

diff --git a/xbmc/cores/RetroPlayer/buffers/RenderBufferPoolOpenGL.cpp b/xbmc/cores/RetroPlayer/buffers/RenderBufferPoolOpenGL.cpp
index b774c91ab3d5..3ef9356b7be3 100644
--- a/xbmc/cores/RetroPlayer/buffers/RenderBufferPoolOpenGL.cpp
+++ b/xbmc/cores/RetroPlayer/buffers/RenderBufferPoolOpenGL.cpp
@@ -18,10 +18,7 @@ using namespace RETRO;
 
 bool CRenderBufferPoolOpenGL::IsCompatible(const CRenderVideoSettings &renderSettings) const
 {
-  if (!CRPRendererOpenGL::SupportsScalingMethod(renderSettings.GetScalingMethod()))
-    return false;
-
-  return true;
+  return CRPRendererOpenGL::SupportsScalingMethod(renderSettings.GetScalingMethod());
 }
 
 IRenderBuffer *CRenderBufferPoolOpenGL::CreateRenderBuffer(void *header /* = nullptr */)
diff --git a/xbmc/cores/RetroPlayer/buffers/RenderBufferPoolOpenGLES.cpp b/xbmc/cores/RetroPlayer/buffers/RenderBufferPoolOpenGLES.cpp
index e90a55bdd264..3e9c763ddfe0 100644
--- a/xbmc/cores/RetroPlayer/buffers/RenderBufferPoolOpenGLES.cpp
+++ b/xbmc/cores/RetroPlayer/buffers/RenderBufferPoolOpenGLES.cpp
@@ -23,10 +23,7 @@ CRenderBufferPoolOpenGLES::CRenderBufferPoolOpenGLES(CRenderContext &context)
 
 bool CRenderBufferPoolOpenGLES::IsCompatible(const CRenderVideoSettings &renderSettings) const
 {
-  if (!CRPRendererOpenGLES::SupportsScalingMethod(renderSettings.GetScalingMethod()))
-    return false;
-
-  return true;
+  return CRPRendererOpenGLES::SupportsScalingMethod(renderSettings.GetScalingMethod());
 }
 
 IRenderBuffer *CRenderBufferPoolOpenGLES::CreateRenderBuffer(void *header /* = nullptr */)
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp
index 48535180cbe6..9295d85107ef 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp
@@ -36,10 +36,7 @@ CRPBaseRenderer::~CRPBaseRenderer()
 
 bool CRPBaseRenderer::IsCompatible(const CRenderVideoSettings &settings) const
 {
-  if (!m_bufferPool->IsCompatible(settings))
-    return false;
-
-  return true;
+  return m_bufferPool->IsCompatible(settings);
 }
 
 bool CRPBaseRenderer::Configure(AVPixelFormat format)
@@ -70,10 +67,7 @@ void CRPBaseRenderer::FrameMove()
 
 bool CRPBaseRenderer::IsVisible() const
 {
-  if (m_renderFrameCount <= m_lastRender + VISIBLE_DURATION_FRAME_COUNT)
-    return true;
-
-  return false;
+  return m_renderFrameCount <= m_lastRender + VISIBLE_DURATION_FRAME_COUNT;
 }
 
 void CRPBaseRenderer::SetBuffer(IRenderBuffer *buffer)
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererGuiTexture.cpp b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererGuiTexture.cpp
index 5485358cade1..01f30710daee 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererGuiTexture.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererGuiTexture.cpp
@@ -53,10 +53,7 @@ CRenderBufferPoolGuiTexture::CRenderBufferPoolGuiTexture(SCALINGMETHOD scalingMe
 
 bool CRenderBufferPoolGuiTexture::IsCompatible(const CRenderVideoSettings &renderSettings) const
 {
-  if (renderSettings.GetScalingMethod() != m_scalingMethod)
-    return false;
-
-  return true;
+  return renderSettings.GetScalingMethod() == m_scalingMethod;
 }
 
 IRenderBuffer *CRenderBufferPoolGuiTexture::CreateRenderBuffer(void *header /* = nullptr */)
@@ -73,15 +70,10 @@ CRPRendererGuiTexture::CRPRendererGuiTexture(const CRenderSettings &renderSettin
 
 bool CRPRendererGuiTexture::Supports(RENDERFEATURE feature) const
 {
-  if (feature == RENDERFEATURE::STRETCH         ||
-      feature == RENDERFEATURE::ZOOM            ||
-      feature == RENDERFEATURE::PIXEL_RATIO     ||
-      feature == RENDERFEATURE::ROTATION)
-  {
-    return true;
-  }
-
-  return false;
+  return feature == RENDERFEATURE::STRETCH         ||
+         feature == RENDERFEATURE::ZOOM            ||
+         feature == RENDERFEATURE::PIXEL_RATIO     ||
+         feature == RENDERFEATURE::ROTATION;
 }
 
 void CRPRendererGuiTexture::RenderInternal(bool clear, uint8_t alpha)
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.cpp b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.cpp
index 6bb90b1887da..8e9170444039 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.cpp
@@ -127,26 +127,16 @@ void CRPRendererOpenGL::FlushInternal()
 
 bool CRPRendererOpenGL::Supports(RENDERFEATURE feature) const
 {
-  if (feature == RENDERFEATURE::STRETCH         ||
-      feature == RENDERFEATURE::ZOOM            ||
-      feature == RENDERFEATURE::PIXEL_RATIO     ||
-      feature == RENDERFEATURE::ROTATION)
-  {
-    return true;
-  }
-
-  return false;
+  return feature == RENDERFEATURE::STRETCH         ||
+         feature == RENDERFEATURE::ZOOM            ||
+         feature == RENDERFEATURE::PIXEL_RATIO     ||
+         feature == RENDERFEATURE::ROTATION;
 }
 
 bool CRPRendererOpenGL::SupportsScalingMethod(SCALINGMETHOD method)
 {
-  if (method == SCALINGMETHOD::NEAREST ||
-      method == SCALINGMETHOD::LINEAR)
-  {
-    return true;
-  }
-
-  return false;
+  return method == SCALINGMETHOD::NEAREST ||
+         method == SCALINGMETHOD::LINEAR;
 }
 
 void CRPRendererOpenGL::ClearBackBuffer()
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp
index a613f7674af1..057a00541fab 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp
@@ -92,26 +92,16 @@ void CRPRendererOpenGLES::FlushInternal()
 
 bool CRPRendererOpenGLES::Supports(RENDERFEATURE feature) const
 {
-  if (feature == RENDERFEATURE::STRETCH         ||
-      feature == RENDERFEATURE::ZOOM            ||
-      feature == RENDERFEATURE::PIXEL_RATIO     ||
-      feature == RENDERFEATURE::ROTATION)
-  {
-    return true;
-  }
-
-  return false;
+  return feature == RENDERFEATURE::STRETCH         ||
+         feature == RENDERFEATURE::ZOOM            ||
+         feature == RENDERFEATURE::PIXEL_RATIO     ||
+         feature == RENDERFEATURE::ROTATION;
 }
 
 bool CRPRendererOpenGLES::SupportsScalingMethod(SCALINGMETHOD method)
 {
-  if (method == SCALINGMETHOD::NEAREST ||
-      method == SCALINGMETHOD::LINEAR)
-  {
-    return true;
-  }
-
-  return false;
+  return method == SCALINGMETHOD::NEAREST ||
+         method == SCALINGMETHOD::LINEAR;
 }
 
 void CRPRendererOpenGLES::ClearBackBuffer()
