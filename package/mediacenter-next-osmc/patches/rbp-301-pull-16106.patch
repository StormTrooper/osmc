From 202240cc05d214276792f10e7d06f07304e5d51b Mon Sep 17 00:00:00 2001
From: Marcel Bostrano <marcel.bostrano@gmail.com>
Date: Mon, 22 Apr 2019 12:25:40 +0300
Subject: [PATCH 1/2] [Subtitles] COverlayText::GetFontLayout() accepts an
 Opacity value instead of defaulting to alpha=1.0

---
 .../VideoRenderers/DebugRenderer.cpp          |  2 +-
 .../VideoRenderers/OverlayRenderer.cpp        |  1 +
 .../VideoRenderers/OverlayRendererGUI.cpp     | 27 ++++++++++++++-----
 .../VideoRenderers/OverlayRendererGUI.h       |  5 ++--
 4 files changed, 26 insertions(+), 9 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/DebugRenderer.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/DebugRenderer.cpp
index eed64d6a6167..96d8a1f3579f 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/DebugRenderer.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/DebugRenderer.cpp
@@ -109,7 +109,7 @@ void CDebugRenderer::CRenderer::Render(int idx)
 
     COverlayText *text = dynamic_cast<COverlayText*>(o);
     if (text)
-      text->PrepareRender("arial.ttf", 1, 16, 0, m_font, m_fontBorder, UTILS::COLOR::NONE, m_rv);
+      text->PrepareRender("arial.ttf", 1, 100, 16, 0, m_font, m_fontBorder, UTILS::COLOR::NONE, m_rv);
 
     RESOLUTION_INFO res = CServiceBroker::GetWinSystem()->GetGfxContext().GetResInfo(CServiceBroker::GetWinSystem()->GetGfxContext().GetVideoResolution());
 
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.cpp
index 7b40cfce2776..87f67c388073 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.cpp
@@ -189,6 +189,7 @@ void CRenderer::Render(int idx)
       
       text->PrepareRender(settings->GetString(CSettings::SETTING_SUBTITLES_FONT),
                           settings->GetInt(CSettings::SETTING_SUBTITLES_COLOR),
+                          100,
                           settings->GetInt(CSettings::SETTING_SUBTITLES_HEIGHT),
                           settings->GetInt(CSettings::SETTING_SUBTITLES_STYLE),
                           m_font, m_fontBorder, bgcolor, m_rv);
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGUI.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGUI.cpp
index 3cce7ceec421..75d0f65dd015 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGUI.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGUI.cpp
@@ -16,6 +16,7 @@
 #include "utils/URIUtils.h"
 #include "utils/StringUtils.h"
 #include "utils/log.h"
+#include "utils/ColorUtils.h"
 #include "guilib/GUIFontManager.h"
 #include "guilib/GUIFont.h"
 #include "guilib/GUITextLayout.h"
@@ -33,7 +34,7 @@ static UTILS::Color colors[8] = { UTILS::COLOR::YELLOW,
                                   UTILS::COLOR::LIGHTGREY,
                                   UTILS::COLOR::GREY };
 
-CGUITextLayout* COverlayText::GetFontLayout(const std::string &font, int color, int height, int style,
+CGUITextLayout* COverlayText::GetFontLayout(const std::string &font, int color, int opacity, int height, int style,
                                             const std::string &fontcache, const std::string &fontbordercache)
 {
   if (CUtil::IsUsingTTFSubtitles())
@@ -43,18 +44,31 @@ CGUITextLayout* COverlayText::GetFontLayout(const std::string &font, int color,
     if (!XFILE::CFile::Exists(font_path))
       font_path = URIUtils::AddFileToFolder("special://xbmc/media/Fonts/", font_file);
 
+    // Apply opacity to the color
+    UTILS::Color fgcolor = colors[color];
+    UTILS::Color bordercolor = UTILS::COLOR::BLACK;
+    if (opacity > 0 && opacity < 100)
+    {
+      fgcolor = ColorUtils::ChangeOpacity(fgcolor, opacity / 100.0f);
+      bordercolor = ColorUtils::ChangeOpacity(bordercolor, opacity / 100.0f);
+    }
+    else if (opacity == 0)
+    {
+      fgcolor = bordercolor = UTILS::COLOR::NONE;
+    }
+
     // We scale based on PAL4x3 - this at least ensures all sizing is constant across resolutions.
     RESOLUTION_INFO pal(720, 576, 0);
     CGUIFont *subtitle_font = g_fontManager.LoadTTF(fontcache
                                                     , font_path
-                                                    , colors[color]
+                                                    , fgcolor
                                                     , 0
                                                     , height
                                                     , style
                                                     , false, 1.0f, 1.0f, &pal, true);
     CGUIFont *border_font   = g_fontManager.LoadTTF(fontbordercache
                                                     , font_path
-                                                    , 0xFF000000
+                                                    , bordercolor
                                                     , 0
                                                     , height
                                                     , style
@@ -143,11 +157,11 @@ COverlayText::~COverlayText()
   delete m_layout;
 }
 
-void COverlayText::PrepareRender(const std::string &font, int color, int height, int style, const std::string &fontcache,
+void COverlayText::PrepareRender(const std::string &font, int color, int opacity, int height, int style, const std::string &fontcache,
                                  const std::string &fontbordercache, const UTILS::Color bgcolor, const CRect &rectView)
 {
   if (!m_layout)
-    m_layout = GetFontLayout(font, color, height, style, fontcache, fontbordercache);
+    m_layout = GetFontLayout(font, color, opacity, height, style, fontcache, fontbordercache);
 
   if (m_layout == nullptr)
   {
@@ -157,6 +171,7 @@ void COverlayText::PrepareRender(const std::string &font, int color, int height,
   
   m_rv = rectView;
   m_bgcolor = bgcolor;
+  m_bordercolor = ColorUtils::ChangeOpacity(UTILS::COLOR::BLACK, opacity / 100.0f);
   
   m_layout->Update(m_text, m_rv.Width() * 0.9f, false, true); // true to force LTR reading order (most Hebrew subs are this format)
   m_layout->GetTextExtent(m_width, m_height);
@@ -183,6 +198,6 @@ void COverlayText::Render(OVERLAY::SRenderState &state)
     CGUITexture::DrawQuad(backgroundbox, m_bgcolor);
   }
 
-  m_layout->RenderOutline(x, y, 0, 0xFF000000, XBFONT_CENTER_X, m_rv.Width());
+  m_layout->RenderOutline(x, y, 0, m_bordercolor, XBFONT_CENTER_X, m_rv.Width());
   CServiceBroker::GetWinSystem()->GetGfxContext().RemoveTransform();
 }
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGUI.h b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGUI.h
index fc9a30abe1b8..956c9c04d29b 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGUI.h
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRendererGUI.h
@@ -34,14 +34,15 @@ class COverlayText : public COverlay
   ~COverlayText() override;
   void Render(SRenderState& state) override;
   using COverlay::PrepareRender;
-  void PrepareRender(const std::string &font, int color, int height, int style, const std::string &fontcache,
+  void PrepareRender(const std::string &font, int color, int opacity, int height, int style, const std::string &fontcache,
                      const std::string &fontbordercache, const UTILS::Color bgcolor, const CRect &rectView);
-  virtual CGUITextLayout* GetFontLayout(const std::string &font, int color, int height, int style,
+  virtual CGUITextLayout* GetFontLayout(const std::string &font, int color, int opacity, int height, int style,
                                         const std::string &fontcache, const std::string &fontbordercache);
 
   CGUITextLayout* m_layout;
   std::string m_text;
   int m_subalign;
+  UTILS::Color m_bordercolor = UTILS::COLOR::BLACK;
   UTILS::Color m_bgcolor = UTILS::COLOR::NONE;
 protected:
   // target Rect for subtitles (updated on PrepareRender)

From 997e7bd094ca9c4419876eaf95e04f6350dd2ce2 Mon Sep 17 00:00:00 2001
From: Marcel Bostrano <marcel.bostrano@gmail.com>
Date: Mon, 22 Apr 2019 14:48:05 +0300
Subject: [PATCH 2/2] [Subtitles] Added a setting to change the subtitle
 opacity

---
 .../resource.language.en_gb/resources/strings.po   | 14 ++++++++++++--
 system/settings/settings.xml                       |  8 ++++++++
 .../VideoPlayer/VideoRenderers/OverlayRenderer.cpp |  4 +++-
 .../VideoPlayer/VideoRenderers/OverlayRenderer.h   |  2 ++
 4 files changed, 25 insertions(+), 3 deletions(-)

diff --git a/addons/resource.language.en_gb/resources/strings.po b/addons/resource.language.en_gb/resources/strings.po
index 68aafc375315..186e8dc0c8ee 100644
--- a/addons/resource.language.en_gb/resources/strings.po
+++ b/addons/resource.language.en_gb/resources/strings.po
@@ -3398,7 +3398,11 @@ msgctxt "#751"
 msgid "Removing source"
 msgstr ""
 
-#empty strings from id 752 to 753
+msgctxt "#752"
+msgid "Opacity"
+msgstr ""
+
+#empty string with id 753
 
 msgctxt "#754"
 msgid "Add program link"
@@ -19076,7 +19080,13 @@ msgctxt "#36294"
 msgid "When sorting music items by artist use sortname e.g. Parton, Dolly rather than name."
 msgstr ""
 
-#empty strings from id 36295 to 36301
+#. Description of setting with label #752 "Opacity"
+#: system/settings/settings.xml
+msgctxt "#36295"
+msgid "Set the the subtitle opacity."
+msgstr ""
+
+#empty strings from id 36296 to 36301
 
 #: system/settings/settings.xml
 msgctxt "#36302"
diff --git a/system/settings/settings.xml b/system/settings/settings.xml
index b5358c61e5d4..7441f8c80703 100755
--- a/system/settings/settings.xml
+++ b/system/settings/settings.xml
@@ -635,6 +635,14 @@
           </dependencies>
           <control type="list" format="string" />
         </setting>
+        <setting id="subtitles.opacity" type="integer" parent="subtitles.font" label="752" help="36295">
+          <level>3</level>
+          <default>100</default>
+          <dependencies>
+            <dependency type="enable" on="property" name="IsUsingTTFSubtitles" setting="subtitles.font" />
+          </dependencies>
+          <control type="slider" format="percentage" range="0,100" />
+        </setting>
         <setting id="subtitles.bgcolor" type="integer" parent="subtitles.font" label="745" help="36228">
           <level>3</level>
           <default>0</default> <!-- Black -->
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.cpp
index 87f67c388073..2cf59dc7e2b3 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.cpp
@@ -33,6 +33,8 @@
 
 using namespace OVERLAY;
 
+const std::string OVERLAY::SETTING_SUBTITLES_OPACITY = "subtitles.opacity";
+
 static UTILS::Color bgcolors[5] = { UTILS::COLOR::BLACK,
   UTILS::COLOR::YELLOW,
   UTILS::COLOR::WHITE,
@@ -189,7 +191,7 @@ void CRenderer::Render(int idx)
       
       text->PrepareRender(settings->GetString(CSettings::SETTING_SUBTITLES_FONT),
                           settings->GetInt(CSettings::SETTING_SUBTITLES_COLOR),
-                          100,
+                          settings->GetInt(SETTING_SUBTITLES_OPACITY),
                           settings->GetInt(CSettings::SETTING_SUBTITLES_HEIGHT),
                           settings->GetInt(CSettings::SETTING_SUBTITLES_STYLE),
                           m_font, m_fontBorder, bgcolor, m_rv);
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.h b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.h
index 52ef2133575e..c8fdc9ebb8a7 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.h
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/OverlayRenderer.h
@@ -106,4 +106,6 @@ namespace OVERLAY {
     std::string m_font, m_fontBorder;
     std::string m_stereomode;
   };
+
+  extern const std::string SETTING_SUBTITLES_OPACITY;
 }
