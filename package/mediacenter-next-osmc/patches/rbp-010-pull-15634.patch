From 699ca4056cdfbad9e71405b1ebd6aab5d57daf97 Mon Sep 17 00:00:00 2001
From: linknetx <forums@linknetmail.com>
Date: Thu, 28 Feb 2019 15:37:22 +0000
Subject: [PATCH] [PVR] - Recording edit context menu still visible when not
 supported by backend

---
 xbmc/pvr/PVRContextMenus.cpp                    |  5 +++--
 xbmc/pvr/PVRGUIActions.cpp                      |  5 +++++
 xbmc/pvr/PVRGUIActions.h                        |  7 +++++++
 .../dialogs/GUIDialogPVRRecordingSettings.cpp   | 17 +++++++++++++++++
 .../pvr/dialogs/GUIDialogPVRRecordingSettings.h |  1 +
 5 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/xbmc/pvr/PVRContextMenus.cpp b/xbmc/pvr/PVRContextMenus.cpp
index 84ae000194ad..efbf89ac2c3d 100644
--- a/xbmc/pvr/PVRContextMenus.cpp
+++ b/xbmc/pvr/PVRContextMenus.cpp
@@ -266,8 +266,9 @@ namespace PVR
     {
       const CPVRRecordingPtr recording(item.GetPVRRecordingInfoTag());
       if (recording && !recording->IsDeleted() && !recording->IsInProgress())
-        return true;
-
+      {
+        return CServiceBroker::GetPVRManager().GUIActions()->CanEditRecording(item);
+      }
       return false;
     }
 
diff --git a/xbmc/pvr/PVRGUIActions.cpp b/xbmc/pvr/PVRGUIActions.cpp
index 1ab35b086b50..70dcf9828901 100644
--- a/xbmc/pvr/PVRGUIActions.cpp
+++ b/xbmc/pvr/PVRGUIActions.cpp
@@ -916,6 +916,11 @@ namespace PVR
     return true;
   }
 
+  bool CPVRGUIActions::CanEditRecording(const CFileItem& item) const
+  {
+    return CGUIDialogPVRRecordingSettings::CanEditRecording(item);
+  }
+
   bool CPVRGUIActions::RenameRecording(const CFileItemPtr &item) const
   {
     const CPVRRecordingPtr recording(item->GetPVRRecordingInfoTag());
diff --git a/xbmc/pvr/PVRGUIActions.h b/xbmc/pvr/PVRGUIActions.h
index 52e34979a910..39a02dfdef46 100644
--- a/xbmc/pvr/PVRGUIActions.h
+++ b/xbmc/pvr/PVRGUIActions.h
@@ -202,6 +202,13 @@ namespace PVR
      */
     bool EditRecording(const CFileItemPtr &item) const;
 
+    /*!
+     * @brief Check if any recording settings can be edited.
+     * @param item containing the recording to edit.
+     * @return true on success, false otherwise.
+     */
+    bool CanEditRecording(const CFileItem& item) const;
+
     /*!
      * @brief Rename a recording, showing a text input dialog.
      * @param item containing a recording to rename.
diff --git a/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.cpp b/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.cpp
index dda5c9413b07..1680743cf079 100644
--- a/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.cpp
+++ b/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.cpp
@@ -94,6 +94,23 @@ void CGUIDialogPVRRecordingSettings::InitializeSettings()
     setting = AddList(group, SETTING_RECORDING_LIFETIME, 19083, SettingLevel::Basic, m_iLifetime, LifetimesFiller, 19083);
 }
 
+bool CGUIDialogPVRRecordingSettings::CanEditRecording(const CFileItem& item)
+{
+  if (!item.HasPVRRecordingInfoTag())
+    return false;
+
+  const std::shared_ptr<CPVRClient> client = CServiceBroker::GetPVRManager().GetClient(item.GetPVRRecordingInfoTag()->ClientID());
+
+  if (!client)
+    return false;
+
+  const CPVRClientCapabilities& capabilities = client->GetClientCapabilities();
+
+  return capabilities.SupportsRecordingsRename() ||
+         capabilities.SupportsRecordingsPlayCount() ||
+         capabilities.SupportsRecordingsLifetimeChange();
+}
+
 bool CGUIDialogPVRRecordingSettings::OnSettingChanging(std::shared_ptr<const CSetting> setting)
 {
   if (setting == nullptr)
diff --git a/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.h b/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.h
index ab7e7cd95ab4..33d67bda3186 100644
--- a/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.h
+++ b/xbmc/pvr/dialogs/GUIDialogPVRRecordingSettings.h
@@ -26,6 +26,7 @@ namespace PVR
     CGUIDialogPVRRecordingSettings();
 
     void SetRecording(const CPVRRecordingPtr &recording);
+    static bool CanEditRecording(const CFileItem& item);
 
   protected:
     // implementation of ISettingCallback
