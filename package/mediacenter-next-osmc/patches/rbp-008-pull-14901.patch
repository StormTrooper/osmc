From 8477dc1b1f22b91364b1ec58fde19474a2ad9dad Mon Sep 17 00:00:00 2001
From: Philipp Kerling <pkerling@casix.org>
Date: Sun, 18 Nov 2018 11:22:25 +0100
Subject: [PATCH] Actually destroy window system on application shutdown

Destruction of window system should not be left up to global destrcution
in unknown order.

Windowing owns LIRC (due to some reason) thread which otherwise might
try to write log messages when logging has already been shut down.
---
 xbmc/Application.cpp | 19 ++++++++-----------
 xbmc/Application.h   |  1 -
 2 files changed, 8 insertions(+), 12 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 24e9817d7bf7..715c4e616c34 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -700,14 +700,6 @@ bool CApplication::InitWindow(RESOLUTION res)
   return true;
 }
 
-bool CApplication::DestroyWindow()
-{
-  bool ret = CServiceBroker::GetWinSystem()->DestroyWindow();
-  CServiceBroker::UnregisterWinSystem();
-  m_pWinSystem.reset();
-  return ret;
-}
-
 bool CApplication::Initialize()
 {
 #if defined(HAS_DVD_DRIVE) && !defined(TARGET_WINDOWS) // somehow this throws an "unresolved external symbol" on win32
@@ -2443,10 +2435,7 @@ bool CApplication::Cleanup()
 
     CWinSystemBase *winSystem = CServiceBroker::GetWinSystem();
     if (winSystem)
-    {
       winSystem->DestroyWindow();
-      winSystem->DestroyWindowSystem();
-    }
 
     if (m_pGUI)
       m_pGUI->GetWindowManager().DestroyWindows();
@@ -2490,6 +2479,14 @@ bool CApplication::Cleanup()
       m_pGUI.reset();
     }
 
+    if (winSystem)
+    {
+      winSystem->DestroyWindowSystem();
+      CServiceBroker::UnregisterWinSystem();
+      winSystem = nullptr;
+      m_pWinSystem.reset();
+    }
+
     // Cleanup was called more than once on exit during my tests
     if (m_ServiceManager)
     {
diff --git a/xbmc/Application.h b/xbmc/Application.h
index 47c35504de92..30cf6e7d3246 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -150,7 +150,6 @@ friend class CAppInboundProtocol;
 
   bool CreateGUI();
   bool InitWindow(RESOLUTION res = RES_INVALID);
-  bool DestroyWindow();
   void StartServices();
   void StopServices();
 
