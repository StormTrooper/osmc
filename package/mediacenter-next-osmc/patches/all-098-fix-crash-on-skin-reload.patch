From 82814c0538397a1c86a3a207f9c216a3e4478bf8 Mon Sep 17 00:00:00 2001
From: Greg McCarthy <greg@gjmccarthy.co.uk>
Date: Thu, 11 Oct 2018 20:41:23 +0100
Subject: [PATCH] Update all-098

---
 xbmc/Application.cpp | 11 ++++++++++-
 xbmc/Application.h   |  3 +++
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 93b6cc3f18..be61e6c9b2 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -1143,6 +1143,11 @@ void CApplication::ReloadSkin(bool confirm/*=false*/)
   if (!g_SkinInfo || m_bInitializing)
     return; // Don't allow reload before skin is loaded by system
 
+  if (m_SkinReloading) {
+    CLog::Log(LOGINFO, "Suppressing skin reload as we are already doing so");
+    return;
+  }
+
   std::string oldSkin = g_SkinInfo->ID();
 
   CGUIMessage msg(GUI_MSG_LOAD_SKIN, -1, CServiceBroker::GetGUI()->GetWindowManager().GetActiveWindow());
@@ -1150,7 +1155,11 @@ void CApplication::ReloadSkin(bool confirm/*=false*/)
 
   const std::shared_ptr<CSettings> settings = CServiceBroker::GetSettingsComponent()->GetSettings();
   std::string newSkin = settings->GetString(CSettings::SETTING_LOOKANDFEEL_SKIN);
-  if (LoadSkin(newSkin))
+  m_SkinReloading = true;
+  bool skinLoaded = LoadSkin(newSkin);
+  m_SkinReloading = false;
+  
+  if (skinLoaded)
   {
     /* The Reset() or SetString() below will cause recursion, so the m_confirmSkinChange boolean is set so as to not prompt the
        user as to whether they want to keep the current skin. */
diff --git a/xbmc/Application.h b/xbmc/Application.h
index 38be160f4a..dfefec7b98 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -341,6 +341,9 @@ public:
 
   std::unique_ptr<CServiceManager> m_ServiceManager;
 
+  /*! \Ensure that we only handle one request to reload the skin at once */
+  bool m_SkinReloading;
+
   /*!
   \brief Locks calls from outside kodi (e.g. python) until framemove is processed.
   */
-- 
2.16.4

