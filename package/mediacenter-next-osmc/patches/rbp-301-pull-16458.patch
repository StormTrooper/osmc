From f6a9f844fcb4c2eb0f85f01edffc6ea77af463e0 Mon Sep 17 00:00:00 2001
From: Alwin Esch <alwin.esch@web.de>
Date: Thu, 8 Aug 2019 22:49:56 +0200
Subject: [PATCH 1/4] [cmake] prevent "@ADDON_DEPENDS@" with same several times

Before comes e.g.:
```
-- Added usage definition: ADDON_GLOBAL_VERSION_MAIN_USED
-- Added usage definition: ADDON_GLOBAL_VERSION_GUI_USED
-- Added usage definition: ADDON_GLOBAL_VERSION_GUI_USED <<<<<<<<<<<<<<<<<<<<<<< THIS HERE
-- Added usage definition: ADDON_INSTANCE_VERSION_SCREENSAVER_USED
```

or on addon.xml:

```xml
  <requires>
<import addon="kodi.binary.global.main" version="1.0.15"/>
<import addon="kodi.binary.global.gui" version="5.13.0"/>
<import addon="kodi.binary.global.gui" version="5.13.0"/> <<<<<<<<<<<<<<<<<<<<<<< THIS HERE
<import addon="kodi.binary.instance.screensaver" version="2.0.0"/></requires>
```

This adds a test to whether this definition has been previously set.
---
 cmake/scripts/common/AddonHelpers.cmake | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/cmake/scripts/common/AddonHelpers.cmake b/cmake/scripts/common/AddonHelpers.cmake
index b7b0e9c22270..e4e2f53ce6c3 100644
--- a/cmake/scripts/common/AddonHelpers.cmake
+++ b/cmake/scripts/common/AddonHelpers.cmake
@@ -127,10 +127,13 @@ macro (build_addon target prefix libs)
                   list(GET loop_var 1 include_name)
                   string(REGEX REPLACE "[<>\"]|kodi/" "" include_name "${include_name}")
                   if(include_name MATCHES ${depend_header})
-                    set(ADDON_DEPENDS "${ADDON_DEPENDS}\n<import addon=\"${${xml_entry_name}}\" minversion=\"${${depends_minver}}\" version=\"${${depends_ver}}\"/>")
-                    # Inform with them the addon header about used type
-                    add_definitions(-D${used_type_name})
-                    message(STATUS "Added usage definition: ${used_type_name}")
+                    get_directory_property(CURRENT_DEFS COMPILE_DEFINITIONS)
+                    if(NOT used_type_name IN_LIST CURRENT_DEFS)
+                      set(ADDON_DEPENDS "${ADDON_DEPENDS}\n<import addon=\"${${xml_entry_name}}\" minversion=\"${${depends_minver}}\" version=\"${${depends_ver}}\"/>")
+                      # Inform with them the addon header about used type, if not present before
+                      add_definitions(-D${used_type_name})
+                      message(STATUS "Added usage definition: ${used_type_name}")
+                    endif()
                     set(FOUND_HEADER_USAGE 1)
                   endif()
                 endif()

From f390a19524e053a4fc5b3a77b16e6807bd7bc61b Mon Sep 17 00:00:00 2001
From: Alwin Esch <alwin.esch@web.de>
Date: Tue, 28 Jan 2020 14:33:42 +0100
Subject: [PATCH 2/4] [cmake] fix check of " #include <...>" with spaces on
 begin

There are addons where added the include by `#ifdef` and spaces before
`#include`.

e.g. screensaver.asteroids with:
```cpp
\#ifndef WIN32
  #include <kodi/gui/gl/GL.h>
  #include <kodi/gui/gl/Shader.h>
  #include <glm/glm.hpp>
  #include <glm/gtc/type_ptr.hpp>
\#else
  #include <d3d11.h>
\#endif
```
---
 cmake/scripts/common/AddonHelpers.cmake | 21 ++++++++-------------
 1 file changed, 8 insertions(+), 13 deletions(-)

diff --git a/cmake/scripts/common/AddonHelpers.cmake b/cmake/scripts/common/AddonHelpers.cmake
index e4e2f53ce6c3..800836df7165 100644
--- a/cmake/scripts/common/AddonHelpers.cmake
+++ b/cmake/scripts/common/AddonHelpers.cmake
@@ -121,19 +121,14 @@ macro (build_addon target prefix libs)
             foreach(src_file ${USED_SOURCES})
               file(STRINGS ${src_file} BIN_ADDON_SRC_PARTS)
               foreach(loop_var ${BIN_ADDON_SRC_PARTS})
-                string(FIND "${loop_var}" "#include" matchres)
-                if("${matchres}" EQUAL 0)
-                  string(REPLACE " " ";" loop_var "${loop_var}")
-                  list(GET loop_var 1 include_name)
-                  string(REGEX REPLACE "[<>\"]|kodi/" "" include_name "${include_name}")
-                  if(include_name MATCHES ${depend_header})
-                    get_directory_property(CURRENT_DEFS COMPILE_DEFINITIONS)
-                    if(NOT used_type_name IN_LIST CURRENT_DEFS)
-                      set(ADDON_DEPENDS "${ADDON_DEPENDS}\n<import addon=\"${${xml_entry_name}}\" minversion=\"${${depends_minver}}\" version=\"${${depends_ver}}\"/>")
-                      # Inform with them the addon header about used type, if not present before
-                      add_definitions(-D${used_type_name})
-                      message(STATUS "Added usage definition: ${used_type_name}")
-                    endif()
+                string(REGEX MATCH "^[ \t]*#[ \t]*(include|import)[ \t]*[<\"](kodi\/)?(.+)[\">]" include_name "${loop_var}")
+                if(include_name AND CMAKE_MATCH_3 MATCHES ^${depend_header})
+                  get_directory_property(CURRENT_DEFS COMPILE_DEFINITIONS)
+                  if(NOT used_type_name IN_LIST CURRENT_DEFS)
+                    set(ADDON_DEPENDS "${ADDON_DEPENDS}\n<import addon=\"${${xml_entry_name}}\" minversion=\"${${depends_minver}}\" version=\"${${depends_ver}}\"/>")
+                    # Inform with them the addon header about used type, if not present before
+                    add_definitions(-D${used_type_name})
+                    message(STATUS "Added usage definition: ${used_type_name}")
                     set(FOUND_HEADER_USAGE 1)
                   endif()
                 endif()

From 593a53d429b8bd491f3f33dab0cf0b41efc4a4b1 Mon Sep 17 00:00:00 2001
From: Alwin Esch <alwin.esch@web.de>
Date: Tue, 28 Jan 2020 18:39:12 +0100
Subject: [PATCH 3/4] [cmake] add message to find easier the checks on log

---
 cmake/scripts/common/AddonHelpers.cmake | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/cmake/scripts/common/AddonHelpers.cmake b/cmake/scripts/common/AddonHelpers.cmake
index 800836df7165..438f0cc0bfe0 100644
--- a/cmake/scripts/common/AddonHelpers.cmake
+++ b/cmake/scripts/common/AddonHelpers.cmake
@@ -92,6 +92,7 @@ macro (build_addon target prefix libs)
       endforeach()
     endif()
 
+    message(STATUS "Addon dependency check ...")
     # Set defines used in addon.xml.in and read from versions.h to set add-on
     # version parts automatically
     file(STRINGS ${KODI_INCLUDE_DIR}/versions.h BIN_ADDON_PARTS)
@@ -128,7 +129,7 @@ macro (build_addon target prefix libs)
                     set(ADDON_DEPENDS "${ADDON_DEPENDS}\n<import addon=\"${${xml_entry_name}}\" minversion=\"${${depends_minver}}\" version=\"${${depends_ver}}\"/>")
                     # Inform with them the addon header about used type, if not present before
                     add_definitions(-D${used_type_name})
-                    message(STATUS "Added usage definition: ${used_type_name}")
+                    message(STATUS " - Added usage definition: ${used_type_name}")
                     set(FOUND_HEADER_USAGE 1)
                   endif()
                 endif()

From 4dc06293cb90fada447182a71dd72086f975763d Mon Sep 17 00:00:00 2001
From: Alwin Esch <alwin.esch@web.de>
Date: Thu, 30 Jan 2020 20:25:46 +0100
Subject: [PATCH 4/4] [cmake] show API version by addon dependency check

---
 cmake/scripts/common/AddonHelpers.cmake | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/cmake/scripts/common/AddonHelpers.cmake b/cmake/scripts/common/AddonHelpers.cmake
index 438f0cc0bfe0..c541ad702e77 100644
--- a/cmake/scripts/common/AddonHelpers.cmake
+++ b/cmake/scripts/common/AddonHelpers.cmake
@@ -129,7 +129,7 @@ macro (build_addon target prefix libs)
                     set(ADDON_DEPENDS "${ADDON_DEPENDS}\n<import addon=\"${${xml_entry_name}}\" minversion=\"${${depends_minver}}\" version=\"${${depends_ver}}\"/>")
                     # Inform with them the addon header about used type, if not present before
                     add_definitions(-D${used_type_name})
-                    message(STATUS " - Added usage definition: ${used_type_name}")
+                    message(STATUS " - Added API usage definition: ${used_type_name} (Version: \"${${depends_ver}}\", Min. Version: \"${${depends_minver}}\")")
                     set(FOUND_HEADER_USAGE 1)
                   endif()
                 endif()
