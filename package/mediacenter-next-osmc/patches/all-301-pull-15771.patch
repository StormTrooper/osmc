From 6087abacd6e61a6a65e3d2a75202d926b2f7bd44 Mon Sep 17 00:00:00 2001
From: Garrett Brown <themagnificentmrb@gmail.com>
Date: Mon, 18 Mar 2019 08:46:46 -0700
Subject: [PATCH 1/2] RetroPlayer: Move rendering calls to init/deinit methods

These new methods are intended to be called from the rendering thread, but
the constructor/destructor make no guarantees about where they are called
from.
---
 xbmc/cores/RetroPlayer/rendering/RPRenderManager.cpp   |  2 ++
 .../rendering/VideoRenderers/RPBaseRenderer.cpp        |  5 +++++
 .../rendering/VideoRenderers/RPBaseRenderer.h          |  2 ++
 .../rendering/VideoRenderers/RPRendererOpenGL.cpp      |  9 ++++++++-
 .../rendering/VideoRenderers/RPRendererOpenGL.h        |  2 ++
 .../rendering/VideoRenderers/RPRendererOpenGLES.cpp    | 10 +++++++++-
 .../rendering/VideoRenderers/RPRendererOpenGLES.h      |  2 ++
 7 files changed, 30 insertions(+), 2 deletions(-)

diff --git a/xbmc/cores/RetroPlayer/rendering/RPRenderManager.cpp b/xbmc/cores/RetroPlayer/rendering/RPRenderManager.cpp
index 8182dc7d782d..a32d425b7daa 100644
--- a/xbmc/cores/RetroPlayer/rendering/RPRenderManager.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/RPRenderManager.cpp
@@ -68,6 +68,8 @@ void CRPRenderManager::Deinitialize()
     buffer->Release();
   m_pendingBuffers.clear();
 
+  for (const auto &renderer : m_renderers)
+    renderer->Deinitiaize();
   m_renderers.clear();
 
   m_state = RENDER_STATE::UNCONFIGURED;
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp
index 48535180cbe6..7b6a4d5c7c97 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp
@@ -63,6 +63,11 @@ bool CRPBaseRenderer::Configure(AVPixelFormat format)
   return m_bConfigured;
 }
 
+void CRPBaseRenderer::Deinitiaize()
+{
+  void DeinitiaizeInternal();
+}
+
 void CRPBaseRenderer::FrameMove()
 {
   m_renderFrameCount++;
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.h b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.h
index d9d1f6282130..fde3721cd4db 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.h
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.h
@@ -41,6 +41,7 @@ namespace RETRO
 
     // Player functions
     bool Configure(AVPixelFormat format);
+    void Deinitiaize();
     void FrameMove();
     /*!
      * \brief Performs whatever necessary before rendering the frame
@@ -70,6 +71,7 @@ namespace RETRO
   protected:
     // Protected renderer interface
     virtual bool ConfigureInternal() { return true; }
+    virtual void DeinitializeInternal() { }
     virtual void RenderInternal(bool clear, uint8_t alpha) = 0;
     virtual void FlushInternal() { }
 
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.cpp b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.cpp
index 6bb90b1887da..ea0cf742fc92 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.cpp
@@ -41,7 +41,12 @@ CRPRendererOpenGL::CRPRendererOpenGL(const CRenderSettings &renderSettings, CRen
 {
   // Initialize CRPRendererOpenGL
   m_clearColour = m_context.UseLimitedColor() ? (16.0f / 0xff) : 0.0f;
+}
+
+CRPRendererOpenGL::~CRPRendererOpenGL() = default;
 
+bool CRPRendererOpenGL::ConfigureInternal()
+{
   // Set up main screen VAO/VBOs
   glGenVertexArrays(1, &m_mainVAO);
   glBindVertexArray(m_mainVAO);
@@ -79,9 +84,11 @@ CRPRendererOpenGL::CRPRendererOpenGL(const CRenderSettings &renderSettings, CRen
   glBindVertexArray(0);
   glBindBuffer(GL_ARRAY_BUFFER, 0);
   glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);
+
+  return true;
 }
 
-CRPRendererOpenGL::~CRPRendererOpenGL()
+void CRPRendererOpenGL::DeinitializeInternal()
 {
   glDeleteBuffers(1, &m_mainIndexVBO);
   glDeleteBuffers(1, &m_mainVertexVBO);
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.h b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.h
index 1f9c7736c180..6ebd4b81009a 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.h
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGL.h
@@ -56,6 +56,8 @@ namespace RETRO
     };
     
     // implementation of CRPBaseRenderer
+    bool ConfigureInternal() override;
+    void DeinitializeInternal() override;
     void RenderInternal(bool clear, uint8_t alpha) override;
     void FlushInternal() override;
 
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp
index a613f7674af1..bc705eef56c9 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.cpp
@@ -43,13 +43,21 @@ RenderBufferPoolVector CRendererFactoryOpenGLES::CreateBufferPools(CRenderContex
 
 CRPRendererOpenGLES::CRPRendererOpenGLES(const CRenderSettings &renderSettings, CRenderContext &context, std::shared_ptr<IRenderBufferPool> bufferPool) :
   CRPBaseRenderer(renderSettings, context, std::move(bufferPool))
+{
+}
+
+CRPRendererOpenGLES::~CRPRendererOpenGLES() = default;
+
+bool CRPRendererOpenGLES::ConfigureInternal()
 {
   glGenBuffers(1, &m_mainIndexVBO);
   glGenBuffers(1, &m_mainVertexVBO);
   glGenBuffers(1, &m_blackbarsVertexVBO);
+
+  return true;
 }
 
-CRPRendererOpenGLES::~CRPRendererOpenGLES()
+void CRPRendererOpenGLES::DeinitializeInternal()
 {
   glDeleteBuffers(1, &m_mainIndexVBO);
   glDeleteBuffers(1, &m_mainVertexVBO);
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.h b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.h
index 317c1b268395..95addd114a62 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.h
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPRendererOpenGLES.h
@@ -49,6 +49,8 @@ namespace RETRO
 
   protected:
     // implementation of CRPBaseRenderer
+    bool ConfigureInternal() override;
+    void DeinitializeInternal() override;
     void RenderInternal(bool clear, uint8_t alpha) override;
     void FlushInternal() override;
 

From d1853ad986b4bf9cb3e26cffff822fa7b7a22499 Mon Sep 17 00:00:00 2001
From: Garrett Brown <themagnificentmrb@gmail.com>
Date: Mon, 18 Mar 2019 19:55:41 -0700
Subject: [PATCH 2/2] fixup! RetroPlayer: Move rendering calls to init/deinit
 methods

---
 xbmc/cores/RetroPlayer/rendering/RPRenderManager.cpp          | 2 +-
 .../RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp   | 4 ++--
 .../RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.h     | 2 +-
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/xbmc/cores/RetroPlayer/rendering/RPRenderManager.cpp b/xbmc/cores/RetroPlayer/rendering/RPRenderManager.cpp
index a32d425b7daa..297e6efc35de 100644
--- a/xbmc/cores/RetroPlayer/rendering/RPRenderManager.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/RPRenderManager.cpp
@@ -69,7 +69,7 @@ void CRPRenderManager::Deinitialize()
   m_pendingBuffers.clear();
 
   for (const auto &renderer : m_renderers)
-    renderer->Deinitiaize();
+    renderer->Deinitialize();
   m_renderers.clear();
 
   m_state = RENDER_STATE::UNCONFIGURED;
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp
index 7b6a4d5c7c97..b50b03d63743 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.cpp
@@ -63,9 +63,9 @@ bool CRPBaseRenderer::Configure(AVPixelFormat format)
   return m_bConfigured;
 }
 
-void CRPBaseRenderer::Deinitiaize()
+void CRPBaseRenderer::Deinitialize()
 {
-  void DeinitiaizeInternal();
+  void DeinitializeInternal();
 }
 
 void CRPBaseRenderer::FrameMove()
diff --git a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.h b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.h
index fde3721cd4db..2f0de3a73e7f 100644
--- a/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.h
+++ b/xbmc/cores/RetroPlayer/rendering/VideoRenderers/RPBaseRenderer.h
@@ -41,7 +41,7 @@ namespace RETRO
 
     // Player functions
     bool Configure(AVPixelFormat format);
-    void Deinitiaize();
+    void Deinitialize();
     void FrameMove();
     /*!
      * \brief Performs whatever necessary before rendering the frame
