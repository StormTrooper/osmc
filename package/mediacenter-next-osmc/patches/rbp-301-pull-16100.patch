From 968eedde0fa41c9e42be6d4a308f2a304d221d5e Mon Sep 17 00:00:00 2001
From: David Bridson <david@bridson.co.uk>
Date: Mon, 6 May 2019 14:51:40 +0100
Subject: [PATCH] Simplify boolean expressions 2

---
 xbmc/DbUrl.cpp                                   |  5 +----
 xbmc/TextureCache.cpp                            |  7 ++-----
 xbmc/Util.cpp                                    | 13 +++----------
 .../AudioEngine/Engines/ActiveAE/ActiveAE.cpp    | 16 +++++-----------
 .../Engines/ActiveAE/ActiveAEFilter.cpp          |  5 +----
 .../Engines/ActiveAE/ActiveAESink.cpp            |  5 +----
 6 files changed, 13 insertions(+), 38 deletions(-)

diff --git a/xbmc/DbUrl.cpp b/xbmc/DbUrl.cpp
index 796305e99e18..93d5ddadfbd5 100644
--- a/xbmc/DbUrl.cpp
+++ b/xbmc/DbUrl.cpp
@@ -121,10 +121,7 @@ void CDbUrl::RemoveOption(const std::string &key)
 
 bool CDbUrl::validateOption(const std::string &key, const CVariant &value)
 {
-  if (key.empty())
-    return false;
-
-  return true;
+  return !key.empty();
 }
 
 void CDbUrl::updateOptions()
diff --git a/xbmc/TextureCache.cpp b/xbmc/TextureCache.cpp
index aebac145b182..f53d36592c21 100644
--- a/xbmc/TextureCache.cpp
+++ b/xbmc/TextureCache.cpp
@@ -58,14 +58,11 @@ bool CTextureCache::IsCachedImage(const std::string &url) const
 
   const std::shared_ptr<CProfileManager> profileManager = CServiceBroker::GetSettingsComponent()->GetProfileManager();
 
-  if (URIUtils::PathHasParent(url, "special://skin", true) ||
+  return URIUtils::PathHasParent(url, "special://skin", true) ||
       URIUtils::PathHasParent(url, "special://temp", true) ||
       URIUtils::PathHasParent(url, "resource://", true) ||
       URIUtils::PathHasParent(url, "androidapp://", true)   ||
-      URIUtils::PathHasParent(url, profileManager->GetThumbnailsFolder(), true))
-    return true;
-
-  return false;
+      URIUtils::PathHasParent(url, profileManager->GetThumbnailsFolder(), true);
 }
 
 bool CTextureCache::HasCachedImage(const std::string &url)
diff --git a/xbmc/Util.cpp b/xbmc/Util.cpp
index d6a47237ef31..7ebc9ba5e3f8 100644
--- a/xbmc/Util.cpp
+++ b/xbmc/Util.cpp
@@ -515,10 +515,7 @@ bool CUtil::IsPVR(const std::string& strFile)
 
 bool CUtil::IsLiveTV(const std::string& strFile)
 {
-  if (StringUtils::StartsWithNoCase(strFile, "pvr://channels"))
-    return true;
-
-  return false;
+  return StringUtils::StartsWithNoCase(strFile, "pvr://channels");
 }
 
 bool CUtil::IsTVRecording(const std::string& strFile)
@@ -929,8 +926,7 @@ bool CUtil::CreateDirectoryEx(const std::string& strPath)
   }
 
   // was the final destination directory successfully created ?
-  if (!CDirectory::Exists(strPath)) return false;
-  return true;
+  return CDirectory::Exists(strPath);
 }
 
 std::string CUtil::MakeLegalFileName(const std::string &strFile, int LegalType)
@@ -1541,10 +1537,7 @@ bool CUtil::SupportsWriteFileOperations(const std::string& strPath)
 
 bool CUtil::SupportsReadFileOperations(const std::string& strPath)
 {
-  if (URIUtils::IsVideoDb(strPath))
-    return false;
-
-  return true;
+  return !URIUtils::IsVideoDb(strPath);
 }
 
 std::string CUtil::GetDefaultFolderThumb(const std::string &folderThumb)
diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.cpp b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.cpp
index 1c3195d1de47..917771b27b7e 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.cpp
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.cpp
@@ -640,7 +640,7 @@ void CActiveAE::StateMachine(int signal, Protocol *port, Message *msg)
         case CActiveAEControlProtocol::PAUSESTREAM:
           CActiveAEStream *stream;
           stream = *(CActiveAEStream**)msg->data;
-          if (stream->m_paused != true && m_streams.size() == 1)
+          if (!stream->m_paused && m_streams.size() == 1)
           {
             FlushEngine();
             streaming = false;
@@ -1716,12 +1716,9 @@ bool CActiveAE::NeedReconfigureBuffers()
   AEAudioFormat newFormat = GetInputFormat();
   ApplySettingsToFormat(newFormat, m_settings);
 
-  if (newFormat.m_dataFormat != m_sinkRequestFormat.m_dataFormat ||
+  return newFormat.m_dataFormat != m_sinkRequestFormat.m_dataFormat ||
       newFormat.m_channelLayout != m_sinkRequestFormat.m_channelLayout ||
-      newFormat.m_sampleRate != m_sinkRequestFormat.m_sampleRate)
-    return true;
-
-  return false;
+      newFormat.m_sampleRate != m_sinkRequestFormat.m_sampleRate;
 }
 
 bool CActiveAE::NeedReconfigureSink()
@@ -1733,12 +1730,9 @@ bool CActiveAE::NeedReconfigureSink()
   std::string driver;
   CAESinkFactory::ParseDevice(device, driver);
 
-  if (!CompareFormat(newFormat, m_sinkFormat) ||
+  return !CompareFormat(newFormat, m_sinkFormat) ||
       m_currDevice.compare(device) != 0 ||
-      m_settings.driver.compare(driver) != 0)
-    return true;
-
-  return false;
+      m_settings.driver.compare(driver) != 0;
 }
 
 bool CActiveAE::InitSink()
diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.cpp b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.cpp
index f6cf84cf700e..a58bfacfecd9 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.cpp
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEFilter.cpp
@@ -326,10 +326,7 @@ bool CActiveAEFilter::NeedData() const
 
 bool CActiveAEFilter::IsActive() const
 {
-  if (m_pFilterGraph)
-    return true;
-  else
-    return false;
+  return m_pFilterGraph != nullptr;
 }
 
 int CActiveAEFilter::GetBufferedSamples() const
diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAESink.cpp b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAESink.cpp
index bd59d1c758e2..4ae8db087dac 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAESink.cpp
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAESink.cpp
@@ -172,10 +172,7 @@ bool CActiveAESink::SupportsFormat(const std::string &device, AEAudioFormat &for
           {
             AESampleRateList::iterator itt4;
             itt4 = find(info.m_sampleRates.begin(), info.m_sampleRates.end(), samplerate);
-            if (itt4 != info.m_sampleRates.end())
-              return true;
-            else
-              return false;
+            return itt4 != info.m_sampleRates.end();
           }
           else // format is not existent
           {
