From 37fefbc9341b8264d1a71d11f5ab9868a90acccc Mon Sep 17 00:00:00 2001
From: Jakob Linskeseder <jakob.linskeseder@gmail.com>
Date: Tue, 5 May 2020 17:56:34 +0200
Subject: [PATCH] Remove unused CI integrations

While contributing to Kodi, I was afraid to break the
TravisCI config. Turns out this was replaced by Jenkins.
In order not to confuse future contributors, these dead
CI integrations should be removed.

* `.travis.yml`:
  TravisCI was last used 4 years ago and originally setup
  by Martijn Kaijser: https://travis-ci.org/github/xbmc/xbmc
* `appveyor.yml`:
  AppVeyor was last used 4 years ago and originally setup
  by Martijn Kaijser: https://ci.appveyor.com/project/MartijnKaijser/xbmc
---
 .travis.yml  | 132 ---------------------------------------------------
 appveyor.yml | 118 ---------------------------------------------
 2 files changed, 250 deletions(-)
 delete mode 100644 .travis.yml
 delete mode 100644 appveyor.yml

diff --git a/.travis.yml b/.travis.yml
deleted file mode 100644
index fb9e08307f3c..000000000000
--- a/.travis.yml
+++ /dev/null
@@ -1,132 +0,0 @@
-# Kodi's travis-ci.org integration file
-
-# TODO:
-# integrate with slack
-# make it perfect... or not ;-r
-
-
-language: cpp
-
-# Define the build matrix
-#
-# Travis defaults to building on Ubuntu Precise when building on Linux. We need Trusty in order to get up
-# to date versions of cmake and g++.
-#
-os: linux
-dist: xenial
-sudo: required
-compiler:
-  - gcc
-  - clang
-
-env:
-  - BUILD=Kodi TOOLS=CMake
-#  - ADDONS=audiodecoder
-#  - ADDONS=audioencoder
-#  - ADDONS=pvr
-#  - ADDONS=screensaver
-#  - ADDONS=visualization
-
-matrix:
-  fast_finish: true
-  allow_failures:
-#    - env: ADDONS=audiodecoder
-#    - env: ADDONS=audioencoder
-#    - env: ADDONS=pvr
-#    - env: ADDONS=screensaver
-#    - env: ADDONS=visualization
-
-# Prepare system
-#
-# Prepare the system to install prerequisites or dependencies
-#
-before_install:
-# Prune non-root Python from PATH. Solves https://github.com/travis-ci/travis-ci/issues/4948
-# see: https://github.com/travis-ci/travis-ci/issues/5326
-  - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
-
-# Linux
-#
-# Install team-xbmc/xbmc-ppa-build-depends for some dependencies and ppa:wsnipex/vaapi for libda-dev 1.6.0.
-# Stupid libda-dev 1.3.0 does not work on Trusty.
-
-  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" ]]; then
-      sudo add-apt-repository -y ppa:team-xbmc/xbmc-ppa-build-depends &&
-      sudo add-apt-repository -y ppa:wsnipex/vaapi &&
-      sudo add-apt-repository -y ppa:pulse-eight/libcec &&
-      sudo apt-get update -qq;
-    fi
-
-# Install dependencies
-#
-# Install any prerequisites or dependencies necessary to run our builds
-#
-install:
-
-# Linux dependencies
-#
-  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" ]]; then
-      sudo apt-get install -qq automake autopoint build-essential cmake curl default-jre gawk gdb gdc
-      gettext git-core gperf libasound2-dev libass-dev libbluray-dev libbz2-dev libcap-dev libcdio-dev libcec4-dev libcrossguid-dev libcurl3
-      libcurl4-openssl-dev libdbus-1-dev libegl1-mesa-dev libfmt3-dev libfontconfig-dev libfreetype6-dev libfribidi-dev libfstrcmp-dev libgif-dev libgl1-mesa-dev
-      libglu1-mesa-dev libiso9660-dev libjpeg-dev liblcms2-dev libltdl-dev liblzo2-dev libmicrohttpd-dev libmysqlclient-dev libnfs-dev
-      libpcre3-dev libplist-dev libpng-dev libpulse-dev libsmbclient-dev libspdlog-dev libsqlite3-dev
-      libssl-dev libtag1-dev libtinyxml-dev libtool libudev-dev libusb-dev libva-dev libvdpau-dev
-      libxml2-dev libxmu-dev libxrandr-dev libxrender-dev libxslt1-dev libxt-dev mesa-utils
-      nasm ninja-build pmount python-dev python-imaging python-pip3 python-sqlite rapidjson-dev swig unzip uuid-dev yasm zip zlib1g-dev;
-    fi
-  # We can't use the `meson` distro-package, since dav1d requires at least meson >= 0.47.0.
-  # Ubuntu 18.04 ships the outdated 0.45.1 version. So we have to install it via pip.
-  - pip3 install meson
-
-# Prepare builds
-#
-before_script:
-
-# Linux
-#
-  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" ]]; then
-      ulimit -c unlimited -S;
-      mkdir $TRAVIS_BUILD_DIR/build &&
-      cd $TRAVIS_BUILD_DIR/build;
-    fi
-  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" && "$CXX" == "g++" ]]; then
-      cmake -DCMAKE_BUILD_TYPE=Debug ..;
-    fi
-  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" && "$CXX" == "clang++" ]]; then
-      cmake -DCMAKE_CXX_FLAGS="-Qunused-arguments" ..;
-    fi
-  - if [[ "$BUILD" != "Kodi" ]] && [[ "$ADDONS" == "audiodecoder" || "$ADDONS" == "audioencoder" ||
-          "$ADDONS" == "pvr" || "$ADDONS" == "screensaver" || "$ADDONS" == "visualization" ]]; then
-      cd $TRAVIS_BUILD_DIR/cmake/addons &&
-      mkdir -p build &&
-      cd build/ &&
-      cmake ../bootstrap -DCMAKE_BUILD_TYPE=Debug &&
-      make -j4;
-    fi
-
-# Actually build
-#
-script:
-  - if [[ "$BUILD" == "Kodi" ]]; then
-      make -j4 &&
-      make check;
-    fi
-  - if [[ "$BUILD" != "Kodi" ]] && [[ "$ADDONS" == "audiodecoder" || "$ADDONS" == "audioencoder" ||
-          "$ADDONS" == "pvr" || "$ADDONS" == "screensaver" || "$ADDONS" == "visualization" ]]; then
-      cd $TRAVIS_BUILD_DIR/ &&
-      mkdir -p build &&
-      cmake -DADDONS_TO_BUILD="$ADDONS".* -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../addons $TRAVIS_BUILD_DIR/cmake/addons &&
-      make -j4;
-    fi
-
-after_failure:
-  - COREFILE=$(find . -maxdepth 1 -name "core*" | head -n 1)
-  - if [[ -f "$COREFILE" ]]; then
-      gdb -c "$COREFILE" kodi-test -ex "thread apply all bt" -ex "set pagination 0" -batch;
-    fi
-
-# Disable annoying emails
-
-notifications:
-  email: false
diff --git a/appveyor.yml b/appveyor.yml
deleted file mode 100644
index b278da8d6b3e..000000000000
--- a/appveyor.yml
+++ /dev/null
@@ -1,118 +0,0 @@
-os: Visual Studio 2015
-
-shallow_clone: true
-
-environment:
-  CONFIG: Release
-  matrix:
-    - BUILD: Kodi
-    # - ADDONS: audiodecoder
-    # - ADDONS: audioencoder
-    # - ADDONS: pvr
-    # - ADDONS: screensaver
-    # - ADDONS: visualization
-
-init:
-  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
-
-install:
-  - SET PATH=C:\Program Files (x86)\CMake\bin;C:\msys64\bin;C:\msys64\usr\bin;%PATH%
-  - bash -lc "pacman --needed --noconfirm -Sy"
-  - mklink /j %APPVEYOR_BUILD_FOLDER%\project\BuildDependencies\msys64 C:\msys64
-
-build_script:
-  # Setup Visual Studio compiler environment
-  - ps: $ErrorActionPreference= 'silentlycontinue'
-
-  # Setup Visual Studio compiler environment
-  - call "%VS140COMNTOOLS%..\..\VC\bin\vcvars32.bat"
-
-  #
-  # Build Kodi
-  #
-  - ps: |
-      if ($env:BUILD -eq "Kodi") {
-        # Download dependencies
-        cd $env:APPVEYOR_BUILD_FOLDER\tools\buildsteps\windows\win32
-        & .\download-dependencies.bat
-
-        # We are using AppVeyor's already installed msys64 environment,
-        # no need to install msys/mingw environment.
-
-        # Download precompiled mingw32 libraries
-        # To run make-mingwlibs.bat on AppVeyor takes too long,
-        # we must use precompiled libs to speed up build
-        bash -c "wget -O - http://repo.msys2.org/mingw/i686/mingw-w64-i686-ffmpeg-3.3-1-any.pkg.tar.xz | tar xJv"
-        bash -c "wget -O - http://repo.msys2.org/mingw/i686/mingw-w64-i686-libdvdcss-1.4.0-1-any.pkg.tar.xz | tar xJv"
-        bash -c "wget -O - http://repo.msys2.org/mingw/i686/mingw-w64-i686-libdvdnav-5.0.3-1-any.pkg.tar.xz | tar xJv"
-        bash -c "wget -O - http://repo.msys2.org/mingw/i686/mingw-w64-i686-libdvdread-5.0.3-1-any.pkg.tar.xz | tar xJv"
-        # Rename all precompiled lib*.dll.a -> *.lib, so MSVC will find them
-        Get-ChildItem mingw32\lib\lib*.dll.a | %{
-          $new_name = $_.Name.SubString(3) -replace ".dll.a", ".lib"
-          $new_fullname = Join-Path $_.DirectoryName $new_name
-          Rename-Item $_.FullName $new_fullname
-        }
-        # Copy all libs and includes under Kodi's dependencies folder
-        xcopy /s /y mingw32\*.* .
-        xcopy /s /y mingw32\bin\*.dll $env:APPVEYOR_BUILD_FOLDER\system\
-        # Build
-        mkdir $env:APPVEYOR_BUILD_FOLDER\kodi-build
-        cd $env:APPVEYOR_BUILD_FOLDER\kodi-build
-        cmd /c 'cmake -G "Visual Studio 14" .. 2>&1'
-        cmd /c 'cmake --build . --target all_build --config RelWithDebInfo 2>&1'
-      }
-
-  #
-  # Build Addons
-  #
-  - ps: |
-      if ($env:ADDONS.length -ne 0 -and $env:BUILD -ne "Kodi") {
-        # Bootstrap
-        cd $env:APPVEYOR_BUILD_FOLDER\tools\buildsteps\windows\win32
-        & .\bootstrap-addons.bat
-
-        # Create build folder
-        md -Force $env:APPVEYOR_BUILD_FOLDER\build | out-null
-        cd $env:APPVEYOR_BUILD_FOLDER\build
-        # Configure
-        cmake -DADDONS_TO_BUILD="$env:ADDONS".* `
-              -G "NMake Makefiles" `
-              -DCMAKE_BUILD_TYPE="$env:CONFIG" `
-              -DCMAKE_INSTALL_PREFIX="$env:APPVEYOR_BUILD_FOLDER"\addons `
-              $env:APPVEYOR_BUILD_FOLDER\cmake\addons
-        # Build selected addons one by one
-        $addons_success=""
-        $addons_failed=""
-        nmake supported_addons | %{
-          if ($_ -like "ALL_ADDONS_BUILDING: *") {
-            $_.SubString(21).Split(" ") | %{
-              Write-Host "Building " $_
-              nmake $_
-              if ($LASTEXITCODE -eq 0) {
-                $addons_success += $_ + " "
-              } else {
-                $addons_failed += $_  + " "
-              }
-            }
-          }
-        }
-        # Print succesful and failed addons
-        Write-Host "--------------------------------------------------"
-        if ($addons_success -ne "") {
-          $addons_success.Split(" ") | %{
-            if ($_ -ne "") {
-              Write-Host [SUCCESS] $_ -ForegroundColor Green
-            }
-          }
-        }
-        if ($addons_failed -ne "") {
-          $addons_failed.Split(" ") | %{
-            if ($_ -ne "") {
-              Write-Host [ ERROR ] $_ -ForegroundColor Red
-            }
-          }
-          exit 1
-        }
-      }
-
-test: off
