From 82696580894c08b32db86e8f8793971a804307e2 Mon Sep 17 00:00:00 2001
From: Tobias Kortkamp <tobik@FreeBSD.org>
Date: Thu, 19 Apr 2018 18:59:39 +0200
Subject: [PATCH 1/2] Reenable AESinkOSS on FreeBSD after the AESinkFactory
 refactor

Signed-off-by: Tobias Kortkamp <tobik@FreeBSD.org>
---
 xbmc/cores/AudioEngine/Sinks/AESinkOSS.cpp   | 20 ++++++++++++++++++++
 xbmc/cores/AudioEngine/Sinks/AESinkOSS.h     |  5 ++++-
 xbmc/platform/linux/OptionalsReg.cpp         | 17 +++++++++++++++++
 xbmc/platform/linux/OptionalsReg.h           |  9 +++++++++
 xbmc/windowing/X11/WinSystemX11GLContext.cpp |  9 ++++++++-
 xbmc/windowing/gbm/WinSystemGbm.cpp          |  9 ++++++++-
 xbmc/windowing/wayland/WinSystemWayland.cpp  |  9 ++++++++-
 7 files changed, 74 insertions(+), 4 deletions(-)

diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkOSS.cpp b/xbmc/cores/AudioEngine/Sinks/AESinkOSS.cpp
index 23636a8ab65c..40d412db9233 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkOSS.cpp
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkOSS.cpp
@@ -23,6 +23,7 @@
 #include <limits.h>
 #include <unistd.h>
 
+#include "cores/AudioEngine/AESinkFactory.h"
 #include "cores/AudioEngine/Utils/AEUtil.h"
 #include "utils/log.h"
 #include "threads/SingleLock.h"
@@ -73,6 +74,25 @@ CAESinkOSS::~CAESinkOSS()
   Deinitialize();
 }
 
+void CAESinkOSS::Register()
+{
+  AE::AESinkRegEntry entry;
+  entry.sinkName = "OSS";
+  entry.createFunc = CAESinkOSS::Create;
+  entry.enumerateFunc = CAESinkOSS::EnumerateDevicesEx;
+  AE::CAESinkFactory::RegisterSink(entry);
+}
+
+IAESink* CAESinkOSS::Create(std::string &device, AEAudioFormat& desiredFormat)
+{
+  IAESink* sink = new CAESinkOSS();
+  if (sink->Initialize(desiredFormat, device))
+    return sink;
+
+  delete sink;
+  return nullptr;
+}
+
 std::string CAESinkOSS::GetDeviceUse(const AEAudioFormat& format, const std::string &device)
 {
 #ifdef OSS4
diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkOSS.h b/xbmc/cores/AudioEngine/Sinks/AESinkOSS.h
index 233a6726e0d5..10549164ea44 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkOSS.h
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkOSS.h
@@ -33,6 +33,10 @@ class CAESinkOSS : public IAESink
   CAESinkOSS();
   ~CAESinkOSS() override;
 
+  static void Register();
+  static IAESink* Create(std::string &device, AEAudioFormat &desiredFormat);
+  static void EnumerateDevicesEx(AEDeviceInfoList &list, bool force = false);
+
   bool Initialize(AEAudioFormat &format, std::string &device) override;
   void Deinitialize() override;
 
@@ -41,7 +45,6 @@ class CAESinkOSS : public IAESink
   double GetCacheTotal() override { return 0.0; } /* FIXME */
   unsigned int AddPackets(uint8_t **data, unsigned int frames, unsigned int offset) override;
   void Drain() override;
-  static void EnumerateDevicesEx(AEDeviceInfoList &list, bool force = false);
 private:
   int m_fd;
   std::string m_device;
diff --git a/xbmc/platform/linux/OptionalsReg.cpp b/xbmc/platform/linux/OptionalsReg.cpp
index 9b393f648d08..c83edab1bf57 100644
--- a/xbmc/platform/linux/OptionalsReg.cpp
+++ b/xbmc/platform/linux/OptionalsReg.cpp
@@ -57,6 +57,23 @@ bool OPTIONALS::PulseAudioRegister()
 }
 #endif
 
+//-----------------------------------------------------------------------------
+// OSS
+//-----------------------------------------------------------------------------
+#ifdef TARGET_FREEBSD
+#include "cores/AudioEngine/Sinks/AESinkOSS.h"
+bool OPTIONALS::OSSRegister()
+{
+  CAESinkOSS::Register();
+  return false;
+}
+#else
+bool OPTIONALS::OSSRegister()
+{
+  return false;
+}
+#endif
+
 //-----------------------------------------------------------------------------
 // sndio
 //-----------------------------------------------------------------------------
diff --git a/xbmc/platform/linux/OptionalsReg.h b/xbmc/platform/linux/OptionalsReg.h
index 07a985b18a8a..aed4bf2de58e 100644
--- a/xbmc/platform/linux/OptionalsReg.h
+++ b/xbmc/platform/linux/OptionalsReg.h
@@ -38,6 +38,15 @@ namespace OPTIONALS
 bool PulseAudioRegister();
 }
 
+//-----------------------------------------------------------------------------
+// OSS
+//-----------------------------------------------------------------------------
+
+namespace OPTIONALS
+{
+bool OSSRegister();
+}
+
 //-----------------------------------------------------------------------------
 // sndio
 //-----------------------------------------------------------------------------
diff --git a/xbmc/windowing/X11/WinSystemX11GLContext.cpp b/xbmc/windowing/X11/WinSystemX11GLContext.cpp
index 17b83a05484d..6e31a807d715 100644
--- a/xbmc/windowing/X11/WinSystemX11GLContext.cpp
+++ b/xbmc/windowing/X11/WinSystemX11GLContext.cpp
@@ -63,6 +63,10 @@ CWinSystemX11GLContext::CWinSystemX11GLContext()
   {
     OPTIONALS::PulseAudioRegister();
   }
+  else if (StringUtils::EqualsNoCase(envSink, "OSS"))
+  {
+    OPTIONALS::OSSRegister();
+  }
   else if (StringUtils::EqualsNoCase(envSink, "SNDIO"))
   {
     OPTIONALS::SndioRegister();
@@ -73,7 +77,10 @@ CWinSystemX11GLContext::CWinSystemX11GLContext()
     {
       if (!OPTIONALS::ALSARegister())
       {
-        OPTIONALS::SndioRegister();
+        if (!OPTIONALS::SndioRegister())
+        {
+          OPTIONALS::OSSRegister();
+        }
       }
     }
   }
diff --git a/xbmc/windowing/gbm/WinSystemGbm.cpp b/xbmc/windowing/gbm/WinSystemGbm.cpp
index 45783bd9f170..542577a73702 100644
--- a/xbmc/windowing/gbm/WinSystemGbm.cpp
+++ b/xbmc/windowing/gbm/WinSystemGbm.cpp
@@ -54,6 +54,10 @@ CWinSystemGbm::CWinSystemGbm() :
   {
     OPTIONALS::PulseAudioRegister();
   }
+  else if (StringUtils::EqualsNoCase(envSink, "OSS"))
+  {
+    OPTIONALS::OSSRegister();
+  }
   else if (StringUtils::EqualsNoCase(envSink, "SNDIO"))
   {
     OPTIONALS::SndioRegister();
@@ -64,7 +68,10 @@ CWinSystemGbm::CWinSystemGbm() :
     {
       if (!OPTIONALS::ALSARegister())
       {
-        OPTIONALS::SndioRegister();
+        if (!OPTIONALS::SndioRegister())
+        {
+          OPTIONALS::OSSRegister();
+        }
       }
     }
   }
diff --git a/xbmc/windowing/wayland/WinSystemWayland.cpp b/xbmc/windowing/wayland/WinSystemWayland.cpp
index be7c40d23f27..9d23a2389fd4 100644
--- a/xbmc/windowing/wayland/WinSystemWayland.cpp
+++ b/xbmc/windowing/wayland/WinSystemWayland.cpp
@@ -159,6 +159,10 @@ CWinSystemWayland::CWinSystemWayland()
   {
     OPTIONALS::PulseAudioRegister();
   }
+  else if (StringUtils::EqualsNoCase(envSink, "OSS"))
+  {
+    OPTIONALS::OSSRegister();
+  }
   else if (StringUtils::EqualsNoCase(envSink, "SNDIO"))
   {
     OPTIONALS::SndioRegister();
@@ -169,7 +173,10 @@ CWinSystemWayland::CWinSystemWayland()
     {
       if (!OPTIONALS::ALSARegister())
       {
-        OPTIONALS::SndioRegister();
+        if (!OPTIONALS::SndioRegister())
+        {
+          OPTIONALS::OSSRegister();
+        }
       }
     }
   }

From dbfe0bc969f582f32b572181c7ce1e163e68bce0 Mon Sep 17 00:00:00 2001
From: Tobias Kortkamp <tobik@FreeBSD.org>
Date: Sat, 21 Apr 2018 06:54:54 +0200
Subject: [PATCH 2/2] Add new FreeBSD OptionalsReg

Signed-off-by: Tobias Kortkamp <tobik@FreeBSD.org>
---
 cmake/treedata/freebsd/subdirs.txt     |  1 +
 xbmc/platform/freebsd/CMakeLists.txt   |  3 +++
 xbmc/platform/freebsd/OptionalsReg.cpp | 31 +++++++++++++++++++++++++++++++
 xbmc/platform/linux/OptionalsReg.cpp   | 24 +++++++-----------------
 4 files changed, 42 insertions(+), 17 deletions(-)
 create mode 100644 xbmc/platform/freebsd/CMakeLists.txt
 create mode 100644 xbmc/platform/freebsd/OptionalsReg.cpp

diff --git a/cmake/treedata/freebsd/subdirs.txt b/cmake/treedata/freebsd/subdirs.txt
index fe0725c5f9ca..0f60d75fa043 100644
--- a/cmake/treedata/freebsd/subdirs.txt
+++ b/cmake/treedata/freebsd/subdirs.txt
@@ -1,6 +1,7 @@
 xbmc/platform/posix                 platform/posix
 xbmc/platform/posix/filesystem      platform/posix/filesystem
 xbmc/platform/posix/utils           platform/posix/utils
+xbmc/platform/freebsd               platform/freebsd
 xbmc/platform/linux                 platform/linux
 xbmc/platform/linux/input           platform/linux/input
 xbmc/platform/linux/network         platform/linux/network
diff --git a/xbmc/platform/freebsd/CMakeLists.txt b/xbmc/platform/freebsd/CMakeLists.txt
new file mode 100644
index 000000000000..7f8b6ad1a8fb
--- /dev/null
+++ b/xbmc/platform/freebsd/CMakeLists.txt
@@ -0,0 +1,3 @@
+set(SOURCES OptionalsReg.cpp)
+set(HEADERS  ../linux/OptionalsReg.h)
+core_add_library(freebsdsupport)
diff --git a/xbmc/platform/freebsd/OptionalsReg.cpp b/xbmc/platform/freebsd/OptionalsReg.cpp
new file mode 100644
index 000000000000..acc2cb20251e
--- /dev/null
+++ b/xbmc/platform/freebsd/OptionalsReg.cpp
@@ -0,0 +1,31 @@
+/*
+ *      Copyright (C) 2005-2017 Team XBMC
+ *      http://kodi.tv
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "platform/linux/OptionalsReg.h"
+
+//-----------------------------------------------------------------------------
+// OSS
+//-----------------------------------------------------------------------------
+#include "cores/AudioEngine/Sinks/AESinkOSS.h"
+bool OPTIONALS::OSSRegister()
+{
+  CAESinkOSS::Register();
+  return true;
+}
diff --git a/xbmc/platform/linux/OptionalsReg.cpp b/xbmc/platform/linux/OptionalsReg.cpp
index c83edab1bf57..921b6e105a44 100644
--- a/xbmc/platform/linux/OptionalsReg.cpp
+++ b/xbmc/platform/linux/OptionalsReg.cpp
@@ -39,6 +39,13 @@ bool OPTIONALS::ALSARegister()
 }
 #endif
 
+#ifdef TARGET_LINUX
+bool OPTIONALS::OSSRegister()
+{
+  return false;
+}
+#endif
+
 //-----------------------------------------------------------------------------
 // PulseAudio
 //-----------------------------------------------------------------------------
@@ -57,23 +64,6 @@ bool OPTIONALS::PulseAudioRegister()
 }
 #endif
 
-//-----------------------------------------------------------------------------
-// OSS
-//-----------------------------------------------------------------------------
-#ifdef TARGET_FREEBSD
-#include "cores/AudioEngine/Sinks/AESinkOSS.h"
-bool OPTIONALS::OSSRegister()
-{
-  CAESinkOSS::Register();
-  return false;
-}
-#else
-bool OPTIONALS::OSSRegister()
-{
-  return false;
-}
-#endif
-
 //-----------------------------------------------------------------------------
 // sndio
 //-----------------------------------------------------------------------------
