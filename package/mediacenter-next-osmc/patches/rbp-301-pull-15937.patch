From 1c4cc9032e47b86714498f98c44d97de8b100116 Mon Sep 17 00:00:00 2001
From: gemedet <gemedet@users.noreply.github.com>
Date: Thu, 18 Apr 2019 12:19:28 -0700
Subject: [PATCH] Use special sort order when selecting first unwatched

---
 xbmc/video/windows/GUIWindowVideoNav.cpp | 47 +++++++++++-------------
 1 file changed, 21 insertions(+), 26 deletions(-)

diff --git a/xbmc/video/windows/GUIWindowVideoNav.cpp b/xbmc/video/windows/GUIWindowVideoNav.cpp
index b42e1676817d..6cb8dde8c9ce 100644
--- a/xbmc/video/windows/GUIWindowVideoNav.cpp
+++ b/xbmc/video/windows/GUIWindowVideoNav.cpp
@@ -271,8 +271,10 @@ int CGUIWindowVideoNav::GetFirstUnwatchedItemIndex(bool includeAllSeasons, bool
 {
   int iIndex = 0;
   int iUnwatchedSeason = INT_MAX;
+  int iUnwatchedEpisode = INT_MAX;
+  NODE_TYPE nodeType = CVideoDatabaseDirectory::GetDirectoryChildType(m_vecItems->GetPath());
 
-  // Run through the list of items and find the season number of the first season with unwatched episodes
+  // Run through the list of items and find the first unwatched season/episode
   for (int i = 0; i < m_vecItems->Size(); ++i)
   {
     CFileItemPtr pItem = m_vecItems->Get(i);
@@ -284,36 +286,29 @@ int CGUIWindowVideoNav::GetFirstUnwatchedItemIndex(bool includeAllSeasons, bool
     if ((!includeAllSeasons && pTag->m_iSeason < 0) || (!includeSpecials && pTag->m_iSeason == 0))
       continue;
 
-    // Is the season unwatched, and is its season number lower than the currently identified
-    // first unwatched season
-    if (pTag->GetPlayCount() == 0 && pTag->m_iSeason < iUnwatchedSeason)
+    // Use the special sort values if they're available
+    int iSeason = pTag->m_iSpecialSortSeason >= 0 ? pTag->m_iSpecialSortSeason : pTag->m_iSeason;
+    int iEpisode = pTag->m_iSpecialSortEpisode >= 0 ? pTag->m_iSpecialSortEpisode : pTag->m_iEpisode;
+
+    if (nodeType == NODE_TYPE::NODE_TYPE_SEASONS)
     {
-      iUnwatchedSeason = pTag->m_iSeason;
-      iIndex = i;
+      // Is the season unwatched, and is its season number lower than the currently identified
+      // first unwatched season
+      if (pTag->GetPlayCount() == 0 && iSeason < iUnwatchedSeason)
+      {
+        iUnwatchedSeason = iSeason;
+        iIndex = i;
+      }
     }
-  }
 
-  NODE_TYPE nodeType = CVideoDatabaseDirectory::GetDirectoryChildType(m_vecItems->GetPath());
-  if (nodeType == NODE_TYPE::NODE_TYPE_EPISODES)
-  {
-    iIndex = 0;
-    int iUnwatchedEpisode = INT_MAX;
-
-    // Now run through the list of items and check episodes from the season identified above
-    // to find the first (lowest episode number) unwatched episode.
-    for (int i = 0; i < m_vecItems->Size(); ++i)
+    if (nodeType == NODE_TYPE::NODE_TYPE_EPISODES)
     {
-      CFileItemPtr pItem = m_vecItems->Get(i);
-      if (pItem->IsParentFolder() || !pItem->HasVideoInfoTag())
-        continue;
-
-      CVideoInfoTag *pTag = pItem->GetVideoInfoTag();
-
-      // Does the episode belong to the unwatched season and Is the episode unwatched, and is its episode number
-      // lower than the currently identified first unwatched episode
-      if (pTag->m_iSeason == iUnwatchedSeason && pTag->GetPlayCount() == 0 && pTag->m_iEpisode < iUnwatchedEpisode)
+      // Is the episode unwatched, and is its season number lower
+      // or is its episode number lower within the current season
+      if (pTag->GetPlayCount() == 0 && (iSeason < iUnwatchedSeason || (iSeason == iUnwatchedSeason && iEpisode < iUnwatchedEpisode)))
       {
-        iUnwatchedEpisode = pTag->m_iEpisode;
+        iUnwatchedSeason = iSeason;
+        iUnwatchedEpisode = iEpisode;
         iIndex = i;
       }
     }
