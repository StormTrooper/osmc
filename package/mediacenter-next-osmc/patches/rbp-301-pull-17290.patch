From b50d9b09f6984a88a2648e67f9b5c89f2e522ecb Mon Sep 17 00:00:00 2001
From: Lukas Rusak <lorusak@gmail.com>
Date: Tue, 28 Jan 2020 19:02:04 -0800
Subject: [PATCH 1/2] [test] TestCPUInfo: remove useless test as we cannot
 guarantee that they exist

---
 xbmc/utils/test/TestCPUInfo.cpp | 24 ------------------------
 1 file changed, 24 deletions(-)

diff --git a/xbmc/utils/test/TestCPUInfo.cpp b/xbmc/utils/test/TestCPUInfo.cpp
index 9cf2db915268..d83bf67bdaaf 100644
--- a/xbmc/utils/test/TestCPUInfo.cpp
+++ b/xbmc/utils/test/TestCPUInfo.cpp
@@ -62,30 +62,6 @@ TEST_F(TestCPUInfo, GetCPUModel)
   EXPECT_STRNE("", s.c_str());
 }
 
-TEST_F(TestCPUInfo, GetCPUBogoMips)
-{
-  std::string s = CServiceBroker::GetCPUInfo()->GetCPUBogoMips();
-  EXPECT_STRNE("", s.c_str());
-}
-
-TEST_F(TestCPUInfo, GetCPUHardware)
-{
-  std::string s = CServiceBroker::GetCPUInfo()->GetCPUHardware();
-  EXPECT_STRNE("", s.c_str());
-}
-
-TEST_F(TestCPUInfo, GetCPURevision)
-{
-  std::string s = CServiceBroker::GetCPUInfo()->GetCPURevision();
-  EXPECT_STRNE("", s.c_str());
-}
-
-TEST_F(TestCPUInfo, GetCPUSerial)
-{
-  std::string s = CServiceBroker::GetCPUInfo()->GetCPUSerial();
-  EXPECT_STRNE("", s.c_str());
-}
-
 TEST_F(TestCPUInfo, CoreInfo)
 {
   ASSERT_TRUE(CServiceBroker::GetCPUInfo()->HasCoreId(0));

From 6c4a217dc7c11ae84eca2644ef1ad5832840e1e2 Mon Sep 17 00:00:00 2001
From: Lukas Rusak <lorusak@gmail.com>
Date: Tue, 28 Jan 2020 18:38:52 -0800
Subject: [PATCH 2/2] CPUInfo: remove default "N/A" value from strings

---
 xbmc/utils/CPUInfo.h | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/xbmc/utils/CPUInfo.h b/xbmc/utils/CPUInfo.h
index ceff0489c7ad..473402d5fdd8 100644
--- a/xbmc/utils/CPUInfo.h
+++ b/xbmc/utils/CPUInfo.h
@@ -100,13 +100,13 @@ class CCPUInfo
 
   int m_lastUsedPercentage;
   XbmcThreads::EndTime m_nextUsedReadTime;
-  std::string m_cpuVendor{"N/A"};
-  std::string m_cpuModel{"N/A"};
-  std::string m_cpuBogoMips{"N/A"};
-  std::string m_cpuSoC{"N/A"};
-  std::string m_cpuHardware{"N/A"};
-  std::string m_cpuRevision{"N/A"};
-  std::string m_cpuSerial{"N/A"};
+  std::string m_cpuVendor;
+  std::string m_cpuModel;
+  std::string m_cpuBogoMips;
+  std::string m_cpuSoC;
+  std::string m_cpuHardware;
+  std::string m_cpuRevision;
+  std::string m_cpuSerial;
 
   double m_usagePercent{0.0};
   std::size_t m_activeTime{0};
