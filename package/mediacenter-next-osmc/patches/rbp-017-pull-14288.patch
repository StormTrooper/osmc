From f64ccefa8b63d869125f28d0730ae27715f1eef4 Mon Sep 17 00:00:00 2001
From: ace20022 <ace20022@ymail.com>
Date: Sat, 11 Aug 2018 08:51:28 +0200
Subject: [PATCH 1/3] [bluray] Change log messages after the fs callbacks
 refactoring.

---
 xbmc/filesystem/BlurayCallback.cpp | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/xbmc/filesystem/BlurayCallback.cpp b/xbmc/filesystem/BlurayCallback.cpp
index 5d113423819a..cf1a20b9d2d3 100644
--- a/xbmc/filesystem/BlurayCallback.cpp
+++ b/xbmc/filesystem/BlurayCallback.cpp
@@ -24,14 +24,14 @@ struct SDirState
 
 void CBlurayCallback::bluray_logger(const char* msg)
 {
-  CLog::Log(LOGDEBUG, "CDVDInputStreamBluray::Logger - %s", msg);
+  CLog::Log(LOGDEBUG, "CBlurayCallback::Logger - %s", msg);
 }
 
 void CBlurayCallback::dir_close(BD_DIR_H *dir)
 {
   if (dir)
   {
-    CLog::Log(LOGDEBUG, "CDVDInputStreamBluray - Closed dir (%p)\n", static_cast<void*>(dir));
+    CLog::Log(LOGDEBUG, "CBlurayCallback - Closed dir (%p)\n", static_cast<void*>(dir));
     delete static_cast<SDirState*>(dir->internal);
     delete dir;
   }
@@ -43,7 +43,7 @@ BD_DIR_H* CBlurayCallback::dir_open(void *handle, const char* rel_path)
   std::string* strBasePath = reinterpret_cast<std::string*>(handle);
   if (!strBasePath)
   {
-    CLog::Log(LOGDEBUG, "CDVDInputStreamBluray - Error opening dir, null handle!");
+    CLog::Log(LOGDEBUG, "CBlurayCallback - Error opening dir, null handle!");
     return NULL;
   }
 
@@ -51,13 +51,13 @@ BD_DIR_H* CBlurayCallback::dir_open(void *handle, const char* rel_path)
   if (URIUtils::HasSlashAtEnd(strDirname))
     URIUtils::RemoveSlashAtEnd(strDirname);
 
-  CLog::Log(LOGDEBUG, "CDVDInputStreamBluray - Opening dir %s\n", CURL::GetRedacted(strDirname).c_str());
+  CLog::Log(LOGDEBUG, "CBlurayCallback - Opening dir %s\n", CURL::GetRedacted(strDirname).c_str());
 
   SDirState *st = new SDirState();
   if (!CDirectory::GetDirectory(strDirname, st->list, "", DIR_FLAG_DEFAULTS))
   {
     if (!CFile::Exists(strDirname))
-      CLog::Log(LOGDEBUG, "CDVDInputStreamBluray - Error opening dir! (%s)\n", CURL::GetRedacted(strDirname).c_str());
+      CLog::Log(LOGDEBUG, "CBlurayCallback - Error opening dir! (%s)\n", CURL::GetRedacted(strDirname).c_str());
     delete st;
     return NULL;
   }
@@ -107,7 +107,7 @@ BD_FILE_H * CBlurayCallback::file_open(void *handle, const char *rel_path)
   std::string* strBasePath = reinterpret_cast<std::string*>(handle);
   if (!strBasePath)
   {
-    CLog::Log(LOGDEBUG, "CDVDInputStreamBluray - Error opening dir, null handle!");
+    CLog::Log(LOGDEBUG, "CBlurayCallback - Error opening dir, null handle!");
     return NULL;
   }
 
@@ -129,7 +129,7 @@ BD_FILE_H * CBlurayCallback::file_open(void *handle, const char *rel_path)
     return file;
   }
 
-  CLog::Log(LOGDEBUG, "CDVDInputStreamBluray - Error opening file! (%s)", CURL::GetRedacted(strFilename).c_str());
+  CLog::Log(LOGDEBUG, "CBlurayCallback - Error opening file! (%s)", CURL::GetRedacted(strFilename).c_str());
 
   delete fp;
   delete file;

From 7b2de5407d00c1adb316f2d6a2b56f4a9ede9e40 Mon Sep 17 00:00:00 2001
From: ace20022 <ace20022@ymail.com>
Date: Sat, 11 Aug 2018 12:56:26 +0200
Subject: [PATCH 2/3] [bluray] Replace NULL with nullptr.

---
 .../DVDInputStreams/DVDInputStreamBluray.cpp  | 42 +++++++++----------
 xbmc/filesystem/BlurayCallback.cpp            |  8 ++--
 xbmc/filesystem/BlurayDirectory.cpp           |  4 +-
 3 files changed, 27 insertions(+), 27 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp
index 15c2ed4f47cc..17862991c97f 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp
@@ -71,12 +71,12 @@ void  bluray_overlay_argb_cb(void *this_gen, const struct bd_argb_overlay_s * co
 CDVDInputStreamBluray::CDVDInputStreamBluray(IVideoPlayer* player, const CFileItem& fileitem) :
   CDVDInputStream(DVDSTREAM_TYPE_BLURAY, fileitem), m_pstream(nullptr), m_rootPath("")
 {
-  m_title = NULL;
+  m_title = nullptr;
   m_clip  = (uint32_t)-1;
   m_angle = 0;
   m_playlist = (uint32_t)-1;
   m_menu  = false;
-  m_bd    = NULL;
+  m_bd    = nullptr;
   m_content = "video/x-mpegts";
   m_player  = player;
   m_navmode = false;
@@ -107,7 +107,7 @@ BLURAY_TITLE_INFO* CDVDInputStreamBluray::GetTitleLongest()
 {
   int titles = bd_get_titles(m_bd, TITLES_RELEVANT, 0);
 
-  BLURAY_TITLE_INFO *s = NULL;
+  BLURAY_TITLE_INFO *s = nullptr;
   for(int i=0; i < titles; i++)
   {
     BLURAY_TITLE_INFO *t = bd_get_title_info(m_bd, i, 0);
@@ -131,7 +131,7 @@ BLURAY_TITLE_INFO* CDVDInputStreamBluray::GetTitleFile(const std::string& filena
   if(sscanf(filename.c_str(), "%05u.mpls", &playlist) != 1)
   {
     CLog::Log(LOGERROR, "get_playlist_title - unsupported playlist file selected %s", CURL::GetRedacted(filename).c_str());
-    return NULL;
+    return nullptr;
   }
 
   return bd_get_playlist_info(m_bd, playlist, 0);
@@ -140,7 +140,7 @@ BLURAY_TITLE_INFO* CDVDInputStreamBluray::GetTitleFile(const std::string& filena
 
 bool CDVDInputStreamBluray::Open()
 {
-  if(m_player == NULL)
+  if(m_player == nullptr)
     return false;
 
   std::string strPath(m_item.GetPath());
@@ -236,7 +236,7 @@ bool CDVDInputStreamBluray::Open()
     }
   }
 
-  bd_get_event(m_bd, NULL);
+  bd_get_event(m_bd, nullptr);
 
   const BLURAY_DISC_INFO *disc_info = bd_get_disc_info(m_bd);
 
@@ -317,7 +317,7 @@ bool CDVDInputStreamBluray::Open()
 
     bd_register_overlay_proc (m_bd, this, bluray_overlay_cb);
 #ifdef HAVE_LIBBLURAY_BDJ
-    bd_register_argb_overlay_proc (m_bd, this, bluray_overlay_argb_cb, NULL);
+    bd_register_argb_overlay_proc (m_bd, this, bluray_overlay_argb_cb, nullptr);
 #endif
 
     if(bd_play(m_bd) <= 0)
@@ -357,11 +357,11 @@ void CDVDInputStreamBluray::Close()
     bd_free_title_info(m_title);
   if(m_bd)
   {
-    bd_register_overlay_proc(m_bd, NULL, NULL);
+    bd_register_overlay_proc(m_bd, nullptr, nullptr);
     bd_close(m_bd);
   }
-  m_bd = NULL;
-  m_title = NULL;
+  m_bd = nullptr;
+  m_title = nullptr;
   m_pstream.reset();
   m_rootPath.clear();
 }
@@ -412,7 +412,7 @@ void CDVDInputStreamBluray::ProcessEvent() {
 
   case BD_EVENT_SEEK:
     CLog::Log(LOGDEBUG, "CDVDInputStreamBluray - BD_EVENT_SEEK");
-    //m_player->OnDVDNavResult(NULL, 1);
+    //m_player->OnDVDNavResult(nullptr, 1);
     //bd_read_skip_still(m_bd);
     //m_hold = HOLD_HELD;
     break;
@@ -450,7 +450,7 @@ void CDVDInputStreamBluray::ProcessEvent() {
     /* when a title ends, playlist WILL eventually change */
     if (m_title)
       bd_free_title_info(m_title);
-    m_title = NULL;
+    m_title = nullptr;
     break;
 
   case BD_EVENT_TITLE:
@@ -729,7 +729,7 @@ void CDVDInputStreamBluray::OverlayFlush(int64_t pts)
 void CDVDInputStreamBluray::OverlayCallback(const BD_OVERLAY * const ov)
 {
 #if(BD_OVERLAY_INTERFACE_VERSION >= 2)
-  if(ov == NULL || ov->cmd == BD_OVERLAY_CLOSE)
+  if(ov == nullptr || ov->cmd == BD_OVERLAY_CLOSE)
   {
     OverlayClose();
     return;
@@ -803,7 +803,7 @@ void CDVDInputStreamBluray::OverlayCallback(const BD_OVERLAY * const ov)
 #ifdef HAVE_LIBBLURAY_BDJ
 void CDVDInputStreamBluray::OverlayCallbackARGB(const struct bd_argb_overlay_s * const ov)
 {
-  if(ov == NULL || ov->cmd == BD_ARGB_OVERLAY_CLOSE)
+  if(ov == nullptr || ov->cmd == BD_ARGB_OVERLAY_CLOSE)
   {
     OverlayClose();
     return;
@@ -832,7 +832,7 @@ void CDVDInputStreamBluray::OverlayCallbackARGB(const struct bd_argb_overlay_s *
     SOverlay overlay(new CDVDOverlayImage(), std::ptr_fun(CDVDOverlay::Release));
 
     overlay->palette_colors = 0;
-    overlay->palette        = NULL;
+    overlay->palette        = nullptr;
 
     unsigned bytes = ov->stride * ov->h * 4;
     uint8_t *img = (uint8_t*) malloc(bytes);
@@ -1009,7 +1009,7 @@ CDVDInputStream::ENextStream CDVDInputStreamBluray::NextStream()
 
 void CDVDInputStreamBluray::UserInput(bd_vk_key_e vk)
 {
-  if(m_bd == NULL || !m_navmode)
+  if(m_bd == nullptr || !m_navmode)
     return;
 
   int ret = bd_user_input(m_bd, -1, vk);
@@ -1027,7 +1027,7 @@ void CDVDInputStreamBluray::UserInput(bd_vk_key_e vk)
 
 bool CDVDInputStreamBluray::MouseMove(const CPoint &point)
 {
-  if (m_bd == NULL || !m_navmode)
+  if (m_bd == nullptr || !m_navmode)
     return false;
 
   if (bd_mouse_select(m_bd, -1, (uint16_t)point.x, (uint16_t)point.y) < 0)
@@ -1041,7 +1041,7 @@ bool CDVDInputStreamBluray::MouseMove(const CPoint &point)
 
 bool CDVDInputStreamBluray::MouseClick(const CPoint &point)
 {
-  if (m_bd == NULL || !m_navmode)
+  if (m_bd == nullptr || !m_navmode)
     return false;
 
   if (bd_mouse_select(m_bd, -1, (uint16_t)point.x, (uint16_t)point.y) < 0)
@@ -1059,7 +1059,7 @@ bool CDVDInputStreamBluray::MouseClick(const CPoint &point)
 
 void CDVDInputStreamBluray::OnMenu()
 {
-  if(m_bd == NULL || !m_navmode)
+  if(m_bd == nullptr || !m_navmode)
   {
     CLog::Log(LOGDEBUG, "CDVDInputStreamBluray::OnMenu - navigation mode not enabled");
     return;
@@ -1079,7 +1079,7 @@ void CDVDInputStreamBluray::OnMenu()
 
 bool CDVDInputStreamBluray::IsInMenu()
 {
-  if(m_bd == NULL || !m_navmode)
+  if(m_bd == nullptr || !m_navmode)
     return false;
   if(m_menu || !m_planes[BD_OVERLAY_IG].o.empty())
     return true;
@@ -1088,7 +1088,7 @@ bool CDVDInputStreamBluray::IsInMenu()
 
 void CDVDInputStreamBluray::SkipStill()
 {
-  if(m_bd == NULL || !m_navmode)
+  if(m_bd == nullptr || !m_navmode)
     return;
 
   if(m_hold == HOLD_STILL)
diff --git a/xbmc/filesystem/BlurayCallback.cpp b/xbmc/filesystem/BlurayCallback.cpp
index cf1a20b9d2d3..5cecf3a4c46e 100644
--- a/xbmc/filesystem/BlurayCallback.cpp
+++ b/xbmc/filesystem/BlurayCallback.cpp
@@ -44,7 +44,7 @@ BD_DIR_H* CBlurayCallback::dir_open(void *handle, const char* rel_path)
   if (!strBasePath)
   {
     CLog::Log(LOGDEBUG, "CBlurayCallback - Error opening dir, null handle!");
-    return NULL;
+    return nullptr;
   }
 
   std::string strDirname = URIUtils::AddFileToFolder(*strBasePath, strRelPath);
@@ -59,7 +59,7 @@ BD_DIR_H* CBlurayCallback::dir_open(void *handle, const char* rel_path)
     if (!CFile::Exists(strDirname))
       CLog::Log(LOGDEBUG, "CBlurayCallback - Error opening dir! (%s)\n", CURL::GetRedacted(strDirname).c_str());
     delete st;
-    return NULL;
+    return nullptr;
   }
 
   BD_DIR_H *dir = new BD_DIR_H;
@@ -108,7 +108,7 @@ BD_FILE_H * CBlurayCallback::file_open(void *handle, const char *rel_path)
   if (!strBasePath)
   {
     CLog::Log(LOGDEBUG, "CBlurayCallback - Error opening dir, null handle!");
-    return NULL;
+    return nullptr;
   }
 
   std::string strFilename = URIUtils::AddFileToFolder(*strBasePath, strRelPath);
@@ -134,7 +134,7 @@ BD_FILE_H * CBlurayCallback::file_open(void *handle, const char *rel_path)
   delete fp;
   delete file;
 
-  return NULL;
+  return nullptr;
 }
 
 int64_t CBlurayCallback::file_seek(BD_FILE_H *file, int64_t offset, int32_t origin)
diff --git a/xbmc/filesystem/BlurayDirectory.cpp b/xbmc/filesystem/BlurayDirectory.cpp
index 4f30eb9ae0aa..d48eabac6a74 100644
--- a/xbmc/filesystem/BlurayDirectory.cpp
+++ b/xbmc/filesystem/BlurayDirectory.cpp
@@ -37,7 +37,7 @@ namespace XFILE
 #define MAIN_TITLE_LENGTH_PERCENT 70 /** Minimum length of main titles, based on longest title */
 
 CBlurayDirectory::CBlurayDirectory()
-  : m_bd(NULL)
+  : m_bd(nullptr)
 {
 }
 
@@ -51,7 +51,7 @@ void CBlurayDirectory::Dispose()
   if(m_bd)
   {
     bd_close(m_bd);
-    m_bd = NULL;
+    m_bd = nullptr;
   }
 }
 

From 172734d108ce3f9b253a36bb420d787892107e57 Mon Sep 17 00:00:00 2001
From: ace20022 <ace20022@ymail.com>
Date: Sat, 11 Aug 2018 13:39:06 +0200
Subject: [PATCH 3/3] [bluray] Modernize constructors.

---
 .../DVDInputStreams/DVDInputStreamBluray.cpp  | 12 +---------
 .../DVDInputStreams/DVDInputStreamBluray.h    | 22 ++++++++++---------
 xbmc/filesystem/BlurayDirectory.cpp           |  5 -----
 xbmc/filesystem/BlurayDirectory.h             |  4 ++--
 4 files changed, 15 insertions(+), 28 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp
index 17862991c97f..74fb7088e0b7 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp
@@ -69,19 +69,9 @@ void  bluray_overlay_argb_cb(void *this_gen, const struct bd_argb_overlay_s * co
 #endif
 
 CDVDInputStreamBluray::CDVDInputStreamBluray(IVideoPlayer* player, const CFileItem& fileitem) :
-  CDVDInputStream(DVDSTREAM_TYPE_BLURAY, fileitem), m_pstream(nullptr), m_rootPath("")
+  CDVDInputStream(DVDSTREAM_TYPE_BLURAY, fileitem), m_player(player)
 {
-  m_title = nullptr;
-  m_clip  = (uint32_t)-1;
-  m_angle = 0;
-  m_playlist = (uint32_t)-1;
-  m_menu  = false;
-  m_bd    = nullptr;
   m_content = "video/x-mpegts";
-  m_player  = player;
-  m_navmode = false;
-  m_hold = HOLD_NONE;
-  m_angle = 0;
   memset(&m_event, 0, sizeof(m_event));
 #ifdef HAVE_LIBBLURAY_BDJ
   memset(&m_argb,  0, sizeof(m_argb));
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.h b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.h
index 6898a4d1fd4c..a540ca040e00 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.h
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.h
@@ -23,6 +23,7 @@ extern "C"
 }
 
 #define MAX_PLAYLIST_ID 99999
+#define MAX_CLIP_ID 99999
 #define BD_EVENT_MENU_OVERLAY -1
 #define BD_EVENT_MENU_ERROR   -2
 #define BD_EVENT_ENC_ERROR    -3
@@ -38,6 +39,7 @@ class CDVDInputStreamBluray
   , public CDVDInputStream::IMenus
 {
 public:
+  CDVDInputStreamBluray() = delete;
   CDVDInputStreamBluray(IVideoPlayer* player, const CFileItem& fileitem);
   ~CDVDInputStreamBluray() override;
   bool Open() override;
@@ -119,14 +121,14 @@ class CDVDInputStreamBluray
   static void OverlayClear(SPlane& plane, int x, int y, int w, int h);
   static void OverlayInit (SPlane& plane, int w, int h);
 
-  IVideoPlayer* m_player;
-  BLURAY* m_bd;
-  BLURAY_TITLE_INFO* m_title;
-  uint32_t m_playlist;
-  uint32_t m_clip;
-  uint32_t m_angle;
-  bool m_menu;
-  bool m_navmode;
+  IVideoPlayer* m_player = nullptr;
+  BLURAY* m_bd = nullptr;
+  BLURAY_TITLE_INFO* m_title = nullptr;
+  uint32_t m_playlist = MAX_PLAYLIST_ID + 1;
+  uint32_t m_clip = MAX_CLIP_ID + 1;
+  uint32_t m_angle = 0;
+  bool m_menu = false;
+  bool m_navmode = false;
   int m_dispTimeBeforeRead = 0;
 
   typedef std::shared_ptr<CDVDOverlayImage> SOverlay;
@@ -147,7 +149,7 @@ class CDVDInputStreamBluray
     HOLD_STILL,
     HOLD_ERROR,
     HOLD_EXIT
-  } m_hold;
+  } m_hold = HOLD_NONE;
   BD_EVENT m_event;
 #ifdef HAVE_LIBBLURAY_BDJ
   struct bd_argb_buffer_s m_argb;
@@ -156,6 +158,6 @@ class CDVDInputStreamBluray
   private:
     bool OpenStream(CFileItem &item);
     void SetupPlayerSettings();
-    std::unique_ptr<CDVDInputStreamFile> m_pstream;
+    std::unique_ptr<CDVDInputStreamFile> m_pstream = nullptr;
     std::string m_rootPath;
 };
diff --git a/xbmc/filesystem/BlurayDirectory.cpp b/xbmc/filesystem/BlurayDirectory.cpp
index d48eabac6a74..27ea02546424 100644
--- a/xbmc/filesystem/BlurayDirectory.cpp
+++ b/xbmc/filesystem/BlurayDirectory.cpp
@@ -36,11 +36,6 @@ namespace XFILE
 
 #define MAIN_TITLE_LENGTH_PERCENT 70 /** Minimum length of main titles, based on longest title */
 
-CBlurayDirectory::CBlurayDirectory()
-  : m_bd(nullptr)
-{
-}
-
 CBlurayDirectory::~CBlurayDirectory()
 {
   Dispose();
diff --git a/xbmc/filesystem/BlurayDirectory.h b/xbmc/filesystem/BlurayDirectory.h
index 741d0f26e187..60a0683c4098 100644
--- a/xbmc/filesystem/BlurayDirectory.h
+++ b/xbmc/filesystem/BlurayDirectory.h
@@ -21,7 +21,7 @@ namespace XFILE
 class CBlurayDirectory: public XFILE::IDirectory
 {
 public:
-  CBlurayDirectory();
+  CBlurayDirectory() = default;
   ~CBlurayDirectory() override;
   bool GetDirectory(const CURL& url, CFileItemList &items) override;
 
@@ -45,7 +45,7 @@ class CBlurayDirectory: public XFILE::IDirectory
   CURL         GetUnderlyingCURL(const CURL& url);
   std::string  HexToString(const uint8_t * buf, int count);
   CURL          m_url;
-  BLURAY*       m_bd;
+  BLURAY*       m_bd = nullptr;
   bool          m_blurayInitialized = false;
 };
 
