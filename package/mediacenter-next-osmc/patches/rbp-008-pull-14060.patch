From 5d135910ec01baf10a4978b8e4b538bbf3e1bbc9 Mon Sep 17 00:00:00 2001
From: Kai Sommerfeld <kai.sommerfeld@gmx.com>
Date: Sat, 16 Jun 2018 08:17:31 +0200
Subject: [PATCH] [vdpau] Fix black screen after pvr channel switch.

---
 xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.cpp              | 3 ++-
 xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.h                | 3 ++-
 xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.cpp | 4 ++--
 xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.h   | 6 +++---
 4 files changed, 9 insertions(+), 7 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.cpp
index 3d9ccda15a6f..f43833f93e1d 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.cpp
@@ -536,6 +536,7 @@ bool CDecoder::Open(AVCodecContext* avctx, AVCodecContext* mainctx, const enum A
     return false;
   }
   m_vdpauConfig.numRenderBuffers = 5;
+  m_vdpauConfig.timeOpened = CurrentHostCounter();
   m_decoderThread = CThread::GetCurrentThreadId();
 
   if (!CVDPAUContext::EnsureContext(&m_vdpauConfig.context))
@@ -3204,7 +3205,7 @@ CVdpauRenderPicture* COutput::ProcessMixerPicture()
     retPic->procPic = procPic;
     retPic->device = reinterpret_cast<void*>(m_config.context->GetDevice());
     retPic->procFunc = reinterpret_cast<void*>(m_config.context->GetProcs().vdp_get_proc_address);
-    retPic->ident = m_config.vdpau + m_config.resetCounter;
+    retPic->ident = m_config.timeOpened + m_config.resetCounter;
 
     retPic->DVDPic.SetParams(procPic.DVDPic);
     if (!procPic.isYuv)
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.h
index 9ed0f4324d02..25c2f9faea58 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/VDPAU.h
@@ -175,6 +175,7 @@ struct CVdpauConfig
   CVDPAUContext *context;
   CProcessInfo *processInfo;
   int resetCounter;
+  uint64_t timeOpened;
 };
 
 /**
@@ -240,7 +241,7 @@ class CVdpauRenderPicture : public CVideoBuffer
   CRect crop;
   void *device;
   void *procFunc;
-  void *ident;
+  int64_t ident;
 };
 
 //-----------------------------------------------------------------------------
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.cpp
index 5ef1ec14a64d..db3cb4a1f6c1 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.cpp
@@ -29,7 +29,7 @@ using namespace VDPAU;
 // interop state
 //-----------------------------------------------------------------------------
 
-bool CInteropState::Init(void *device, void *procFunc, void *ident)
+bool CInteropState::Init(void *device, void *procFunc, int64_t ident)
 {
   m_device = device;
   m_procFunc = procFunc;
@@ -72,7 +72,7 @@ InteropInfo &CInteropState::GetInterop()
   return m_interop;
 }
 
-bool CInteropState::NeedInit(void *device, void *procFunc, void *ident)
+bool CInteropState::NeedInit(void *device, void *procFunc, int64_t ident)
 {
   if (m_device != device)
     return true;
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.h b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.h
index f47b793e5930..99ec238372ae 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.h
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/VdpauGL.h
@@ -46,15 +46,15 @@ struct InteropInfo
 class CInteropState
 {
 public:
-  bool Init(void *device, void *procFunc, void *ident);
+  bool Init(void *device, void *procFunc, int64_t ident);
   void Finish();
   InteropInfo &GetInterop();
-  bool NeedInit(void *device, void *procFunc, void *ident);
+  bool NeedInit(void *device, void *procFunc, int64_t ident);
 
 protected:
   void *m_device = nullptr;
   void *m_procFunc = nullptr;
-  void *m_ident = nullptr;
+  int64_t m_ident = 0;
   InteropInfo m_interop;
 };
 
