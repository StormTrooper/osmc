From f4bdf5db48b9bf3b6671a1fe920cf3e14a216f0f Mon Sep 17 00:00:00 2001
From: Greg McCarthy <greg@gjmccarthy.co.uk>
Date: Sat, 26 Jan 2019 09:55:51 +0000
Subject: [PATCH] Revert #15321

---
 cmake/scripts/common/HandleDepends.cmake | 25 +++++++++++++++++++------
 1 file changed, 19 insertions(+), 6 deletions(-)

diff --git a/cmake/scripts/common/HandleDepends.cmake b/cmake/scripts/common/HandleDepends.cmake
index 40e382b94c..a547d95848 100644
--- a/cmake/scripts/common/HandleDepends.cmake
+++ b/cmake/scripts/common/HandleDepends.cmake
@@ -88,12 +88,16 @@ function(add_addon_depends addon searchpath)
           message(${BUILD_ARGS})
         endif()
 
-        set(PATCH_COMMAND)
+        # prepare patchfile. ensure we have a clean file after reconfiguring
+        set(PATCH_FILE ${BUILD_DIR}/${id}/tmp/patch.cmake)
+        file(REMOVE ${PATCH_FILE})        
 
         # if there's a CMakeLists.txt use it to prepare the build
         if(EXISTS ${dir}/CMakeLists.txt)
           set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS ${dir}/CMakeLists.txt)
-          list(APPEND PATCH_COMMAND COMMAND ${CMAKE_COMMAND} -E copy_if_different ${dir}/CMakeLists.txt ${BUILD_DIR}/${id}/src/${id})
+          file(APPEND ${PATCH_FILE}
+               "file(COPY ${dir}/CMakeLists.txt
+                     DESTINATION ${BUILD_DIR}/${id}/src/${id})\n")        
         endif()
 
         # check if we have patches to apply
@@ -120,13 +124,14 @@ function(add_addon_depends addon searchpath)
               file(READ ${patch} patch_content_hex HEX)
               # Force handle LF-only line endings
               if(NOT patch_content_hex MATCHES "0d0a")
-                list(APPEND PATCH_PROGRAM --binary)
+                set(PATCH_PROGRAM "\"${PATCH_PROGRAM}\" --binary") 
               endif()
             endif()
           endif()
 
           set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS ${patch})
-          list(APPEND PATCH_COMMAND COMMAND ${PATCH_PROGRAM} -p1 -i ${patch})
+          file(APPEND ${PATCH_FILE}
+               "execute_process(COMMAND ${PATCH_PROGRAM} -p1 -i \"${patch}\")\n")
         endforeach()
 
 
@@ -163,11 +168,19 @@ function(add_addon_depends addon searchpath)
         if(CROSS_AUTOCONF AND AUTOCONF_FILES)
           foreach(afile ${AUTOCONF_FILES})
             set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS ${afile})
-            list(APPEND PATCH_COMMAND COMMAND ${CMAKE_COMMAND} -E echo "AUTOCONF: copying ${afile} to ${BUILD_DIR}/${id}/src/${id}")
-            list(APPEND PATCH_COMMAND COMMAND ${CMAKE_COMMAND} -E copy_if_different ${afile} ${BUILD_DIR}/${id}/src/${id})
+            file(APPEND ${PATCH_FILE}
+                 "message(STATUS \"AUTOCONF: copying ${afile} to ${BUILD_DIR}/${id}/src/${id}\")\n
+                 file(COPY ${afile} DESTINATION ${BUILD_DIR}/${id}/src/${id})\n")
           endforeach()
         endif()
 
+        # if the patch file exists we need to set the PATCH_COMMAND
+        set(PATCH_COMMAND "")
+        if(EXISTS ${PATCH_FILE})
+          set(PATCH_COMMAND ${CMAKE_COMMAND} -P ${PATCH_FILE})
+        endif()
+
+
         # prepare the setup of the call to externalproject_add()
         set(EXTERNALPROJECT_SETUP PREFIX ${BUILD_DIR}/${id}
                                   CMAKE_ARGS ${extraflags} ${BUILD_ARGS}
-- 
2.16.4

