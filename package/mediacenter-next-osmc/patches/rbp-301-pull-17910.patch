From bf7eb5342704218af7a681f3a8fd267936af88f8 Mon Sep 17 00:00:00 2001
From: Alwin Esch <alwin.esch@web.de>
Date: Wed, 20 May 2020 18:10:47 +0200
Subject: [PATCH] [clang] fix Disabling Formatting on a Piece of Code

Found during other request cleanup that it has not worked.

Before was them used as "clang format" without dash.
In accordance with https://clang.llvm.org/docs/ClangFormatStyleOptions.html
it must contain the dash.
---
 .../kodi-addon-dev-kit/include/kodi/versions.h       |  4 ++--
 xbmc/music/MusicDatabase.cpp                         | 12 ++++++------
 xbmc/playlists/SmartPlayList.cpp                     |  8 ++++----
 xbmc/utils/SortUtils.cpp                             |  8 ++++----
 xbmc/utils/StringUtils.cpp                           |  4 ++--
 5 files changed, 18 insertions(+), 18 deletions(-)

diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
index fcb0b0438549..49b64b3c1598 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
@@ -33,7 +33,7 @@
 // Ignore clang here, as this must be good in overview and as the main reason,
 // because cmake uses this area in this form to perform its addon dependency
 // check.
-// clang format off
+// clang-format off
 #define ADDON_GLOBAL_VERSION_MAIN                     "1.2.0"
 #define ADDON_GLOBAL_VERSION_MAIN_MIN                 "1.2.0"
 #define ADDON_GLOBAL_VERSION_MAIN_XML_ID              "kodi.binary.global.main"
@@ -132,7 +132,7 @@
 #define ADDON_INSTANCE_VERSION_VIDEOCODEC_DEPENDS     "addon-instance/VideoCodec.h" \
                                                       "StreamCodec.h" \
                                                       "StreamCrypto.h"
-// clang format on
+// clang-format on
 
 //==============================================================================
 ///
diff --git a/xbmc/music/MusicDatabase.cpp b/xbmc/music/MusicDatabase.cpp
index a553cda927b1..22a102780b60 100644
--- a/xbmc/music/MusicDatabase.cpp
+++ b/xbmc/music/MusicDatabase.cpp
@@ -5382,7 +5382,7 @@ bool CMusicDatabase::GetSongsNav(const std::string& strBaseDir, CFileItemList& i
   return GetSongsFullByWhere(musicUrl.ToString(), filter, items, sortDescription, true);
 }
 
-// clang format off
+// clang-format off
 typedef struct
 {
   std::string fieldJSON;  // Field name in JSON schema
@@ -5431,7 +5431,7 @@ static const translateJSONField JSONtoDBArtist[] = {
   { "isalbumartist",               "bool", false, "",                       "" },
   { "thumbnail",                 "string", false, "",                       "" },
   { "fanart",                    "string", false, "",                       "" }
-  // clang format on
+  // clang-format on
   /*
   Sources and genre are related via album, and so the dataset only contains source
   and genre pairs that exist, rather than all the genres being repeated for every
@@ -6066,7 +6066,7 @@ bool CMusicDatabase::GetArtistsByWhereJSON(const std::set<std::string>& fields,
   return false;
 }
 
-// clang format off
+// clang-format off
 static const translateJSONField JSONtoDBAlbum[] = {
   // albumview (inc scalar subquery fields use in filter rules)
   { "title",                     "string", true,  "strAlbum",               "" },  // Label field at top
@@ -6116,7 +6116,7 @@ static const translateJSONField JSONtoDBAlbum[] = {
    only calculated (slowing query) when field is in field list.
   */
 };
-//clang format on
+// clang-format on
 
 static const size_t NUM_ALBUM_FIELDS = sizeof(JSONtoDBAlbum) / sizeof(translateJSONField);
 
@@ -6444,7 +6444,7 @@ bool CMusicDatabase::GetAlbumsByWhereJSON(const std::set<std::string>& fields, c
   return false;
 }
 
-// clang format off
+// clang-format off
 static const translateJSONField JSONtoDBSong[] = {
   // table and single value join fields
   { "title",                     "string", true,  "strTitle",               "" }, // Label field at top
@@ -6521,7 +6521,7 @@ static const translateJSONField JSONtoDBSong[] = {
 
   */
 };
-//clang format on
+// clang-format on
 
 static const size_t NUM_SONG_FIELDS = sizeof(JSONtoDBSong) / sizeof(translateJSONField);
 
diff --git a/xbmc/playlists/SmartPlayList.cpp b/xbmc/playlists/SmartPlayList.cpp
index 57116117b411..834ba6c062ad 100644
--- a/xbmc/playlists/SmartPlayList.cpp
+++ b/xbmc/playlists/SmartPlayList.cpp
@@ -45,7 +45,7 @@ typedef struct
   int localizedString;
 } translateField;
 
-//clang format off
+// clang-format off
 static const translateField fields[] = {
   { "none",              FieldNone,                    CDatabaseQueryRule::TEXT_FIELD,     NULL,                                 false, 231 },
   { "filename",          FieldFilename,                CDatabaseQueryRule::TEXT_FIELD,     NULL,                                 false, 561 },
@@ -127,7 +127,7 @@ static const translateField fields[] = {
   { "bitrate",           FieldMusicBitRate,            CDatabaseQueryRule::NUMERIC_FIELD,  NULL,                                 false, 623 },
   { "channels",          FieldNoOfChannels,            CDatabaseQueryRule::NUMERIC_FIELD,  StringValidation::IsPositiveInteger,  false, 253 },
 };
-// clang format on
+// clang-format on
 
 typedef struct
 {
@@ -137,7 +137,7 @@ typedef struct
   int localizedString;
 } group;
 
-//clang format off
+// clang-format off
 static const group groups[] = { { "",               FieldUnknown,   false,    571 },
                                 { "none",           FieldNone,      false,    231 },
                                 { "sets",           FieldSet,       true,   20434 },
@@ -153,7 +153,7 @@ static const group groups[] = { { "",               FieldUnknown,   false,    57
                                 { "tags",           FieldTag,       false,  20459 },
                                 { "originalyears",  FieldOrigYear,  false,  38078 },
                               };
-// clang format on
+// clang-format on
 
 #define RULE_VALUE_SEPARATOR  " / "
 
diff --git a/xbmc/utils/SortUtils.cpp b/xbmc/utils/SortUtils.cpp
index 23a4caf4f54a..840e69ec06ee 100644
--- a/xbmc/utils/SortUtils.cpp
+++ b/xbmc/utils/SortUtils.cpp
@@ -584,7 +584,7 @@ bool SorterIndirectIgnoreFoldersDescending(const SortItemPtr &left, const SortIt
   return SorterIgnoreFoldersDescending(*left, *right);
 }
 
-//clang format off
+// clang-format off
 std::map<SortBy, SortUtils::SortPreparator> fillPreparators()
 {
   std::map<SortBy, SortUtils::SortPreparator> preparators;
@@ -649,7 +649,7 @@ std::map<SortBy, SortUtils::SortPreparator> fillPreparators()
 
   return preparators;
 }
-//clang format on
+// clang-format on
 
 std::map<SortBy, Fields> fillSortingFields()
 {
@@ -1093,7 +1093,7 @@ typedef struct
   int           label;
 } sort_map;
 
-//clang format off
+// clang-format off
 const sort_map table[] = {
   { SortByLabel,                    SORT_METHOD_LABEL,                        SortAttributeNone,          551 },
   { SortByLabel,                    SORT_METHOD_LABEL_IGNORE_THE,             SortAttributeIgnoreArticle, 551 },
@@ -1164,7 +1164,7 @@ const sort_map table[] = {
   { SortBySubtitleLanguage,         SORT_METHOD_NONE,                         SortAttributeNone,          21448 },
   { SortByRandom,                   SORT_METHOD_NONE,                         SortAttributeNone,          590 }
 };
-//clang format on
+// clang-format on
 
 SORT_METHOD SortUtils::TranslateOldSortMethod(SortBy sortBy, bool ignoreArticle)
 {
diff --git a/xbmc/utils/StringUtils.cpp b/xbmc/utils/StringUtils.cpp
index d7b5ffa5ff05..90e615adaeb1 100644
--- a/xbmc/utils/StringUtils.cpp
+++ b/xbmc/utils/StringUtils.cpp
@@ -769,7 +769,7 @@ int StringUtils::FindNumber(const std::string& strInput, const std::string &strF
 // Plane maps for MySQL utf8_general_ci (now known as utf8mb3_general_ci) collation
 // Derived from https://github.com/MariaDB/server/blob/10.5/strings/ctype-utf8.c
 
-// clang format off
+// clang-format off
 static const uint16_t plane00[] = {
   0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000A, 0x000B, 0x000C, 0x000D, 0x000E, 0x000F,
   0x0010, 0x0011, 0x0012, 0x0013, 0x0014, 0x0015, 0x0016, 0x0017, 0x0018, 0x0019, 0x001A, 0x001B, 0x001C, 0x001D, 0x001E, 0x001F,
@@ -1005,7 +1005,7 @@ static const uint16_t* const planemap[256] = {
     NULL,    NULL,    NULL,    NULL,    NULL,    NULL,    NULL, NULL, NULL,    NULL,    NULL,
     NULL,    NULL,    planeFF
 };
-// clang format on
+// clang-format on
 
 static wchar_t GetCollationWeight(const wchar_t& r)
 {
