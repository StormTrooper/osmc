From 2a548cdafdb43a03981512fc9972d836530a883b Mon Sep 17 00:00:00 2001
From: fritsch <Peter.Fruehberger@gmail.com>
Date: Sat, 11 Jul 2020 19:47:43 +0200
Subject: [PATCH] Revert "Revert "AESinkAudioTrack: Support multi channel
 float""

This reverts commit 9ac14260d61d5659b35bace0e9baa8aeb4e395c7.
---
 .../cores/AudioEngine/Sinks/AESinkAUDIOTRACK.cpp | 16 +++++++++++++++-
 xbmc/cores/AudioEngine/Sinks/AESinkAUDIOTRACK.h  |  1 +
 2 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkAUDIOTRACK.cpp b/xbmc/cores/AudioEngine/Sinks/AESinkAUDIOTRACK.cpp
index 9034e27a6a99..10efd5a43ab8 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkAUDIOTRACK.cpp
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkAUDIOTRACK.cpp
@@ -234,6 +234,7 @@ CAEDeviceInfo CAESinkAUDIOTRACK::m_info_raw;
 bool CAESinkAUDIOTRACK::m_hasIEC = false;
 std::set<unsigned int> CAESinkAUDIOTRACK::m_sink_sampleRates;
 bool CAESinkAUDIOTRACK::m_sinkSupportsFloat = false;
+bool CAESinkAUDIOTRACK::m_sinkSupportsMultiChannelFloat = false;
 
 ////////////////////////////////////////////////////////////////////////////////////////////
 CAESinkAUDIOTRACK::CAESinkAUDIOTRACK()
@@ -384,7 +385,12 @@ bool CAESinkAUDIOTRACK::Initialize(AEAudioFormat &format, std::string &device)
   {
     m_passthrough = false;
     m_format.m_sampleRate     = m_sink_sampleRate;
-    if (m_sinkSupportsFloat && m_format.m_channelLayout.Count() == 2)
+    if (m_sinkSupportsMultiChannelFloat)
+    {
+      m_encoding = CJNIAudioFormat::ENCODING_PCM_FLOAT;
+      m_format.m_dataFormat     = AE_FMT_FLOAT;
+    }
+    else if (m_sinkSupportsFloat && m_format.m_channelLayout.Count() == 2)
     {
       m_encoding = CJNIAudioFormat::ENCODING_PCM_FLOAT;
       m_format.m_dataFormat     = AE_FMT_FLOAT;
@@ -1070,6 +1076,10 @@ void CAESinkAUDIOTRACK::UpdateAvailablePCMCapabilities()
 
   int encoding = CJNIAudioFormat::ENCODING_PCM_16BIT;
   m_sinkSupportsFloat = VerifySinkConfiguration(native_sampleRate, CJNIAudioFormat::CHANNEL_OUT_STEREO, CJNIAudioFormat::ENCODING_PCM_FLOAT);
+  // Only try for Android 7 or later - there are a lot of old devices that open successfully
+  // but won't work correctly under the hood (famouse example: old FireTV)
+  if (CJNIAudioManager::GetSDKVersion() > 23)
+    m_sinkSupportsMultiChannelFloat = VerifySinkConfiguration(native_sampleRate, CJNIAudioFormat::CHANNEL_OUT_7POINT1_SURROUND, CJNIAudioFormat::ENCODING_PCM_FLOAT);
 
   if (m_sinkSupportsFloat)
   {
@@ -1077,6 +1087,10 @@ void CAESinkAUDIOTRACK::UpdateAvailablePCMCapabilities()
     m_info.m_dataFormats.push_back(AE_FMT_FLOAT);
     CLog::Log(LOGINFO, "Float is supported");
   }
+  if (m_sinkSupportsMultiChannelFloat)
+  {
+    CLog::Log(LOGNOTICE, "Multi channel Float is supported");
+  }
 
   int test_sample[] = { 32000, 44100, 48000, 88200, 96000, 176400, 192000 };
   int test_sample_sz = sizeof(test_sample) / sizeof(int);
diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkAUDIOTRACK.h b/xbmc/cores/AudioEngine/Sinks/AESinkAUDIOTRACK.h
index 88ae3be1b446..6409c42c238b 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkAUDIOTRACK.h
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkAUDIOTRACK.h
@@ -78,6 +78,7 @@ class CAESinkAUDIOTRACK : public IAESink
   static bool m_hasIEC;
   static std::set<unsigned int>       m_sink_sampleRates;
   static bool m_sinkSupportsFloat;
+  static bool m_sinkSupportsMultiChannelFloat;
 
   AEAudioFormat      m_format;
   int16_t           *m_alignedS16;
