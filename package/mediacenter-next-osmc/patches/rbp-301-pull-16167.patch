From cd8c4c4ab665e19ec412f11a56ecb73d0c27cac9 Mon Sep 17 00:00:00 2001
From: Lukas Rusak <lorusak@gmail.com>
Date: Sat, 18 May 2019 10:51:56 -0700
Subject: [PATCH 1/2] AirPlayServer: don't dynamically open libplist

---
 CMakeLists.txt                       |   5 +-
 cmake/modules/FindPlist.cmake        |  19 ++---
 cmake/scripts/android/Install.cmake  |   1 +
 cmake/scripts/common/Macros.cmake    |  33 --------
 xbmc/DllPaths_generated.h.in         |   1 -
 xbmc/DllPaths_generated_android.h.in |   1 -
 xbmc/DllPaths_win32.h                |   1 -
 xbmc/network/AirPlayServer.cpp       | 116 +++++++++++----------------
 xbmc/network/AirPlayServer.h         |   2 -
 xbmc/network/CMakeLists.txt          |   3 +-
 xbmc/network/DllLibPlist.h           |  62 --------------
 11 files changed, 56 insertions(+), 188 deletions(-)
 delete mode 100644 xbmc/network/DllLibPlist.h

diff --git a/CMakeLists.txt b/CMakeLists.txt
index d7650b57f085..ac29fca19a77 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -147,6 +147,7 @@ set(optional_deps Alsa
                   MDNS
                   MicroHttpd
                   NFS
+                  Plist
                   PulseAudio
                   Python
                   SmbClient
@@ -155,16 +156,12 @@ set(optional_deps Alsa
                   XSLT
                   ${PLATFORM_OPTIONAL_DEPS})
 
-# Optional, dyloaded deps. Keep in alphabetical order please
-set(dyload_optional Plist)
-
 # Required tools
 find_package(TexturePacker REQUIRED)
 find_package(JsonSchemaBuilder REQUIRED)
 
 # Check optional deps first, since their availability can influence required ones, e.g. ffmpeg
 core_optional_dep(${optional_deps})
-core_optional_dyload_dep(${dyload_optional})
 core_require_dep(${required_deps})
 
 if(ENABLE_MARIADBCLIENT AND NOT ENABLE_MARIADBCLIENT STREQUAL AUTO AND ENABLE_MYSQLCLIENT AND NOT ENABLE_MYSQLCLIENT STREQUAL AUTO)
diff --git a/cmake/modules/FindPlist.cmake b/cmake/modules/FindPlist.cmake
index cd143e982bf3..2c86b7493acd 100644
--- a/cmake/modules/FindPlist.cmake
+++ b/cmake/modules/FindPlist.cmake
@@ -23,20 +23,13 @@ find_path(PLIST_INCLUDE_DIR plist/plist.h
 
 set(PLIST_VERSION ${PC_PLIST_VERSION})
 
+find_library(PLIST_LIBRARY NAMES plist libplist
+                                 PATHS ${PC_PLIST_LIBDIR})
+
 include(FindPackageHandleStandardArgs)
-if(NOT WIN32)
-  find_library(PLIST_LIBRARY NAMES plist
-                                   PATHS ${PC_PLIST_LIBDIR})
-
-  find_package_handle_standard_args(Plist
-                                    REQUIRED_VARS PLIST_LIBRARY PLIST_INCLUDE_DIR
-                                    VERSION_VAR PLIST_VERSION)
-else()
-  # Dynamically loaded DLL
-  find_package_handle_standard_args(Plist
-                                    REQUIRED_VARS PLIST_INCLUDE_DIR
-                                    VERSION_VAR PLIST_VERSION)
-endif()
+find_package_handle_standard_args(Plist
+                                  REQUIRED_VARS PLIST_LIBRARY PLIST_INCLUDE_DIR
+                                  VERSION_VAR PLIST_VERSION)
 
 if(PLIST_FOUND)
   set(PLIST_LIBRARIES ${PLIST_LIBRARY})
diff --git a/cmake/scripts/android/Install.cmake b/cmake/scripts/android/Install.cmake
index a121295f3105..169cb294eb93 100644
--- a/cmake/scripts/android/Install.cmake
+++ b/cmake/scripts/android/Install.cmake
@@ -154,6 +154,7 @@ foreach(lib IN LISTS required_dyload dyload_optional ITEMS Shairplay)
 endforeach()
 add_bundle_file(${ASS_LIBRARY} ${libdir} "")
 add_bundle_file(${BLURAY_LIBRARY} ${libdir} "")
+add_bundle_file(${PLIST_LIBRARY} ${libdir} "")
 add_bundle_file(${SMBCLIENT_LIBRARY} ${libdir} "")
 
 # Main targets from Makefile.in
diff --git a/cmake/scripts/common/Macros.cmake b/cmake/scripts/common/Macros.cmake
index eefd7c88039f..590970d9c4d6 100644
--- a/cmake/scripts/common/Macros.cmake
+++ b/cmake/scripts/common/Macros.cmake
@@ -450,39 +450,6 @@ function(core_optional_dep)
   set(final_message ${final_message} PARENT_SCOPE)
 endfunction()
 
-# add optional dyloaded dependencies of main application
-# Arguments:
-#   dep_list One or many dependency specifications (see split_dependency_specification)
-#            for syntax). The dependency name is used uppercased as variable prefix.
-# On return:
-#   dependency optionally added to ${SYSTEM_INCLUDES}, ${DEP_DEFINES}, ${dep}_SONAME is set up
-function(core_optional_dyload_dep)
-  foreach(depspec ${ARGN})
-    set(_required False)
-    split_dependency_specification(${depspec} dep version)
-    setup_enable_switch()
-    if(${enable_switch} STREQUAL AUTO)
-      find_package_with_ver(${dep} ${version})
-    elseif(${${enable_switch}})
-      find_package_with_ver(${dep} ${version} REQUIRED)
-      set(_required True)
-    endif()
-
-    if(${depup}_FOUND)
-      list(APPEND SYSTEM_INCLUDES ${${depup}_INCLUDE_DIRS})
-      find_soname(${depup} REQUIRED)
-      list(APPEND DEP_DEFINES ${${depup}_DEFINITIONS})
-      set(final_message ${final_message} "${depup} enabled: Yes" PARENT_SCOPE)
-      export_dep()
-      set(${depup}_SONAME ${${depup}_SONAME} PARENT_SCOPE)
-    elseif(_required)
-      message(FATAL_ERROR "${depup} enabled but not found")
-    else()
-      set(final_message ${final_message} "${depup} enabled: No" PARENT_SCOPE)
-    endif()
-  endforeach()
-endfunction()
-
 function(core_file_read_filtered result filepattern)
   # Reads STRINGS from text files
   #  with comments filtered out
diff --git a/xbmc/DllPaths_generated.h.in b/xbmc/DllPaths_generated.h.in
index a2457c9f821a..c74a62c63c44 100644
--- a/xbmc/DllPaths_generated.h.in
+++ b/xbmc/DllPaths_generated.h.in
@@ -12,7 +12,6 @@
 #define PREFIX_USR_PATH        "@prefix@"
 
 /* libraries */
-#define DLL_PATH_LIBPLIST      "@PLIST_SONAME@"
 #define DLL_PATH_LIBSHAIRPLAY  "@SHAIRPLAY_SONAME@"
 
 /* VideoPlayer */
diff --git a/xbmc/DllPaths_generated_android.h.in b/xbmc/DllPaths_generated_android.h.in
index d2aaf9a4eb7d..3986ba1d6444 100644
--- a/xbmc/DllPaths_generated_android.h.in
+++ b/xbmc/DllPaths_generated_android.h.in
@@ -17,7 +17,6 @@
 //   We only keep @ARCH@ here to retain the same structure as *nix.
 // * foo.so will be renamed libfoo.so in the packaging stage
 
-#define DLL_PATH_LIBPLIST      "@PLIST_SONAME@"
 #define DLL_PATH_LIBSHAIRPLAY  "@SHAIRPLAY_SONAME@"
 
 /* VideoPlayer */
diff --git a/xbmc/DllPaths_win32.h b/xbmc/DllPaths_win32.h
index 2bfd121623be..995638655d2e 100644
--- a/xbmc/DllPaths_win32.h
+++ b/xbmc/DllPaths_win32.h
@@ -9,7 +9,6 @@
 #pragma once
 
 /* libraries */
-#define DLL_PATH_LIBPLIST      "special://xbmcbin/libplist.dll"
 #define DLL_PATH_LIBSHAIRPLAY  "special://xbmcbin/shairplay.dll"
 
 /* VideoPlayer */
diff --git a/xbmc/network/AirPlayServer.cpp b/xbmc/network/AirPlayServer.cpp
index 81b09877320d..087b4ed5ce1f 100644
--- a/xbmc/network/AirPlayServer.cpp
+++ b/xbmc/network/AirPlayServer.cpp
@@ -14,7 +14,6 @@
 
 #include <netinet/in.h>
 #include <arpa/inet.h>
-#include "DllLibPlist.h"
 #include "utils/log.h"
 #include "utils/StringUtils.h"
 #include "threads/SingleLock.h"
@@ -37,6 +36,8 @@
 #include "network/Zeroconf.h"
 #endif // HAS_ZEROCONF
 
+#include <plist/plist.h>
+
 using namespace KODI::MESSAGING;
 using KODI::UTILITY::CDigest;
 
@@ -455,7 +456,6 @@ CAirPlayServer::CTCPClient::CTCPClient()
   m_httpParser = new HttpParser();
 
   m_addrlen = sizeof(struct sockaddr_storage);
-  m_pLibPlist = new DllLibPlist();
 
   m_bAuthenticated = false;
   m_lastEvent = EVENT_NONE;
@@ -466,16 +466,10 @@ CAirPlayServer::CTCPClient::CTCPClient(const CTCPClient& client)
 {
   Copy(client);
   m_httpParser = new HttpParser();
-  m_pLibPlist = new DllLibPlist();
 }
 
 CAirPlayServer::CTCPClient::~CTCPClient()
 {
-  if (m_pLibPlist->IsLoaded())
-  {
-    m_pLibPlist->Unload();
-  }
-  delete m_pLibPlist;
   delete m_httpParser;
 }
 
@@ -483,7 +477,6 @@ CAirPlayServer::CTCPClient& CAirPlayServer::CTCPClient::operator=(const CTCPClie
 {
   Copy(client);
   m_httpParser = new HttpParser();
-  m_pLibPlist = new DllLibPlist();
   return *this;
 }
 
@@ -736,20 +729,11 @@ void CAirPlayServer::restoreVolume()
   }
 }
 
-void dumpPlist(DllLibPlist *pLibPlist, plist_t *dict)
-{
-  char *plist = NULL;
-  uint32_t len = 0;
-  pLibPlist->plist_to_xml(*dict,&plist, &len);
-  CLog::Log(LOGDEBUG, "AIRPLAY-DUMP: %s", plist);
-
-}
-
-std::string getStringFromPlist(DllLibPlist *pLibPlist,plist_t node)
+std::string getStringFromPlist(plist_t node)
 {
   std::string ret;
   char *tmpStr = nullptr;
-  pLibPlist->plist_get_string_val(node, &tmpStr);
+  plist_get_string_val(node, &tmpStr);
   ret = tmpStr;
   free(tmpStr);
   return ret;
@@ -872,70 +856,64 @@ int CAirPlayServer::CTCPClient::ProcessRequest( std::string& responseHeader,
     {
       CAirPlayServer::m_isPlaying++;
 
-      if (m_pLibPlist->Load())
-      {
-        m_pLibPlist->EnableDelayedUnload(false);
+      const char* bodyChr = m_httpParser->getBody();
 
-        const char* bodyChr = m_httpParser->getBody();
+      plist_t dict = NULL;
+      plist_from_bin(bodyChr, m_httpParser->getContentLength(), &dict);
 
-        plist_t dict = NULL;
-        m_pLibPlist->plist_from_bin(bodyChr, m_httpParser->getContentLength(), &dict);
+      if (plist_dict_get_size(dict))
+      {
+        plist_t tmpNode = plist_dict_get_item(dict, "Start-Position");
+        if (tmpNode)
+        {
+          double tmpDouble = 0;
+          plist_get_real_val(tmpNode, &tmpDouble);
+          position = (float)tmpDouble;
+        }
 
-        if (m_pLibPlist->plist_dict_get_size(dict))
+        tmpNode = plist_dict_get_item(dict, "Content-Location");
+        if (tmpNode)
         {
-          plist_t tmpNode = m_pLibPlist->plist_dict_get_item(dict, "Start-Position");
-          if (tmpNode)
-          {
-            double tmpDouble = 0;
-            m_pLibPlist->plist_get_real_val(tmpNode, &tmpDouble);
-            position = (float)tmpDouble;
-          }
+          location = getStringFromPlist(tmpNode);
+          tmpNode = NULL;
+        }
 
-          tmpNode = m_pLibPlist->plist_dict_get_item(dict, "Content-Location");
-          if (tmpNode)
+        tmpNode = plist_dict_get_item(dict, "rate");
+        if (tmpNode)
+        {
+          double rate = 0;
+          plist_get_real_val(tmpNode, &rate);
+          if (rate == 0.0)
           {
-            location = getStringFromPlist(m_pLibPlist, tmpNode);
-            tmpNode = NULL;
+            startPlayback = false;
           }
+          tmpNode = NULL;
+        }
 
-          tmpNode = m_pLibPlist->plist_dict_get_item(dict, "rate");
-          if (tmpNode)
-          {
-            double rate = 0;
-            m_pLibPlist->plist_get_real_val(tmpNode, &rate);
-            if (rate == 0.0)
-            {
-              startPlayback = false;
-            }
-            tmpNode = NULL;
-          }
+        // in newer protocol versions the location is given
+        // via host and path where host is ip:port and path is /path/file.mov
+        if (location.empty())
+          tmpNode = plist_dict_get_item(dict, "host");
+        if (tmpNode)
+        {
+          location = "http://";
+          location += getStringFromPlist(tmpNode);
 
-          // in newer protocol versions the location is given
-          // via host and path where host is ip:port and path is /path/file.mov
-          if (location.empty())
-              tmpNode = m_pLibPlist->plist_dict_get_item(dict, "host");
+          tmpNode = plist_dict_get_item(dict, "path");
           if (tmpNode)
           {
-            location = "http://";
-            location += getStringFromPlist(m_pLibPlist, tmpNode);
-
-            tmpNode = m_pLibPlist->plist_dict_get_item(dict, "path");
-            if (tmpNode)
-            {
-              location += getStringFromPlist(m_pLibPlist, tmpNode);
-            }
-          }
-
-          if (dict)
-          {
-            m_pLibPlist->plist_free(dict);
+            location += getStringFromPlist(tmpNode);
           }
         }
-        else
+
+        if (dict)
         {
-          CLog::Log(LOGERROR, "Error parsing plist");
+          plist_free(dict);
         }
-        m_pLibPlist->Unload();
+      }
+      else
+      {
+        CLog::Log(LOGERROR, "Error parsing plist");
       }
     }
     else
diff --git a/xbmc/network/AirPlayServer.h b/xbmc/network/AirPlayServer.h
index c1407272cc56..72dd9d8410fa 100644
--- a/xbmc/network/AirPlayServer.h
+++ b/xbmc/network/AirPlayServer.h
@@ -19,7 +19,6 @@
 #include "utils/HttpParser.h"
 #include "interfaces/IAnnouncer.h"
 
-class DllLibPlist;
 class CVariant;
 
 #define AIRPLAY_SERVER_VERSION_STR "101.28"
@@ -83,7 +82,6 @@ class CAirPlayServer : public CThread, public ANNOUNCEMENT::IAnnouncer
     void Copy(const CTCPClient& client);
 
     HttpParser* m_httpParser;
-    DllLibPlist *m_pLibPlist;//the lib
     bool m_bAuthenticated;
     int  m_lastEvent;
     std::string m_authNonce;
diff --git a/xbmc/network/CMakeLists.txt b/xbmc/network/CMakeLists.txt
index c8acb897d94c..97b43fa3c956 100644
--- a/xbmc/network/CMakeLists.txt
+++ b/xbmc/network/CMakeLists.txt
@@ -35,8 +35,7 @@ endif()
 
 if(PLIST_FOUND)
   list(APPEND SOURCES AirPlayServer.cpp)
-  list(APPEND HEADERS AirPlayServer.h
-                      DllLibPlist.h)
+  list(APPEND HEADERS AirPlayServer.h)
 endif()
 
 if(SHAIRPLAY_FOUND)
diff --git a/xbmc/network/DllLibPlist.h b/xbmc/network/DllLibPlist.h
deleted file mode 100644
index 66ef15ec2ba8..000000000000
--- a/xbmc/network/DllLibPlist.h
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- *  Copyright (C) 2011-2018 Team Kodi
- *  This file is part of Kodi - https://kodi.tv
- *
- *  SPDX-License-Identifier: GPL-2.0-or-later
- *  See LICENSES/README.md for more information.
- */
-
-#pragma once
-
-#include "DynamicDll.h"
-
-#include <plist/plist.h>
-
-class DllLibPlistInterface
-{
-public:
-  virtual ~DllLibPlistInterface() = default;
-
-  virtual void        plist_from_bin        (const char *plist_bin,   uint32_t length, plist_t * plist  )=0;
-  virtual plist_t     plist_new_dict        (void                                                       )=0;
-  virtual uint32_t    plist_dict_get_size   (plist_t node                                               )=0;
-  virtual void        plist_get_string_val  (plist_t node,            char **val                        )=0;
-  virtual void        plist_get_real_val    (plist_t node,            double *val                       )=0;
-  virtual plist_t     plist_dict_get_item   (plist_t node,            const char* key                   )=0;
-  virtual void        plist_free            (plist_t plist                                              )=0;
-  virtual void        plist_to_xml          (plist_t plist,           char **plist_xml, uint32_t * length)=0;
-  virtual void        plist_dict_new_iter   (plist_t node,            plist_dict_iter *iter             )=0;
-  virtual void        plist_dict_next_item  (plist_t node,            plist_dict_iter iter, char **key, plist_t *val) = 0;
-
-};
-
-class DllLibPlist : public DllDynamic, DllLibPlistInterface
-{
-  DECLARE_DLL_WRAPPER(DllLibPlist, DLL_PATH_LIBPLIST)
-  DEFINE_METHOD0(plist_t,       plist_new_dict)
-  DEFINE_METHOD1(uint32_t,      plist_dict_get_size,  (plist_t p1))
-  DEFINE_METHOD1(void,          plist_free,           (plist_t p1))
-  DEFINE_METHOD2(void,          plist_get_string_val, (plist_t p1,      char **p2))
-  DEFINE_METHOD2(void,          plist_get_real_val,   (plist_t p1,      double *p2))
-  DEFINE_METHOD2(void,          plist_dict_new_iter,  (plist_t p1,      plist_dict_iter* p2))
-  DEFINE_METHOD2(plist_t,       plist_dict_get_item,  (plist_t p1,      const char* p2))
-  DEFINE_METHOD3(void,          plist_from_bin,       (const char *p1,  uint32_t p2, plist_t *p3))
-  DEFINE_METHOD3(void,          plist_to_xml,         (plist_t p1,      char **p2, uint32_t *p3));
-  DEFINE_METHOD4(void,          plist_dict_next_item, (plist_t p1, plist_dict_iter p2, char **p3, plist_t *p4))
-
-
-  BEGIN_METHOD_RESOLVE()
-    RESOLVE_METHOD_RENAME(plist_new_dict,         plist_new_dict)
-    RESOLVE_METHOD_RENAME(plist_free,             plist_free)
-    RESOLVE_METHOD_RENAME(plist_dict_get_size,    plist_dict_get_size)
-    RESOLVE_METHOD_RENAME(plist_from_bin,         plist_from_bin)
-    RESOLVE_METHOD_RENAME(plist_get_real_val,     plist_get_real_val)
-    RESOLVE_METHOD_RENAME(plist_get_string_val,   plist_get_string_val)
-    RESOLVE_METHOD_RENAME(plist_dict_get_item,    plist_dict_get_item)
-    RESOLVE_METHOD_RENAME(plist_dict_new_iter,    plist_dict_new_iter)
-    RESOLVE_METHOD_RENAME(plist_dict_next_item,   plist_dict_next_item)
-    RESOLVE_METHOD_RENAME(plist_to_xml,           plist_to_xml)
-
-  END_METHOD_RESOLVE()
-};
-

From e48ccc9bb41ab9a34c771a3d4cf3b6aa334a2a18 Mon Sep 17 00:00:00 2001
From: Lukas Rusak <lorusak@gmail.com>
Date: Sat, 18 May 2019 10:00:47 -0700
Subject: [PATCH 2/2] AirTunesServer: don't dynamically open libshairplay

---
 CMakeLists.txt                       |  2 +-
 cmake/modules/FindShairplay.cmake    | 42 ++++++--------
 cmake/scripts/android/Install.cmake  |  1 +
 cmake/scripts/common/Macros.cmake    | 19 -------
 xbmc/DllPaths_generated.h.in         |  3 -
 xbmc/DllPaths_generated_android.h.in |  2 -
 xbmc/DllPaths_win32.h                |  3 -
 xbmc/network/AirTunesServer.cpp      | 83 ++++++++++++----------------
 xbmc/network/AirTunesServer.h        |  6 +-
 xbmc/network/CMakeLists.txt          |  3 +-
 xbmc/network/DllLibShairplay.h       | 56 -------------------
 11 files changed, 58 insertions(+), 162 deletions(-)
 delete mode 100644 xbmc/network/DllLibShairplay.h

diff --git a/CMakeLists.txt b/CMakeLists.txt
index ac29fca19a77..10362cdb9db3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -190,7 +190,7 @@ endif()
 if(ENABLE_AIRTUNES)
   find_package(Shairplay)
   if(SHAIRPLAY_FOUND)
-    core_require_dyload_dep(Shairplay)
+    core_require_dep(Shairplay)
   endif()
 endif()
 
diff --git a/cmake/modules/FindShairplay.cmake b/cmake/modules/FindShairplay.cmake
index bbb3372d6fb9..506cffd9af8d 100644
--- a/cmake/modules/FindShairplay.cmake
+++ b/cmake/modules/FindShairplay.cmake
@@ -17,32 +17,26 @@
 find_path(SHAIRPLAY_INCLUDE_DIR shairplay/raop.h)
 
 include(FindPackageHandleStandardArgs)
-if(NOT WIN32)
-  find_library(SHAIRPLAY_LIBRARY NAMES shairplay)
-
-  if(SHAIRPLAY_INCLUDE_DIR AND SHAIRPLAY_LIBRARY)
-    include(CheckCSourceCompiles)
-    set(CMAKE_REQUIRED_INCLUDES ${SHAIRPLAY_INCLUDE_DIRS})
-    set(CMAKE_REQUIRED_LIBRARIES ${SHAIRPLAY_LIBRARIES})
-    check_c_source_compiles("#include <shairplay/raop.h>
-
-                             int main()
-                             {
-                               struct raop_callbacks_s foo;
-                               foo.cls;
-                               return 0;
-                             }
-                            " HAVE_SHAIRPLAY_CALLBACK_CLS)
-  endif()
-
-  find_package_handle_standard_args(Shairplay
-                                    REQUIRED_VARS SHAIRPLAY_LIBRARY SHAIRPLAY_INCLUDE_DIR HAVE_SHAIRPLAY_CALLBACK_CLS)
-else()
-  # Dynamically loaded DLL
-  find_package_handle_standard_args(Shairplay
-                                    REQUIRED_VARS SHAIRPLAY_INCLUDE_DIR)
+find_library(SHAIRPLAY_LIBRARY NAMES shairplay libshairplay)
+
+if(SHAIRPLAY_INCLUDE_DIR AND SHAIRPLAY_LIBRARY)
+  include(CheckCSourceCompiles)
+  set(CMAKE_REQUIRED_INCLUDES ${SHAIRPLAY_INCLUDE_DIR})
+  set(CMAKE_REQUIRED_LIBRARIES ${SHAIRPLAY_LIBRARIES})
+  check_c_source_compiles("#include <shairplay/raop.h>
+
+                           int main()
+                           {
+                             struct raop_callbacks_s foo;
+                             foo.cls;
+                             return 0;
+                           }
+                          " HAVE_SHAIRPLAY_CALLBACK_CLS)
 endif()
 
+find_package_handle_standard_args(Shairplay
+                                  REQUIRED_VARS SHAIRPLAY_LIBRARY SHAIRPLAY_INCLUDE_DIR HAVE_SHAIRPLAY_CALLBACK_CLS)
+
 if(SHAIRPLAY_FOUND)
   set(SHAIRPLAY_LIBRARIES ${SHAIRPLAY_LIBRARY})
   set(SHAIRPLAY_INCLUDE_DIRS ${SHAIRPLAY_INCLUDE_DIR})
diff --git a/cmake/scripts/android/Install.cmake b/cmake/scripts/android/Install.cmake
index 169cb294eb93..90a395e99ce4 100644
--- a/cmake/scripts/android/Install.cmake
+++ b/cmake/scripts/android/Install.cmake
@@ -155,6 +155,7 @@ endforeach()
 add_bundle_file(${ASS_LIBRARY} ${libdir} "")
 add_bundle_file(${BLURAY_LIBRARY} ${libdir} "")
 add_bundle_file(${PLIST_LIBRARY} ${libdir} "")
+add_bundle_file(${SHAIRPLAY_LIBRARY} ${libdir} "")
 add_bundle_file(${SMBCLIENT_LIBRARY} ${libdir} "")
 
 # Main targets from Makefile.in
diff --git a/cmake/scripts/common/Macros.cmake b/cmake/scripts/common/Macros.cmake
index 590970d9c4d6..1b658f050434 100644
--- a/cmake/scripts/common/Macros.cmake
+++ b/cmake/scripts/common/Macros.cmake
@@ -386,25 +386,6 @@ function(core_require_dep)
   endforeach()
 endfunction()
 
-# add required dyloaded dependencies of main application
-# Arguments:
-#   dep_list One or many dependency specifications (see split_dependency_specification)
-#            for syntax). The dependency name is used uppercased as variable prefix.
-# On return:
-#   dependency added to ${SYSTEM_INCLUDES}, ${dep}_SONAME is set up
-function(core_require_dyload_dep)
-  foreach(depspec ${ARGN})
-    split_dependency_specification(${depspec} dep version)
-    find_package_with_ver(${dep} ${version} REQUIRED)
-    string(TOUPPER ${dep} depup)
-    list(APPEND SYSTEM_INCLUDES ${${depup}_INCLUDE_DIRS})
-    list(APPEND DEP_DEFINES ${${depup}_DEFINITIONS})
-    find_soname(${depup} REQUIRED)
-    export_dep()
-    set(${depup}_SONAME ${${depup}_SONAME} PARENT_SCOPE)
-  endforeach()
-endfunction()
-
 # helper macro for optional deps
 macro(setup_enable_switch)
   string(TOUPPER ${dep} depup)
diff --git a/xbmc/DllPaths_generated.h.in b/xbmc/DllPaths_generated.h.in
index c74a62c63c44..f29faa41fdc5 100644
--- a/xbmc/DllPaths_generated.h.in
+++ b/xbmc/DllPaths_generated.h.in
@@ -11,9 +11,6 @@
 /* prefix install location */
 #define PREFIX_USR_PATH        "@prefix@"
 
-/* libraries */
-#define DLL_PATH_LIBSHAIRPLAY  "@SHAIRPLAY_SONAME@"
-
 /* VideoPlayer */
 #define DLL_PATH_LIBDVDNAV     "special://xbmcbin/system/players/VideoPlayer/libdvdnav-@ARCH@.so"
 
diff --git a/xbmc/DllPaths_generated_android.h.in b/xbmc/DllPaths_generated_android.h.in
index 3986ba1d6444..d15988e3618e 100644
--- a/xbmc/DllPaths_generated_android.h.in
+++ b/xbmc/DllPaths_generated_android.h.in
@@ -17,8 +17,6 @@
 //   We only keep @ARCH@ here to retain the same structure as *nix.
 // * foo.so will be renamed libfoo.so in the packaging stage
 
-#define DLL_PATH_LIBSHAIRPLAY  "@SHAIRPLAY_SONAME@"
-
 /* VideoPlayer */
 #define DLL_PATH_LIBDVDNAV     "libdvdnav-@ARCH@.so"
 
diff --git a/xbmc/DllPaths_win32.h b/xbmc/DllPaths_win32.h
index 995638655d2e..ea41058a54b6 100644
--- a/xbmc/DllPaths_win32.h
+++ b/xbmc/DllPaths_win32.h
@@ -8,8 +8,5 @@
 
 #pragma once
 
-/* libraries */
-#define DLL_PATH_LIBSHAIRPLAY  "special://xbmcbin/shairplay.dll"
-
 /* VideoPlayer */
 #define DLL_PATH_LIBDVDNAV     "special://xbmcbin/libdvdnav.dll"
diff --git a/xbmc/network/AirTunesServer.cpp b/xbmc/network/AirTunesServer.cpp
index 38edc521eb88..7387333b8995 100644
--- a/xbmc/network/AirTunesServer.cpp
+++ b/xbmc/network/AirTunesServer.cpp
@@ -57,7 +57,6 @@
 using namespace XFILE;
 using namespace KODI::MESSAGING;
 
-DllLibShairplay *CAirTunesServer::m_pLibShairplay = NULL;
 CAirTunesServer *CAirTunesServer::ServerInstance = NULL;
 std::string CAirTunesServer::m_macAddress;
 std::string CAirTunesServer::m_metadata[3];
@@ -647,30 +646,23 @@ bool CAirTunesServer::IsRunning()
 
 bool CAirTunesServer::IsRAOPRunningInternal()
 {
-  if (m_pLibShairplay != nullptr && m_pRaop != nullptr)
+  if (m_pRaop)
   {
-    return m_pLibShairplay->raop_is_running(m_pRaop) != 0;
+    return raop_is_running(m_pRaop) != 0;
   }
+
   return false;
 }
 
-
 CAirTunesServer::CAirTunesServer(int port, bool nonlocal)
-: CThread("AirTunesActionThread"),
-  m_pRaop(nullptr)
+  : CThread("AirTunesActionThread")
 {
   m_port = port;
-  m_pLibShairplay = new DllLibShairplay();
-  m_pPipe         = new XFILE::CPipeFile;
+  m_pPipe = new XFILE::CPipeFile;
 }
 
 CAirTunesServer::~CAirTunesServer()
 {
-  if (m_pLibShairplay->IsLoaded())
-  {
-    m_pLibShairplay->Unload();
-  }
-  delete m_pLibShairplay;
   delete m_pPipe;
 }
 
@@ -696,45 +688,39 @@ bool CAirTunesServer::Initialize(const std::string &password)
 
   Deinitialize();
 
-  if (m_pLibShairplay->Load())
+  raop_callbacks_t ao = {};
+  ao.cls = m_pPipe;
+  ao.audio_init = AudioOutputFunctions::audio_init;
+  ao.audio_set_volume = AudioOutputFunctions::audio_set_volume;
+  ao.audio_set_metadata = AudioOutputFunctions::audio_set_metadata;
+  ao.audio_set_coverart = AudioOutputFunctions::audio_set_coverart;
+  ao.audio_process = AudioOutputFunctions::audio_process;
+  ao.audio_destroy = AudioOutputFunctions::audio_destroy;
+  ao.audio_remote_control_id = AudioOutputFunctions::audio_remote_control_id;
+  ao.audio_set_progress = AudioOutputFunctions::audio_set_progress;
+  m_pRaop = raop_init(1, &ao, RSA_KEY, nullptr); //1 - we handle one client at a time max
+
+  if (m_pRaop)
   {
+    char macAdr[6];
+    unsigned short port = (unsigned short)m_port;
 
-    raop_callbacks_t ao = {};
-    ao.cls                  = m_pPipe;
-    ao.audio_init           = AudioOutputFunctions::audio_init;
-    ao.audio_set_volume     = AudioOutputFunctions::audio_set_volume;
-    ao.audio_set_metadata   = AudioOutputFunctions::audio_set_metadata;
-    ao.audio_set_coverart   = AudioOutputFunctions::audio_set_coverart;
-    ao.audio_process        = AudioOutputFunctions::audio_process;
-    ao.audio_destroy        = AudioOutputFunctions::audio_destroy;
-    ao.audio_remote_control_id = AudioOutputFunctions::audio_remote_control_id;
-    ao.audio_set_progress   = AudioOutputFunctions::audio_set_progress;
-    m_pLibShairplay->EnableDelayedUnload(false);
-    m_pRaop = m_pLibShairplay->raop_init(1, &ao, RSA_KEY);//1 - we handle one client at a time max
-    ret = m_pRaop != NULL;
-
-    if(ret)
+    raop_set_log_level(m_pRaop, RAOP_LOG_WARNING);
+    if (CServiceBroker::GetSettingsComponent()->GetAdvancedSettings()->CanLogComponent(LOGAIRTUNES))
     {
-      char macAdr[6];
-      unsigned short port = (unsigned short)m_port;
-
-      m_pLibShairplay->raop_set_log_level(m_pRaop, RAOP_LOG_WARNING);
-      if(CServiceBroker::GetSettingsComponent()->GetAdvancedSettings()->CanLogComponent(LOGAIRTUNES))
-      {
-        m_pLibShairplay->raop_set_log_level(m_pRaop, RAOP_LOG_DEBUG);
-      }
-
-      m_pLibShairplay->raop_set_log_callback(m_pRaop, shairplay_log, NULL);
+      raop_set_log_level(m_pRaop, RAOP_LOG_DEBUG);
+    }
 
-      CNetworkInterface *net = CServiceBroker::GetNetwork().GetFirstConnectedInterface();
+    raop_set_log_callback(m_pRaop, shairplay_log, NULL);
 
-      if (net)
-      {
-        net->GetMacAddressRaw(macAdr);
-      }
+    CNetworkInterface* net = CServiceBroker::GetNetwork().GetFirstConnectedInterface();
 
-      ret = m_pLibShairplay->raop_start(m_pRaop, &port, macAdr, 6, password.c_str()) >= 0;
+    if (net)
+    {
+      net->GetMacAddressRaw(macAdr);
     }
+
+    ret = raop_start(m_pRaop, &port, macAdr, 6, password.c_str()) >= 0;
   }
   return ret;
 }
@@ -743,11 +729,10 @@ void CAirTunesServer::Deinitialize()
 {
   RegisterActionListener(false);
 
-  if (m_pLibShairplay && m_pLibShairplay->IsLoaded())
+  if (m_pRaop)
   {
-    m_pLibShairplay->raop_stop(m_pRaop);
-    m_pLibShairplay->raop_destroy(m_pRaop);
-    m_pLibShairplay->Unload();
+    raop_stop(m_pRaop);
+    raop_destroy(m_pRaop);
     m_pRaop = nullptr;
   }
 }
diff --git a/xbmc/network/AirTunesServer.h b/xbmc/network/AirTunesServer.h
index aafe64150bcb..8a385a05d642 100644
--- a/xbmc/network/AirTunesServer.h
+++ b/xbmc/network/AirTunesServer.h
@@ -11,7 +11,6 @@
 
 #pragma once
 
-#include "DllLibShairplay.h"
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <netinet/in.h>
@@ -25,6 +24,8 @@
 #include "interfaces/IAnnouncer.h"
 #include "interfaces/IActionListener.h"
 
+#include <shairplay/raop.h>
+
 class CDACP;
 class CVariant;
 
@@ -62,8 +63,7 @@ class CAirTunesServer : public ANNOUNCEMENT::IAnnouncer, public IActionListener,
   static void InformPlayerAboutPlayTimes();
 
   int m_port;
-  static DllLibShairplay *m_pLibShairplay;//the lib
-  raop_t *m_pRaop;
+  raop_t* m_pRaop = nullptr;
   XFILE::CPipeFile *m_pPipe;
   static CAirTunesServer *ServerInstance;
   static std::string m_macAddress;
diff --git a/xbmc/network/CMakeLists.txt b/xbmc/network/CMakeLists.txt
index 97b43fa3c956..40c6026f288e 100644
--- a/xbmc/network/CMakeLists.txt
+++ b/xbmc/network/CMakeLists.txt
@@ -40,8 +40,7 @@ endif()
 
 if(SHAIRPLAY_FOUND)
   list(APPEND SOURCES AirTunesServer.cpp)
-  list(APPEND HEADERS AirTunesServer.h
-                      DllLibShairplay.h)
+  list(APPEND HEADERS AirTunesServer.h)
 endif()
 
 if(MICROHTTPD_FOUND)
diff --git a/xbmc/network/DllLibShairplay.h b/xbmc/network/DllLibShairplay.h
deleted file mode 100644
index 1b5a65fc36db..000000000000
--- a/xbmc/network/DllLibShairplay.h
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- *  Copyright (C) 2012-2018 Team Kodi
- *  This file is part of Kodi - https://kodi.tv
- *
- *  SPDX-License-Identifier: GPL-2.0-or-later
- *  See LICENSES/README.md for more information.
- */
-
-#pragma once
-
-#include "DynamicDll.h"
-
-#include <shairplay/raop.h>
-
-struct raop_s;
-
-class DllLibShairplayInterface
-{
-public:
-  virtual ~DllLibShairplayInterface() = default;
-
-
-  virtual raop_t *    raop_init(int max_clients, raop_callbacks_t *callbacks, const char *pemkey)=0;
-  virtual raop_t *    raop_init_from_keyfile(int max_clients, raop_callbacks_t *callbacks, const char *keyfile)=0;
-  virtual void        raop_set_log_level(raop_t *raop, int level)=0;
-  virtual void        raop_set_log_callback(raop_t *raop, raop_log_callback_t callback, void *cls)=0;
-  virtual int         raop_is_running(raop_t *raop)=0;
-  virtual int         raop_start(raop_t *raop, unsigned short *port, const char *hwaddr, int hwaddrlen, const char *password)=0;
-  virtual void        raop_stop(raop_t *raop)=0;
-  virtual void        raop_destroy(raop_t *raop)=0;
-};
-
-class DllLibShairplay : public DllDynamic, DllLibShairplayInterface
-{
-  DECLARE_DLL_WRAPPER(DllLibShairplay, DLL_PATH_LIBSHAIRPLAY)
-  DEFINE_METHOD3(raop_t *,  raop_init,              (int p1, raop_callbacks_t *p2, const char *p3))
-  DEFINE_METHOD3(raop_t *,  raop_init_from_keyfile, (int p1, raop_callbacks_t *p2, const char *p3))
-  DEFINE_METHOD2(void,      raop_set_log_level,     (raop_t *p1, int p2))
-  DEFINE_METHOD3(void,      raop_set_log_callback,  (raop_t *p1, raop_log_callback_t p2, void *p3))
-  DEFINE_METHOD1(int,       raop_is_running,        (raop_t *p1))
-  DEFINE_METHOD5(int,       raop_start,             (raop_t *p1, unsigned short *p2, const char *p3, int p4, const char *p5))
-  DEFINE_METHOD1(void,      raop_stop,              (raop_t *p1))
-  DEFINE_METHOD1(void,      raop_destroy,           (raop_t *p1))
-
-  BEGIN_METHOD_RESOLVE()
-    RESOLVE_METHOD_RENAME(raop_init,              raop_init)
-    RESOLVE_METHOD_RENAME(raop_init_from_keyfile, raop_init_from_keyfile)
-    RESOLVE_METHOD_RENAME(raop_set_log_level,     raop_set_log_level)
-    RESOLVE_METHOD_RENAME(raop_set_log_callback,  raop_set_log_callback)
-    RESOLVE_METHOD_RENAME(raop_is_running,        raop_is_running)
-    RESOLVE_METHOD_RENAME(raop_start,             raop_start)
-    RESOLVE_METHOD_RENAME(raop_stop,              raop_stop)
-    RESOLVE_METHOD_RENAME(raop_destroy,           raop_destroy)
-  END_METHOD_RESOLVE()
-};
-
