From 11acb08021b587dea15b75f699212d815e65eb87 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Fri, 10 May 2019 15:52:56 +0200
Subject: [PATCH 1/3] [fix] format-overflow warning

sprintf  needs an additional bit for the nul terminator
---
 xbmc/cores/DllLoader/dll.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/cores/DllLoader/dll.cpp b/xbmc/cores/DllLoader/dll.cpp
index 9a8f56944fca..268b2e9bbf6e 100644
--- a/xbmc/cores/DllLoader/dll.cpp
+++ b/xbmc/cores/DllLoader/dll.cpp
@@ -163,7 +163,7 @@ extern "C" intptr_t (*__stdcall dllGetProcAddress(HMODULE hModule, const char* f
     }
     else if( dll->IsSystemDll() )
     {
-      char ordinal[5];
+      char ordinal[6] = {};
       sprintf(ordinal, "%u", LOW_WORD(function));
       address = (void*)create_dummy_function(dll->GetName(), ordinal);
 

From f13f9a776c0a3674cfc9955e7d1e88ce7b90b8a5 Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Fri, 10 May 2019 15:52:56 +0200
Subject: [PATCH 2/3] [fix] stringop-truncation warnings

strncpy needs an additional bit for the nul terminator
---
 xbmc/cores/AudioEngine/Sinks/AESinkPi.cpp | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkPi.cpp b/xbmc/cores/AudioEngine/Sinks/AESinkPi.cpp
index 2424f6f3c12a..edcaf09d3f24 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkPi.cpp
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkPi.cpp
@@ -61,9 +61,9 @@ void CAESinkPi::SetAudioDest()
   if ( m_omx_render.IsInitialized() )
   {
     if (m_output == AESINKPI_ANALOGUE)
-      strncpy((char *)audioDest.sName, "local", strlen("local"));
+      strncpy(reinterpret_cast<char*>(audioDest.sName), "local", strlen("local") + 1);
     else
-      strncpy((char *)audioDest.sName, "hdmi", strlen("hdmi"));
+      strncpy(reinterpret_cast<char*>(audioDest.sName), "hdmi", strlen("hdmi") + 1);
     omx_err = m_omx_render.SetConfig(OMX_IndexConfigBrcmAudioDestination, &audioDest);
     if (omx_err != OMX_ErrorNone)
       CLog::Log(LOGERROR, "%s::%s - m_omx_render.SetConfig omx_err(0x%08x)", CLASSNAME, __func__, omx_err);
@@ -71,9 +71,9 @@ void CAESinkPi::SetAudioDest()
   if ( m_omx_render_slave.IsInitialized() )
   {
     if (m_output != AESINKPI_ANALOGUE)
-      strncpy((char *)audioDest.sName, "local", strlen("local"));
+      strncpy(reinterpret_cast<char*>(audioDest.sName), "local", strlen("local") + 1);
     else
-      strncpy((char *)audioDest.sName, "hdmi", strlen("hdmi"));
+      strncpy(reinterpret_cast<char*>(audioDest.sName), "hdmi", strlen("hdmi") + 1);
     omx_err = m_omx_render_slave.SetConfig(OMX_IndexConfigBrcmAudioDestination, &audioDest);
     if (omx_err != OMX_ErrorNone)
       CLog::Log(LOGERROR, "%s::%s - m_omx_render_slave.SetConfig omx_err(0x%08x)", CLASSNAME, __func__, omx_err);

From c83b0de4712facdf011ce2aebdafd26d771cfc7c Mon Sep 17 00:00:00 2001
From: Rechi <Rechi@users.noreply.github.com>
Date: Fri, 10 May 2019 15:52:56 +0200
Subject: [PATCH 3/3] [fix] unused-variable warnings

---
 xbmc/cores/omxplayer/OMXImage.cpp | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/xbmc/cores/omxplayer/OMXImage.cpp b/xbmc/cores/omxplayer/OMXImage.cpp
index 4b7071b516bd..e9d99a552807 100644
--- a/xbmc/cores/omxplayer/OMXImage.cpp
+++ b/xbmc/cores/omxplayer/OMXImage.cpp
@@ -29,7 +29,7 @@
 #include <cassert>
 
 #ifdef _DEBUG
-#define CheckError() m_result = eglGetError(); if (m_result != EGL_SUCCESS) CLog::Log(LOGERROR, "EGL error in %s: %x",__FUNCTION__, m_result);
+#define CheckError() { GLint result = eglGetError(); if (result != EGL_SUCCESS) CLog::Log(LOGERROR, "EGL error in %s: %x", __FUNCTION__, result); }
 #else
 #define CheckError()
 #endif
@@ -257,7 +257,6 @@ bool COMXImage::AllocTextureInternal(EGLDisplay egl_display, EGLContext egl_cont
   tex->egl_image = eglCreateImageKHR(egl_display, egl_context, EGL_GL_TEXTURE_2D_KHR, (EGLClientBuffer)tex->texture, NULL);
   if (!tex->egl_image)
     CLog::Log(LOGDEBUG, "%s: eglCreateImageKHR failed to allocate", __func__);
-  GLint m_result;
   CheckError();
   return true;
 }
@@ -341,7 +340,6 @@ static bool ChooseConfig(EGLDisplay display, const EGLint *configAttrs, EGLConfi
   EGLBoolean eglStatus = true;
   EGLint     configCount = 0;
   EGLConfig* configList = NULL;
-  GLint m_result;
   // Find out how many configurations suit our needs
   eglStatus = eglChooseConfig(display, configAttrs, NULL, 0, &configCount);
   CheckError();
@@ -379,7 +377,6 @@ static bool ChooseConfig(EGLDisplay display, const EGLint *configAttrs, EGLConfi
 void COMXImage::CreateContext()
 {
   EGLConfig egl_config;
-  GLint m_result;
   CWinSystemRpiGLESContext *winsystem = static_cast<CWinSystemRpiGLESContext *>(CServiceBroker::GetWinSystem());
   EGLDisplay egl_display = winsystem->GetEGLDisplay();
 
