From 3576525083af34a50769e1328ef04ba0c81a0de9 Mon Sep 17 00:00:00 2001
From: Alwin Esch <alwin.esch@web.de>
Date: Fri, 8 May 2020 20:16:18 +0200
Subject: [PATCH 1/4] [addons][network] add new functions

- GetHostname()
- IsLocalHost(...)
- IsHostOnLAN(...)

To allow addon, e.g. inputstream to check his source on same PC.
---
 xbmc/addons/interfaces/Network.cpp            | 50 +++++++++++
 xbmc/addons/interfaces/Network.h              |  3 +
 .../kodi-addon-dev-kit/include/kodi/Network.h | 82 +++++++++++++++++++
 3 files changed, 135 insertions(+)

diff --git a/xbmc/addons/interfaces/Network.cpp b/xbmc/addons/interfaces/Network.cpp
index b3cab9dc70ca..8b11db42ff88 100644
--- a/xbmc/addons/interfaces/Network.cpp
+++ b/xbmc/addons/interfaces/Network.cpp
@@ -14,6 +14,7 @@
 #include "addons/kodi-addon-dev-kit/include/kodi/Network.h"
 #include "network/DNSNameCache.h"
 #include "network/Network.h"
+#include "utils/URIUtils.h"
 #include "utils/log.h"
 
 namespace ADDON
@@ -25,6 +26,9 @@ void Interface_Network::Init(AddonGlobalInterface *addonInterface)
 
   addonInterface->toKodi->kodi_network->wake_on_lan = wake_on_lan;
   addonInterface->toKodi->kodi_network->get_ip_address = get_ip_address;
+  addonInterface->toKodi->kodi_network->get_hostname = get_hostname;
+  addonInterface->toKodi->kodi_network->is_local_host = is_local_host;
+  addonInterface->toKodi->kodi_network->is_host_on_lan = is_host_on_lan;
   addonInterface->toKodi->kodi_network->dns_lookup = dns_lookup;
   addonInterface->toKodi->kodi_network->url_encode = url_encode;
 }
@@ -75,6 +79,52 @@ char* Interface_Network::get_ip_address(void* kodiBase)
   return buffer;
 }
 
+char* Interface_Network::get_hostname(void* kodiBase)
+{
+  CAddonDll* addon = static_cast<CAddonDll*>(kodiBase);
+  if (addon == nullptr)
+  {
+    CLog::Log(LOGERROR, "Interface_Network::{} - invalid data (addon='{}')", __FUNCTION__,
+              kodiBase);
+    return nullptr;
+  }
+
+  std::string hostname;
+  if (!CServiceBroker::GetNetwork().GetHostName(hostname))
+    return nullptr;
+
+  char* buffer = nullptr;
+  if (!hostname.empty())
+    buffer = strdup(hostname.c_str());
+  return buffer;
+}
+
+bool Interface_Network::is_local_host(void* kodiBase, const char* hostname)
+{
+  CAddonDll* addon = static_cast<CAddonDll*>(kodiBase);
+  if (addon == nullptr || hostname == nullptr)
+  {
+    CLog::Log(LOGERROR, "Interface_Network::{} - invalid data (addon='{}', hostname='{}')",
+              __FUNCTION__, kodiBase, static_cast<const void*>(hostname));
+    return false;
+  }
+
+  return CServiceBroker::GetNetwork().IsLocalHost(hostname);
+}
+
+bool Interface_Network::is_host_on_lan(void* kodiBase, const char* hostname, bool offLineCheck)
+{
+  CAddonDll* addon = static_cast<CAddonDll*>(kodiBase);
+  if (addon == nullptr || hostname == nullptr)
+  {
+    CLog::Log(LOGERROR, "Interface_Network::{} - invalid data (addon='{}', hostname='{}')",
+              __FUNCTION__, kodiBase, static_cast<const void*>(hostname));
+    return false;
+  }
+
+  return URIUtils::IsHostOnLAN(hostname, offLineCheck);
+}
+
 char* Interface_Network::dns_lookup(void* kodiBase, const char* url, bool* ret)
 {
   CAddonDll* addon = static_cast<CAddonDll*>(kodiBase);
diff --git a/xbmc/addons/interfaces/Network.h b/xbmc/addons/interfaces/Network.h
index 6d09f6b2c992..2a0486142eab 100644
--- a/xbmc/addons/interfaces/Network.h
+++ b/xbmc/addons/interfaces/Network.h
@@ -41,6 +41,9 @@ struct Interface_Network
   //@{
   static bool wake_on_lan(void* kodiBase, const char* mac);
   static char* get_ip_address(void* kodiBase);
+  static char* get_hostname(void* kodiBase);
+  static bool is_local_host(void* kodiBase, const char* hostname);
+  static bool is_host_on_lan(void* kodiBase, const char* hostname, bool offLineCheck);
   static char* dns_lookup(void* kodiBase, const char* url, bool* ret);
   static char* url_encode(void* kodiBase, const char* url);
   //@}
diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h
index 71303071a013..dd8f82275148 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h
@@ -32,6 +32,9 @@ extern "C"
     char* (*get_ip_address)(KODI_HANDLE kodiBase);
     char* (*dns_lookup)(KODI_HANDLE kodiBase, const char* url, bool* ret);
     char* (*url_encode)(KODI_HANDLE kodiBase, const char* url);
+    char* (*get_hostname)(KODI_HANDLE kodiBase);
+    bool (*is_local_host)(KODI_HANDLE kodiBase, const char* hostname);
+    bool (*is_host_on_lan)(void* kodiBase, const char* hostname, bool offLineCheck);
   } AddonToKodiFuncTable_kodi_network;
 
 #ifdef __cplusplus
@@ -107,6 +110,85 @@ inline std::string GetIPAddress()
 }
 //----------------------------------------------------------------------------
 
+//============================================================================
+/// @ingroup cpp_kodi_network
+/// @brief Return our hostname.
+///
+/// @return String about hostname, empty in case of error
+///
+///
+/// ------------------------------------------------------------------------
+///
+/// **Example:**
+/// ~~~~~~~~~~~~~{.cpp}
+/// #include <kodi/Network.h>
+/// ...
+/// std::string hostname = kodi::network::GetHostname();
+/// fprintf(stderr, "My hostname is '%s'\n", hostname.c_str());
+/// ...
+/// ~~~~~~~~~~~~~
+///
+inline std::string GetHostname()
+{
+  using namespace ::kodi::addon;
+
+  std::string ip;
+  char* string = CAddonBase::m_interface->toKodi->kodi_network->get_hostname(
+      CAddonBase::m_interface->toKodi->kodiBase);
+  if (string != nullptr)
+  {
+    ip = string;
+    CAddonBase::m_interface->toKodi->free_string(CAddonBase::m_interface->toKodi->kodiBase, string);
+  }
+  return ip;
+}
+//----------------------------------------------------------------------------
+
+//============================================================================
+/// @ingroup cpp_kodi_network
+/// @brief Check given name or ip address corresponds to localhost.
+///
+/// @param[in] hostname Hostname to check
+/// @return Return true if given name or ip address corresponds to localhost
+///
+///
+/// ------------------------------------------------------------------------
+///
+/// **Example:**
+/// ~~~~~~~~~~~~~{.cpp}
+/// #include <kodi/Network.h>
+/// ...
+/// if (kodi::network::IsLocalHost("127.0.0.1"))
+///   fprintf(stderr, "Is localhost\n");
+/// ...
+/// ~~~~~~~~~~~~~
+///
+inline bool IsLocalHost(const std::string& hostname)
+{
+  using namespace ::kodi::addon;
+
+  return CAddonBase::m_interface->toKodi->kodi_network->is_local_host(
+      CAddonBase::m_interface->toKodi->kodiBase, hostname.c_str());
+}
+//----------------------------------------------------------------------------
+
+//==============================================================================
+/// @ingroup cpp_kodi_network
+/// @brief Checks whether the specified path refers to a local network.
+///
+/// @param[in] hostname Hostname to check
+/// @param[in] offLineCheck Check if in private range, see https://en.wikipedia.org/wiki/Private_network
+/// @return True if host is on a LAN, false otherwise
+///
+inline bool IsHostOnLAN(const std::string& hostname, bool offLineCheck = false)
+{
+  using namespace kodi::addon;
+
+  return CAddonBase::m_interface->toKodi->kodi_network->is_host_on_lan(
+      CAddonBase::m_interface->toKodi->kodiBase, hostname.c_str(), offLineCheck);
+}
+//------------------------------------------------------------------------------
+
 //============================================================================
 ///
 /// \ingroup cpp_kodi_network

From 047f83ced3bb54ec33efeb6ad097277c4cd478f6 Mon Sep 17 00:00:00 2001
From: Alwin Esch <alwin.esch@web.de>
Date: Thu, 7 May 2020 01:50:14 +0200
Subject: [PATCH 2/4] [addons][network] minor cleanups

Some not needed doc lines are removed, use @ only for doxygen and use
new/delete for his interface structure.
---
 xbmc/addons/interfaces/Network.cpp            |  7 +++---
 .../kodi-addon-dev-kit/include/kodi/Network.h | 22 +++++++------------
 2 files changed, 11 insertions(+), 18 deletions(-)

diff --git a/xbmc/addons/interfaces/Network.cpp b/xbmc/addons/interfaces/Network.cpp
index 8b11db42ff88..1ec7940593af 100644
--- a/xbmc/addons/interfaces/Network.cpp
+++ b/xbmc/addons/interfaces/Network.cpp
@@ -22,7 +22,7 @@ namespace ADDON
 
 void Interface_Network::Init(AddonGlobalInterface *addonInterface)
 {
-  addonInterface->toKodi->kodi_network = static_cast<AddonToKodiFuncTable_kodi_network*>(malloc(sizeof(AddonToKodiFuncTable_kodi_network)));
+  addonInterface->toKodi->kodi_network = new AddonToKodiFuncTable_kodi_network();
 
   addonInterface->toKodi->kodi_network->wake_on_lan = wake_on_lan;
   addonInterface->toKodi->kodi_network->get_ip_address = get_ip_address;
@@ -35,10 +35,9 @@ void Interface_Network::Init(AddonGlobalInterface *addonInterface)
 
 void Interface_Network::DeInit(AddonGlobalInterface* addonInterface)
 {
-  if (addonInterface->toKodi && /* <-- needed as long as the old addon way is used */
-      addonInterface->toKodi->kodi_network)
+  if (addonInterface->toKodi) /* <-- needed as long as the old addon way is used */
   {
-    free(addonInterface->toKodi->kodi_network);
+    delete addonInterface->toKodi->kodi_network;
     addonInterface->toKodi->kodi_network = nullptr;
   }
 }
diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h
index dd8f82275148..4e0620b9dc52 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h
@@ -41,14 +41,12 @@ extern "C"
 } /* extern "C" */
 
 //==============================================================================
-///
-/// \defgroup cpp_kodi_network  Interface - kodi::network
-/// \ingroup cpp
-/// @brief **Network functions**
-///
+/// @defgroup cpp_kodi_network  Interface - kodi::network
+/// @ingroup cpp
+/// @brief **Network functions**\n
 /// The network module offers functions that allow you to control it.
 ///
-/// It has the header \ref Network.h "#include <kodi/Network.h>" be included
+/// It has the header @ref Network.h "#include <kodi/Network.h>" be included
 /// to enjoy it.
 ///
 //------------------------------------------------------------------------------
@@ -59,8 +57,7 @@ namespace network
 {
 
 //============================================================================
-///
-/// \ingroup cpp_kodi_network
+/// @ingroup cpp_kodi_network
 /// @brief Send WakeOnLan magic packet.
 ///
 /// @param[in] mac Network address of the host to wake.
@@ -76,8 +73,7 @@ inline bool WakeOnLan(const std::string& mac)
 //----------------------------------------------------------------------------
 
 //============================================================================
-///
-/// \ingroup cpp_kodi_network
+/// @ingroup cpp_kodi_network
 /// @brief To the current own ip address as a string.
 ///
 /// @return Own system ip.
@@ -190,8 +186,7 @@ inline bool IsHostOnLAN(const std::string& hostname, bool offLineCheck = false)
 //------------------------------------------------------------------------------
 
 //============================================================================
-///
-/// \ingroup cpp_kodi_network
+/// @ingroup cpp_kodi_network
 /// @brief URL encodes the given string
 ///
 /// This function converts the given input string to a URL encoded string and
@@ -232,8 +227,7 @@ inline std::string URLEncode(const std::string& url)
 //----------------------------------------------------------------------------
 
 //============================================================================
-///
-/// \ingroup cpp_kodi_network
+/// @ingroup cpp_kodi_network
 /// @brief Lookup URL in DNS cache
 ///
 /// This test will get DNS record for a domain. The DNS lookup is done directly

From c8c8df795e4089a8fdf52cc4a4b988d893fcdd53 Mon Sep 17 00:00:00 2001
From: Alwin Esch <alwin.esch@web.de>
Date: Fri, 8 May 2020 19:53:26 +0200
Subject: [PATCH 3/4] [addons][network] separate "C" and "C++" parts of headers

By them becomes the "C" part placed in own header to see better what language
is where and to make easier for other languages.
---
 cmake/treedata/common/subdirs.txt             |  1 +
 .../kodi-addon-dev-kit/include/kodi/Network.h | 30 +------------
 .../include/kodi/c-api/CMakeLists.txt         |  5 +++
 .../include/kodi/c-api/network.h              | 42 +++++++++++++++++++
 .../include/kodi/versions.h                   |  3 +-
 5 files changed, 51 insertions(+), 30 deletions(-)
 create mode 100644 xbmc/addons/kodi-addon-dev-kit/include/kodi/c-api/CMakeLists.txt
 create mode 100644 xbmc/addons/kodi-addon-dev-kit/include/kodi/c-api/network.h

diff --git a/cmake/treedata/common/subdirs.txt b/cmake/treedata/common/subdirs.txt
index 54fed3527faf..d471e73e1a47 100644
--- a/cmake/treedata/common/subdirs.txt
+++ b/cmake/treedata/common/subdirs.txt
@@ -8,6 +8,7 @@ xbmc/addons/interfaces/gui                      addons_interfaces_gui
 xbmc/addons/interfaces/gui/controls             addons_interfaces_gui_controls
 xbmc/addons/interfaces/gui/dialogs              addons_interfaces_gui_dialogs
 xbmc/addons/kodi-addon-dev-kit/include/kodi     addons_kodi-addon-dev-kit_include_kodi
+xbmc/addons/kodi-addon-dev-kit/include/kodi/c-api addons_kodi-addon-dev-kit_include_kodi_c-api
 xbmc/addons/kodi-addon-dev-kit/include/kodi/addon-instance addons_kodi-addon-dev-kit_include_kodi_addon-instance
 xbmc/addons/kodi-addon-dev-kit/include/kodi/gui addons_kodi-addon-dev-kit_include_kodi_gui
 xbmc/addons/kodi-addon-dev-kit/include/kodi/gui/controls addons_kodi-addon-dev-kit_include_kodi_gui_controls
diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h
index 4e0620b9dc52..a0187de60656 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/Network.h
@@ -8,37 +8,9 @@
 
 #pragma once
 
-#include "AddonBase.h"
+#include "c-api/network.h"
 
 #ifdef __cplusplus
-extern "C"
-{
-#endif /* __cplusplus */
-
-  /*
-   * For interface between add-on and kodi.
-   *
-   * This structure defines the addresses of functions stored inside Kodi which
-   * are then available for the add-on to call
-   *
-   * All function pointers there are used by the C++ interface functions below.
-   * You find the set of them on xbmc/addons/interfaces/General.cpp
-   *
-   * Note: For add-on development itself this is not needed
-   */
-  typedef struct AddonToKodiFuncTable_kodi_network
-  {
-    bool (*wake_on_lan)(KODI_HANDLE kodiBase, const char* mac);
-    char* (*get_ip_address)(KODI_HANDLE kodiBase);
-    char* (*dns_lookup)(KODI_HANDLE kodiBase, const char* url, bool* ret);
-    char* (*url_encode)(KODI_HANDLE kodiBase, const char* url);
-    char* (*get_hostname)(KODI_HANDLE kodiBase);
-    bool (*is_local_host)(KODI_HANDLE kodiBase, const char* hostname);
-    bool (*is_host_on_lan)(void* kodiBase, const char* hostname, bool offLineCheck);
-  } AddonToKodiFuncTable_kodi_network;
-
-#ifdef __cplusplus
-} /* extern "C" */
 
 //==============================================================================
 /// @defgroup cpp_kodi_network  Interface - kodi::network
diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/c-api/CMakeLists.txt b/xbmc/addons/kodi-addon-dev-kit/include/kodi/c-api/CMakeLists.txt
new file mode 100644
index 000000000000..6f2fff93299b
--- /dev/null
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/c-api/CMakeLists.txt
@@ -0,0 +1,5 @@
+set(HEADERS network.h)
+
+if(NOT ENABLE_STATIC_LIBS)
+  core_add_library(addons_kodi-addon-dev-kit_include_kodi_c-api)
+endif()
diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/c-api/network.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/c-api/network.h
new file mode 100644
index 000000000000..c10bdfaeedc7
--- /dev/null
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/c-api/network.h
@@ -0,0 +1,42 @@
+/*
+ *  Copyright (C) 2005-2018 Team Kodi
+ *  This file is part of Kodi - https://kodi.tv
+ *
+ *  SPDX-License-Identifier: GPL-2.0-or-later
+ *  See LICENSES/README.md for more information.
+ */
+
+#pragma once
+
+#include "../AddonBase.h"
+
+#ifdef __cplusplus
+extern "C"
+{
+#endif /* __cplusplus */
+
+  /*
+   * For interface between add-on and kodi.
+   *
+   * This structure defines the addresses of functions stored inside Kodi which
+   * are then available for the add-on to call
+   *
+   * All function pointers there are used by the C++ interface functions below.
+   * You find the set of them on xbmc/addons/interfaces/General.cpp
+   *
+   * Note: For add-on development itself this is not needed
+   */
+  typedef struct AddonToKodiFuncTable_kodi_network
+  {
+    bool (*wake_on_lan)(KODI_HANDLE kodiBase, const char* mac);
+    char* (*get_ip_address)(KODI_HANDLE kodiBase);
+    char* (*dns_lookup)(KODI_HANDLE kodiBase, const char* url, bool* ret);
+    char* (*url_encode)(KODI_HANDLE kodiBase, const char* url);
+    char* (*get_hostname)(KODI_HANDLE kodiBase);
+    bool (*is_local_host)(KODI_HANDLE kodiBase, const char* hostname);
+    bool (*is_host_on_lan)(void* kodiBase, const char* hostname, bool offLineCheck);
+  } AddonToKodiFuncTable_kodi_network;
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif /* __cplusplus */
diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
index e62584445756..b1940d83ea86 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
@@ -63,7 +63,8 @@
 #define ADDON_GLOBAL_VERSION_NETWORK                  "1.0.0"
 #define ADDON_GLOBAL_VERSION_NETWORK_MIN              "1.0.0"
 #define ADDON_GLOBAL_VERSION_NETWORK_XML_ID           "kodi.binary.global.network"
-#define ADDON_GLOBAL_VERSION_NETWORK_DEPENDS          "Network.h"
+#define ADDON_GLOBAL_VERSION_NETWORK_DEPENDS          "Network.h" \
+                                                      "c-api/network.h"
 
 #define ADDON_INSTANCE_VERSION_AUDIODECODER           "2.0.0"
 #define ADDON_INSTANCE_VERSION_AUDIODECODER_MIN       "2.0.0"

From 7367a6cf2b4f43da0b4355d391a972a99150e781 Mon Sep 17 00:00:00 2001
From: Alwin Esch <alwin.esch@web.de>
Date: Thu, 7 May 2020 01:58:57 +0200
Subject: [PATCH 4/4] [addons][network] increase API version to 1.0.1

---
 xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
index b1940d83ea86..1b3549d6187e 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
@@ -60,7 +60,7 @@
 #define ADDON_GLOBAL_VERSION_FILESYSTEM_DEPENDS       "Filesystem.h" \
                                                       "gui/gl/Shader.h"
 
-#define ADDON_GLOBAL_VERSION_NETWORK                  "1.0.0"
+#define ADDON_GLOBAL_VERSION_NETWORK                  "1.0.1"
 #define ADDON_GLOBAL_VERSION_NETWORK_MIN              "1.0.0"
 #define ADDON_GLOBAL_VERSION_NETWORK_XML_ID           "kodi.binary.global.network"
 #define ADDON_GLOBAL_VERSION_NETWORK_DEPENDS          "Network.h" \
