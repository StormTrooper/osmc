From 79d1b1543049a9d103cfbd5b9a494380ed6e9036 Mon Sep 17 00:00:00 2001
From: Kai Sommerfeld <kai.sommerfeld@gmx.com>
Date: Mon, 9 Sep 2019 14:04:16 +0200
Subject: [PATCH] [pvr][dialogs][Estuary][keymaps] Rework Guide window's
 navigation context menu, introduce (optional) grid controls dialog.

---
 .../resources/strings.po                      | 125 +++++++++---
 .../media/osd/fullscreen/buttons/calendar.png | Bin 0 -> 3404 bytes
 .../media/osd/fullscreen/buttons/forward.png  | Bin 0 -> 1921 bytes
 .../media/osd/fullscreen/buttons/rewind.png   | Bin 0 -> 2004 bytes
 .../xml/DialogPVRGuideControls.xml            | 180 ++++++++++++++++++
 addons/skin.estuary/xml/Variables.xml         |  14 ++
 system/keymaps/keyboard.xml                   |   8 +
 xbmc/dialogs/GUIDialogContextMenu.cpp         |   6 +-
 xbmc/dialogs/GUIDialogContextMenu.h           |   8 +-
 xbmc/guilib/GUIWindowManager.cpp              |  17 +-
 xbmc/guilib/WindowIDs.h                       |   3 +-
 xbmc/input/WindowTranslator.cpp               |   1 +
 xbmc/interfaces/builtins/PVRBuiltins.cpp      | 100 ++++++++++
 xbmc/pvr/dialogs/CMakeLists.txt               |   2 +
 .../pvr/dialogs/GUIDialogPVRGuideControls.cpp |  17 ++
 xbmc/pvr/dialogs/GUIDialogPVRGuideControls.h  |  18 ++
 xbmc/pvr/windows/GUIEPGGridContainer.cpp      |  13 ++
 xbmc/pvr/windows/GUIEPGGridContainer.h        |   4 +
 xbmc/pvr/windows/GUIWindowPVRBase.cpp         |  44 ++++-
 xbmc/pvr/windows/GUIWindowPVRBase.h           |   6 +-
 xbmc/pvr/windows/GUIWindowPVRGuide.cpp        | 159 +++++++++++++---
 xbmc/pvr/windows/GUIWindowPVRGuide.h          |  16 +-
 22 files changed, 660 insertions(+), 81 deletions(-)
 create mode 100644 addons/skin.estuary/media/osd/fullscreen/buttons/calendar.png
 create mode 100644 addons/skin.estuary/media/osd/fullscreen/buttons/forward.png
 create mode 100644 addons/skin.estuary/media/osd/fullscreen/buttons/rewind.png
 create mode 100644 addons/skin.estuary/xml/DialogPVRGuideControls.xml
 create mode 100644 xbmc/pvr/dialogs/GUIDialogPVRGuideControls.cpp
 create mode 100644 xbmc/pvr/dialogs/GUIDialogPVRGuideControls.h

diff --git a/addons/resource.language.en_gb/resources/strings.po b/addons/resource.language.en_gb/resources/strings.po
index 49005de6fc72..1bb85599540c 100644
--- a/addons/resource.language.en_gb/resources/strings.po
+++ b/addons/resource.language.en_gb/resources/strings.po
@@ -785,7 +785,7 @@ msgstr ""
 #. generic "duration" label used in different places
 #: xbmc/dialogs/GUIDialogMediaFilter.cpp
 #: xbmc/playlists/SmartPlaylist.cpp
-#: xbmc/xbmc/pvr/windows/GUIViewStatePVR.cpp
+#: xbmc/pvr/windows/GUIViewStatePVR.cpp
 #: addons/skin.estuary/xml/Variables.xml
 #: addons/skin.estuary/xml/View_51_Poster.xml
 #: addons/skin.estuary/xml/DialogVideoInfo.xml
@@ -2514,8 +2514,8 @@ msgid "Downmix multichannel audio to stereo"
 msgstr ""
 
 #. generic "number" label used in different places
-#: xbmc/xbmc/pvr/windows/GUIViewStatePVR.cpp
-#: xbmc/xbmc/utils/SortUtils.cpp
+#: xbmc/pvr/windows/GUIViewStatePVR.cpp
+#: xbmc/utils/SortUtils.cpp
 msgctxt "#549"
 msgid "Number"
 msgstr ""
@@ -2526,7 +2526,7 @@ msgid "Sort by: {0:s}"
 msgstr ""
 
 #. generic "name" label used in different places
-#: xbmc/xbmc/pvr/windows/GUIViewStatePVR.cpp
+#: xbmc/pvr/windows/GUIViewStatePVR.cpp
 #: xbmc/view/GUIViewState.cpp
 msgctxt "#551"
 msgid "Name"
@@ -2534,7 +2534,7 @@ msgstr ""
 
 #. generic "date" label used in different places
 #: addons/skin.estuary/xml/Variables.xml
-#: xbmc/xbmc/pvr/windows/GUIViewStatePVR.cpp
+#: xbmc/pvr/windows/GUIViewStatePVR.cpp
 msgctxt "#552"
 msgid "Date"
 msgstr ""
@@ -2641,7 +2641,7 @@ msgstr ""
 #. generic "last played" label used in different places
 #: xbmc/dialogs/GUIDialogMediaFilter.cpp
 #: xbmc/playlists/SmartPlaylist.cpp
-#: xbmc/xbmc/pvr/windows/GUIViewStatePVR.cpp
+#: xbmc/pvr/windows/GUIViewStatePVR.cpp
 msgctxt "#568"
 msgid "Last played"
 msgstr ""
@@ -9246,24 +9246,20 @@ msgstr ""
 
 #. generic 'now' label used in different places
 #: addons/skin.estuary/xml/DialogPVRRadioRDSInfo.xml
-#: addons/skin.estuary/xml/MyWeather.xml
-#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
 msgctxt "#19030"
 msgid "Now"
 msgstr ""
 
 #. generic 'next' label used in different places in pvr context
-#: addons/skin.estuary/xml/DialogFullScreenInfo.xml
 #: addons/skin.estuary/xml/DialogPVRRadioRDSInfo.xml
+#: addons/skin.estuary/xml/DialogSeekBar.xml
 #: addons/skin.estuary/xml/MyPVRChannels.xml
-#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
 msgctxt "#19031"
 msgid "Next"
 msgstr ""
 
 #. 'timeline' label used in pvr guide window
-#. xbmc/pvr/windows/GUIWindowPVRGuide.cpp
-#: addons/skin.estuary/xml/MyPVRGuide.xml
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
 msgctxt "#19032"
 msgid "Timeline"
 msgstr ""
@@ -9468,16 +9464,18 @@ msgctxt "#19062"
 msgid "Sort by: Channel"
 msgstr ""
 
-#. Label for epg grid window "jump to grid start" (oldest available events) context menu entry
-#: /xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+#. Label for epg grid window "jump to grid start" (oldest available programme) context menu entry and epg grid controls dialog help text
+#: addons/skin.estuary/xml/Variables.xml
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
 msgctxt "#19063"
-msgid "Go to beginning"
+msgid "First programme"
 msgstr ""
 
-#. Label for epg grid window "jump to grid end" (youngest available events) context menu entry
-#: /xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+#. Label for epg grid window "jump to grid end" (youngest available programme) context menu entry and epg grid controls dialog help text
+#: addons/skin.estuary/xml/Variables.xml
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
 msgctxt "#19064"
-msgid "Go to end"
+msgid "Last programme"
 msgstr ""
 
 #. Label for timer settings dialog header
@@ -9510,10 +9508,11 @@ msgctxt "#19069"
 msgid "Guide"
 msgstr ""
 
-#. Label for epg grid window "jump to now" (current epg events) context menu entry
+#. Label for epg grid window "jump to now" (current programme) context menu entry and epg grid controls dialog help text
+#: addons/skin.estuary/xml/Variables.xml
 #: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
 msgctxt "#19070"
-msgid "Go to now"
+msgid "Current programme"
 msgstr ""
 
 #. pvr settings "epg update interval" setting label
@@ -9932,9 +9931,10 @@ msgctxt "#19140"
 msgid "Search..."
 msgstr ""
 
-#. part of PVR window's active channel group label (e.g. "Group: HD Sports Channels")
-#: addons/skin.estuary/xml/Includes_MediaMenu.xml
+#. generic PVR channel 'group' label used in different places
+#: addons/skin.estuary/xml/DialogPVRGuideControls.xml
 #: addons/skin.estuary/xml/DialogPVRGuideSearch.xml
+#: addons/skin.estuary/xml/Includes_MediaMenu.xml
 #: xbmc/pvr/windows/GUIWindowPVRBase.cpp
 msgctxt "#19141"
 msgid "Group"
@@ -9971,7 +9971,9 @@ msgctxt "#19147"
 msgid "Setting the lifetime of this recording to {0:d} days will immediately expire the recording, which might result in instant deletion of the recording. Proceed anyway?"
 msgstr ""
 
+#. generic PVR 'channel' label used in different places
 #: addons/skin.estuary/xml/DialogPVRRadioRDSInfo.xml
+#: addons/skin.estuary/xml/DialogPVRGuideControls.xml
 #: addons/skin.estuary/xml/DialogPVRGuideSearch.xml
 msgctxt "#19148"
 msgid "Channel"
@@ -10802,9 +10804,10 @@ msgid "All channels"
 msgstr ""
 
 #. Label for epg grid window "go to date" context menu entry
+#: addons/skin.estuary/xml/Variables.xml
 #: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
 msgctxt "#19288"
-msgid "Go to date"
+msgid "Date selector"
 msgstr ""
 
 #. Label for button to hide a group in the group manager
@@ -10977,7 +10980,75 @@ msgctxt "#19316"
 msgid "Start group channel numbers from 1"
 msgstr ""
 
-#empty strings from id 19317 to 19498
+#. Label for epg grid window "Jump 12 hours back" context menu entry and epg grid controls dialog help text
+#: addons/skin.estuary/xml/Variables.xml
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+msgctxt "#19317"
+msgid "12 hours back"
+msgstr ""
+
+#. Label for epg grid window "Jump 12 hours forward" context menu entry and epg grid controls dialog help text
+#: addons/skin.estuary/xml/Variables.xml
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+msgctxt "#19318"
+msgid "12 hours forward"
+msgstr ""
+
+#. Label for epg grid window "Activate previous channel group" context menu entry and epg grid controls dialog help text
+#: addons/skin.estuary/xml/Variables.xml
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+msgctxt "#19319"
+msgid "Previous group"
+msgstr ""
+
+#. Label for epg grid window "Activate next channel group" context menu entry and epg grid controls dialog help text
+#: addons/skin.estuary/xml/Variables.xml
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+msgctxt "#19320"
+msgid "Next group"
+msgstr ""
+
+#. Label for epg grid window "Activate channel group selector" context menu entry and epg grid controls dialog help text
+#: addons/skin.estuary/xml/Variables.xml
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+msgctxt "#19321"
+msgid "Group selector"
+msgstr ""
+
+#. Label for epg grid window "Jump to first channel" context menu entry and epg grid controls dialog help text
+#: addons/skin.estuary/xml/Variables.xml
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+msgctxt "#19322"
+msgid "First channel"
+msgstr ""
+
+#. Label for epg grid window "Jump to playing channel" context menu entry and epg grid controls dialog help text
+#: addons/skin.estuary/xml/Variables.xml
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+msgctxt "#19323"
+msgid "Playing channel"
+msgstr ""
+
+#. Label for epg grid window "Jump to last channel" context menu entry and epg grid controls dialog help text
+#: addons/skin.estuary/xml/Variables.xml
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+msgctxt "#19324"
+msgid "Last channel"
+msgstr ""
+
+#. Label for epg grid controls "Programme" group header"
+#: addons/skin.estuary/xml/DialogPVRGuideControls.xml
+msgctxt "#19325"
+msgid "Programme"
+msgstr ""
+
+#. Label for epg grid window "Navigate..." context menu entry
+#: xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+msgctxt "#19326"
+msgid "Navigate..."
+msgstr ""
+
+#empty strings from id 19327 to 19498
 
 #. label for epg genre value
 #: xbmc/pvr/epg/Epg.cpp
@@ -20944,12 +21015,12 @@ msgctxt "#38023"
 msgid "Set my rating"
 msgstr ""
 
-#: /xbmc/settings/dialogs/GUIDialogContentSettings.cpp
+#: xbmc/settings/dialogs/GUIDialogContentSettings.cpp
 msgctxt "#38024"
 msgid "Information provider selection"
 msgstr ""
 
-#: /xbmc/settings/dialogs/GUIDialogContentSettings.cpp
+#: xbmc/settings/dialogs/GUIDialogContentSettings.cpp
 msgctxt "#38025"
 msgid "Choose information provider"
 msgstr ""
@@ -21563,7 +21634,7 @@ msgctxt "#39014"
 msgid "Would you also like to remove all related data (e.g. settings) of this add-on?"
 msgstr ""
 
-#: /xbmc/addons/Addon.cpp
+#: xbmc/addons/Addon.cpp
 msgctxt "#39015"
 msgid "Image decoder"
 msgstr ""
diff --git a/addons/skin.estuary/media/osd/fullscreen/buttons/calendar.png b/addons/skin.estuary/media/osd/fullscreen/buttons/calendar.png
new file mode 100644
index 0000000000000000000000000000000000000000..a39a622e6fd40c3f30f4d313c6ba7fae927e9a8c
GIT binary patch
literal 3404
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

literal 0
HcmV?d00001

diff --git a/addons/skin.estuary/media/osd/fullscreen/buttons/forward.png b/addons/skin.estuary/media/osd/fullscreen/buttons/forward.png
new file mode 100644
index 0000000000000000000000000000000000000000..bb572ca2fd740a7dd52ca28e58ece40e4a9b88c7
GIT binary patch
literal 1921
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
NK=_J?tHJI+_7~fiBb@*M

literal 0
HcmV?d00001

diff --git a/addons/skin.estuary/media/osd/fullscreen/buttons/rewind.png b/addons/skin.estuary/media/osd/fullscreen/buttons/rewind.png
new file mode 100644
index 0000000000000000000000000000000000000000..e60b3c9922ceb2086c6c7d19934c6309a6fc5c7e
GIT binary patch
literal 2004
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
TO~1XN_&X1K`jM|6p!5F&!S6s-

literal 0
HcmV?d00001

diff --git a/addons/skin.estuary/xml/DialogPVRGuideControls.xml b/addons/skin.estuary/xml/DialogPVRGuideControls.xml
new file mode 100644
index 000000000000..9e91a5454929
--- /dev/null
+++ b/addons/skin.estuary/xml/DialogPVRGuideControls.xml
@@ -0,0 +1,180 @@
+<?xml version="1.0" encoding="utf-8"?>
+<window>
+	<defaultcontrol always="true">602</defaultcontrol>
+	<include>Animation_BottomSlide</include>
+	<depth>DepthOSD</depth>
+	<controls>
+		<control type="button">
+			<description>background close area</description>
+			<left>0</left>
+			<top>0</top>
+			<width>100%</width>
+			<bottom>280</bottom>
+			<texturefocus />
+			<texturenofocus />
+			<onclick>Action(close)</onclick>
+		</control>
+		<control type="group">
+			<bottom>0</bottom>
+			<height>150</height>
+			<animation effect="fade" time="200">VisibleChange</animation>
+			<control type="group" id="200">
+				<control type="image">
+					<left>0</left>
+					<top>0</top>
+					<width>100%</width>
+					<height>100%</height>
+					<texture>dialogs/dialog-bg-nobo.png</texture>
+				</control>
+				<control type="group">
+					<left>20</left>
+					<width>600</width>
+					<control type="label">
+						<top>12</top>
+						<height>20</height>
+						<align>center</align>
+						<aligny>center</aligny>
+						<label>$LOCALIZE[19325]</label>
+					</control>
+					<control type="grouplist" id="201">
+						<top>54</top>
+						<height>135</height>
+						<align>center</align>
+						<itemgap>20</itemgap>
+						<scrolltime tween="sine">200</scrolltime>
+						<orientation>horizontal</orientation>
+						<onleft>70045</onleft>
+						<onright>70040</onright>
+						<control type="radiobutton" id="600">
+							<include content="OSDButton">
+								<param name="texture" value="osd/fullscreen/buttons/previous.png"/>
+							</include>
+							<onclick>PVR.EpgGridControl(FirstProgramme)</onclick>
+						</control>
+						<control type="radiobutton" id="601">
+							<include content="OSDButton">
+								<param name="texture" value="osd/fullscreen/buttons/rewind.png"/>
+							</include>
+							<onclick>PVR.EpgGridControl(-12)</onclick>
+						</control>
+						<control type="radiobutton" id="602">
+							<include content="OSDButton">
+								<param name="texture" value="osd/fullscreen/buttons/play.png"/>
+							</include>
+							<animation effect="rotate" start="0" end="-90" center="auto" condition="true">Conditional</animation>
+							<onclick>PVR.EpgGridControl(CurrentProgramme)</onclick>
+						</control>
+						<control type="radiobutton" id="603">
+							<include content="OSDButton">
+								<param name="texture" value="osd/fullscreen/buttons/forward.png"/>
+							</include>
+							<onclick>PVR.EpgGridControl(+12)</onclick>
+						</control>
+						<control type="radiobutton" id="604">
+							<include content="OSDButton">
+								<param name="texture" value="osd/fullscreen/buttons/next.png"/>
+							</include>
+							<onclick>PVR.EpgGridControl(LastProgramme)</onclick>
+						</control>
+						<control type="radiobutton" id="605">
+							<include content="OSDButton">
+								<param name="texture" value="osd/fullscreen/buttons/calendar.png"/>
+							</include>
+							<onclick>PVR.EpgGridControl(SelectDate)</onclick>
+						</control>
+					</control>
+				</control>
+				<control type="textbox">
+					<left>620</left>
+					<top>54</top>
+					<align>center</align>
+					<aligny>center</aligny>
+					<width>630</width>
+					<height>76</height>
+					<label>$VAR[PVRGuideControlsHelpTextVar]</label>
+				</control>
+				<control type="group">
+					<right>370</right>
+					<width>300</width>
+					<control type="label">
+						<top>12</top>
+						<height>20</height>
+						<align>center</align>
+						<aligny>center</aligny>
+						<label>$LOCALIZE[19148]</label>
+					</control>
+					<control type="grouplist" id="202">
+						<top>54</top>
+						<height>135</height>
+						<align>center</align>
+						<itemgap>20</itemgap>
+						<scrolltime tween="sine">200</scrolltime>
+						<orientation>horizontal</orientation>
+						<onleft>605</onleft>
+						<onright>70043</onright>
+						<control type="radiobutton" id="70040">
+							<include content="OSDButton">
+								<param name="texture" value="osd/fullscreen/buttons/previous.png"/>
+							</include>
+							<onclick>PVR.EpgGridControl(FirstChannel)</onclick>
+						</control>
+						<control type="radiobutton" id="70041">
+							<include content="OSDButton">
+								<param name="texture" value="osd/fullscreen/buttons/play.png"/>
+							</include>
+							<animation effect="rotate" start="0" end="-90" center="auto" condition="true">Conditional</animation>
+							<onclick>PVR.EpgGridControl(PlayingChannel)</onclick>
+							<visible>PVR.IsPlayingTV | PVR.IsPlayingRadio</visible>
+						</control>
+						<control type="radiobutton" id="70042">
+							<include content="OSDButton">
+								<param name="texture" value="osd/fullscreen/buttons/next.png"/>
+							</include>
+							<onclick>PVR.EpgGridControl(LastChannel)</onclick>
+						</control>
+					</control>
+				</control>
+				<control type="group">
+					<right>20</right>
+					<width>300</width>
+					<control type="label">
+						<top>12</top>
+						<height>20</height>
+						<align>center</align>
+						<aligny>center</aligny>
+						<label>$LOCALIZE[19141]</label>
+					</control>
+					<control type="grouplist" id="203">
+						<top>54</top>
+						<height>135</height>
+						<align>center</align>
+						<itemgap>20</itemgap>
+						<scrolltime tween="sine">200</scrolltime>
+						<orientation>horizontal</orientation>
+						<onleft>70042</onleft>
+						<onright>600</onright>
+						<control type="radiobutton" id="70043">
+							<include content="OSDButton">
+								<param name="texture" value="osd/fullscreen/buttons/play.png"/>
+							</include>
+							<animation effect="rotate" start="0" end="180" center="auto" condition="true">Conditional</animation>
+							<onclick>PVR.EpgGridControl(PreviousGroup)</onclick>
+						</control>
+						<control type="radiobutton" id="70044">
+							<include content="OSDButton">
+								<param name="texture" value="osd/fullscreen/buttons/play.png"/>
+							</include>
+							<onclick>PVR.EpgGridControl(NextGroup)</onclick>
+						</control>
+						<control type="radiobutton" id="70045">
+							<include content="OSDButton">
+								<param name="texture" value="DefaultPlaylist.png"/>
+							</include>
+							<onclick>PVR.EpgGridControl(SelectGroup)</onclick>
+						</control>
+					</control>
+				</control>
+			</control>
+		</control>
+	</controls>
+</window>
diff --git a/addons/skin.estuary/xml/Variables.xml b/addons/skin.estuary/xml/Variables.xml
index a1c1f5f5c20b..510c269316ff 100644
--- a/addons/skin.estuary/xml/Variables.xml
+++ b/addons/skin.estuary/xml/Variables.xml
@@ -214,6 +214,20 @@
 		<value condition="VideoPlayer.HasEpg">$INFO[PVR.EpgEventElapsedTime]$INFO[PVR.EpgEventDuration, / ]</value>
 		<value>$INFO[Player.Time]$INFO[Player.Duration, / ]</value>
 	</variable>
+	<variable name="PVRGuideControlsHelpTextVar">
+		<value condition="Control.HasFocus(600)">$LOCALIZE[19063]</value>
+		<value condition="Control.HasFocus(601)">$LOCALIZE[19317]</value>
+		<value condition="Control.HasFocus(602)">$LOCALIZE[19070]</value>
+		<value condition="Control.HasFocus(603)">$LOCALIZE[19318]</value>
+		<value condition="Control.HasFocus(604)">$LOCALIZE[19064]</value>
+		<value condition="Control.HasFocus(605)">$LOCALIZE[19288]</value>
+		<value condition="Control.HasFocus(70040)">$LOCALIZE[19322]</value>
+		<value condition="Control.HasFocus(70041)">$LOCALIZE[19323]</value>
+		<value condition="Control.HasFocus(70042)">$LOCALIZE[19324]</value>
+		<value condition="Control.HasFocus(70043)">$LOCALIZE[19319]</value>
+		<value condition="Control.HasFocus(70044)">$LOCALIZE[19320]</value>
+		<value condition="Control.HasFocus(70045)">$LOCALIZE[19321]</value>
+	</variable>
 	<variable name="VideoOSDHelpTextVar">
 		<value condition="Control.HasFocus(87) + [Player.Rewinding | Player.Forwarding]">$LOCALIZE[31050]</value>
 		<value condition="Control.HasFocus(700)">$LOCALIZE[298]</value>
diff --git a/system/keymaps/keyboard.xml b/system/keymaps/keyboard.xml
index 99b30207adfc..b1638067de0c 100644
--- a/system/keymaps/keyboard.xml
+++ b/system/keymaps/keyboard.xml
@@ -249,6 +249,9 @@
       <t>ShowTimerRule</t>
       <epg>PreviousMenu</epg>
       <g>NextChannelGroup</g>
+      <n>ActivateWindow(PVRGuideControls)</n>
+      <enter mod="longpress">ActivateWindow(PVRGuideControls)</enter>
+      <return mod="longpress">ActivateWindow(PVRGuideControls)</return>
       <backspace mod="longpress">Number0</backspace> <!-- 0 key goes to "now" on EPG timeline -->
       <browser_back mod="longpress">Number0</browser_back> <!-- 0 key goes to "now" on EPG timeline -->
       <period mod="longpress">ChannelNumberSeparator</period>
@@ -298,6 +301,11 @@
     <keyboard>
       <e>PreviousMenu</e>
       <t>ShowTimerRule</t>
+      <epg>PreviousMenu</epg>
+      <g>NextChannelGroup</g>
+      <n>ActivateWindow(PVRGuideControls)</n>
+      <enter mod="longpress">ActivateWindow(PVRGuideControls)</enter>
+      <return mod="longpress">ActivateWindow(PVRGuideControls)</return>
       <backspace mod="longpress">Number0</backspace> <!-- 0 key goes to "now" on EPG timeline -->
       <browser_back mod="longpress">Number0</browser_back> <!-- 0 key goes to "now" on EPG timeline -->
       <period mod="longpress">ChannelNumberSeparator</period>
diff --git a/xbmc/dialogs/GUIDialogContextMenu.cpp b/xbmc/dialogs/GUIDialogContextMenu.cpp
index aaba1237238c..13b8656702d9 100644
--- a/xbmc/dialogs/GUIDialogContextMenu.cpp
+++ b/xbmc/dialogs/GUIDialogContextMenu.cpp
@@ -98,7 +98,7 @@ void CGUIDialogContextMenu::OnInitWindow()
 {
   m_clickedButton = -1;
   // set initial control focus
-  m_lastControlID = BUTTON_START;
+  m_lastControlID = m_initiallyFocusedButtonIdx + BUTTON_START;
   CGUIDialog::OnInitWindow();
 }
 
@@ -574,6 +574,7 @@ void CGUIDialogContextMenu::OnDeinitWindow(int nextWindowID)
   }
 
   m_buttons.clear();
+  m_initiallyFocusedButtonIdx = 0;
   CGUIDialog::OnDeinitWindow(nextWindowID);
 }
 
@@ -624,7 +625,7 @@ void CGUIDialogContextMenu::SwitchMedia(const std::string& strType, const std::s
   }
 }
 
-int CGUIDialogContextMenu::Show(const CContextButtons& choices)
+int CGUIDialogContextMenu::Show(const CContextButtons& choices, int focusedButtonIdx /* = 0 */)
 {
   auto dialog = CServiceBroker::GetGUI()->GetWindowManager().GetWindow<CGUIDialogContextMenu>(WINDOW_DIALOG_CONTEXT_MENU);
   if (!dialog)
@@ -635,6 +636,7 @@ int CGUIDialogContextMenu::Show(const CContextButtons& choices)
   dialog->SetInitialVisibility();
   dialog->SetupButtons();
   dialog->PositionAtCurrentFocus();
+  dialog->m_initiallyFocusedButtonIdx = focusedButtonIdx;
   dialog->Open();
   return dialog->m_clickedButton;
 }
diff --git a/xbmc/dialogs/GUIDialogContextMenu.h b/xbmc/dialogs/GUIDialogContextMenu.h
index 5b5544085b6a..f6bac6328d4c 100644
--- a/xbmc/dialogs/GUIDialogContextMenu.h
+++ b/xbmc/dialogs/GUIDialogContextMenu.h
@@ -78,10 +78,6 @@ enum CONTEXT_BUTTON { CONTEXT_BUTTON_CANCELLED = 0,
                       CONTEXT_BUTTON_GROUP_MANAGER,
                       CONTEXT_BUTTON_CHANNEL_MANAGER,
                       CONTEXT_BUTTON_SET_MOVIESET_ART,
-                      CONTEXT_BUTTON_BEGIN,
-                      CONTEXT_BUTTON_END,
-                      CONTEXT_BUTTON_NOW,
-                      CONTEXT_BUTTON_DATE,
                       CONTEXT_BUTTON_PLAY_AND_QUEUE,
                       CONTEXT_BUTTON_PLAY_ONLY_THIS,
                       CONTEXT_BUTTON_UPDATE_EPG,
@@ -94,6 +90,7 @@ enum CONTEXT_BUTTON { CONTEXT_BUTTON_CANCELLED = 0,
                       CONTEXT_BUTTON_DELETE_ALL,
                       CONTEXT_BUTTON_HELP,
                       CONTEXT_BUTTON_PLAY_NEXT,
+                      CONTEXT_BUTTON_NAVIGATE,
                     };
 
 class CContextButtons : public std::vector< std::pair<size_t, std::string> >
@@ -122,7 +119,7 @@ class CGUIDialogContextMenu :
   /*! Show the context menu with the given choices and return the index of the selected item,
     or -1 if cancelled.
    */
-  static int Show(const CContextButtons& choices);
+  static int Show(const CContextButtons& choices, int focusedButton = 0);
 
   /*! Legacy method that returns the context menu id, or -1 on cancel */
   static int ShowAndGetChoice(const CContextButtons &choices);
@@ -149,6 +146,7 @@ class CGUIDialogContextMenu :
   float m_coordX, m_coordY;
   /// \brief Stored size of background image (height or width depending on grouplist orientation)
   float m_backgroundImageSize;
+  int m_initiallyFocusedButtonIdx = 0;
   int m_clickedButton;
   CContextButtons m_buttons;
   const CGUIControl *m_backgroundImage = nullptr;
diff --git a/xbmc/guilib/GUIWindowManager.cpp b/xbmc/guilib/GUIWindowManager.cpp
index ddb923e45668..e10d41d0a034 100644
--- a/xbmc/guilib/GUIWindowManager.cpp
+++ b/xbmc/guilib/GUIWindowManager.cpp
@@ -103,23 +103,24 @@
 
 /* PVR related include Files */
 #include "pvr/PVRManager.h"
-#include "pvr/windows/GUIWindowPVRChannels.h"
-#include "pvr/windows/GUIWindowPVRRecordings.h"
-#include "pvr/windows/GUIWindowPVRGuide.h"
-#include "pvr/windows/GUIWindowPVRTimers.h"
-#include "pvr/windows/GUIWindowPVRTimerRules.h"
-#include "pvr/windows/GUIWindowPVRSearch.h"
+#include "pvr/dialogs/GUIDialogPVRChannelGuide.h"
 #include "pvr/dialogs/GUIDialogPVRChannelManager.h"
 #include "pvr/dialogs/GUIDialogPVRChannelsOSD.h"
 #include "pvr/dialogs/GUIDialogPVRClientPriorities.h"
 #include "pvr/dialogs/GUIDialogPVRGroupManager.h"
+#include "pvr/dialogs/GUIDialogPVRGuideControls.h"
 #include "pvr/dialogs/GUIDialogPVRGuideInfo.h"
-#include "pvr/dialogs/GUIDialogPVRChannelGuide.h"
 #include "pvr/dialogs/GUIDialogPVRGuideSearch.h"
 #include "pvr/dialogs/GUIDialogPVRRadioRDSInfo.h"
 #include "pvr/dialogs/GUIDialogPVRRecordingInfo.h"
 #include "pvr/dialogs/GUIDialogPVRRecordingSettings.h"
 #include "pvr/dialogs/GUIDialogPVRTimerSettings.h"
+#include "pvr/windows/GUIWindowPVRChannels.h"
+#include "pvr/windows/GUIWindowPVRGuide.h"
+#include "pvr/windows/GUIWindowPVRRecordings.h"
+#include "pvr/windows/GUIWindowPVRSearch.h"
+#include "pvr/windows/GUIWindowPVRTimerRules.h"
+#include "pvr/windows/GUIWindowPVRTimers.h"
 
 #include "video/dialogs/GUIDialogTeletext.h"
 #include "dialogs/GUIDialogSlider.h"
@@ -270,6 +271,7 @@ void CGUIWindowManager::CreateWindows()
   Add(new CGUIDialogPVRChannelGuide);
   Add(new CGUIDialogPVRRecordingSettings);
   Add(new CGUIDialogPVRClientPriorities);
+  Add(new CGUIDialogPVRGuideControls);
 
   Add(new CGUIDialogSelect);
   Add(new CGUIDialogMusicInfo);
@@ -380,6 +382,7 @@ bool CGUIWindowManager::DestroyWindows()
     DestroyWindow(WINDOW_DIALOG_OSD_TELETEXT);
     DestroyWindow(WINDOW_DIALOG_PVR_RECORDING_SETTING);
     DestroyWindow(WINDOW_DIALOG_PVR_CLIENT_PRIORITIES);
+    DestroyWindow(WINDOW_DIALOG_PVR_GUIDE_CONTROLS);
 
     DestroyWindow(WINDOW_DIALOG_TEXT_VIEWER);
     DestroyWindow(WINDOW_DIALOG_PLAY_EJECT);
diff --git a/xbmc/guilib/WindowIDs.h b/xbmc/guilib/WindowIDs.h
index 539e676c0623..1cb9a691b37a 100644
--- a/xbmc/guilib/WindowIDs.h
+++ b/xbmc/guilib/WindowIDs.h
@@ -115,7 +115,8 @@
 #define WINDOW_DIALOG_PVR_RADIO_RDS_INFO  (WINDOW_DIALOG_PVR_ID_START+10)
 #define WINDOW_DIALOG_PVR_RECORDING_SETTING (WINDOW_DIALOG_PVR_ID_START+11)
 #define WINDOW_DIALOG_PVR_CLIENT_PRIORITIES (WINDOW_DIALOG_PVR_ID_START+12)
-#define WINDOW_DIALOG_PVR_ID_END          WINDOW_DIALOG_PVR_CLIENT_PRIORITIES
+#define WINDOW_DIALOG_PVR_GUIDE_CONTROLS  (WINDOW_DIALOG_PVR_ID_START+13)
+#define WINDOW_DIALOG_PVR_ID_END          WINDOW_DIALOG_PVR_GUIDE_CONTROLS
 
 #define WINDOW_PVR_ID_START               10700
 #define WINDOW_TV_CHANNELS                (WINDOW_PVR_ID_START)
diff --git a/xbmc/input/WindowTranslator.cpp b/xbmc/input/WindowTranslator.cpp
index 7029d684c28c..dfbd42c46e81 100644
--- a/xbmc/input/WindowTranslator.cpp
+++ b/xbmc/input/WindowTranslator.cpp
@@ -41,6 +41,7 @@ const CWindowTranslator::WindowMapByName CWindowTranslator::WindowMappingByName
     { "radiosearch"              , WINDOW_RADIO_SEARCH },
     { "gamecontrollers"          , WINDOW_DIALOG_GAME_CONTROLLERS },
     { "games"                    , WINDOW_GAMES },
+    { "pvrguidecontrols"         , WINDOW_DIALOG_PVR_GUIDE_CONTROLS },
     { "pvrguideinfo"             , WINDOW_DIALOG_PVR_GUIDE_INFO },
     { "pvrrecordinginfo"         , WINDOW_DIALOG_PVR_RECORDING_INFO },
     { "pvrradiordsinfo"          , WINDOW_DIALOG_PVR_RADIO_RDS_INFO },
diff --git a/xbmc/interfaces/builtins/PVRBuiltins.cpp b/xbmc/interfaces/builtins/PVRBuiltins.cpp
index f17ff6d8bbba..a3cd8d57206f 100644
--- a/xbmc/interfaces/builtins/PVRBuiltins.cpp
+++ b/xbmc/interfaces/builtins/PVRBuiltins.cpp
@@ -12,13 +12,18 @@
 #include "GUIInfoManager.h"
 #include "ServiceBroker.h"
 #include "guilib/GUIComponent.h"
+#include "guilib/GUIWindowManager.h"
 #include "guilib/guiinfo/GUIInfoLabels.h"
 #include "pvr/PVRGUIActions.h"
 #include "pvr/PVRManager.h"
+#include "pvr/windows/GUIWindowPVRGuide.h"
 #include "utils/log.h"
 
 #include <algorithm>
 #include <cstdlib>
+#include <regex>
+
+using namespace PVR;
 
 /*! \brief Search for missing channel icons
  *   \param params (ignored)
@@ -74,6 +79,95 @@ static int SeekPercentage(const std::vector<std::string>& params)
   return 0;
 }
 
+namespace
+{
+/*! \brief Control PVR Guide window's EPG grid.
+ *  \param params The parameters
+ *  \details params[0] = Control to execute.
+ */
+int EpgGridControl(const std::vector<std::string>& params)
+{
+  if (params.empty())
+  {
+    CLog::Log(LOGERROR, "EpgGridControl(n) - No argument given");
+    return 0;
+  }
+
+  int activeWindow = CServiceBroker::GetGUI()->GetWindowManager().GetActiveWindow();
+  if (activeWindow != WINDOW_TV_GUIDE && activeWindow != WINDOW_RADIO_GUIDE)
+  {
+    CLog::Log(LOGERROR, "EpgGridControl(n) - Guide window not active");
+    return 0;
+  }
+
+  CGUIWindowPVRGuideBase* guideWindow = CServiceBroker::GetGUI()->GetWindowManager().GetWindow<CGUIWindowPVRGuideBase>(activeWindow);
+  if (!guideWindow)
+  {
+    CLog::Log(LOGERROR, "EpgGridControl(n) - Unable to get Guide window instance");
+    return 0;
+  }
+
+  std::string param(params[0]);
+  StringUtils::ToLower(param);
+
+  if (param == "firstprogramme")
+  {
+    guideWindow->GotoBegin();
+  }
+  else if (param == "lastprogramme")
+  {
+    guideWindow->GotoEnd();
+  }
+  else if (param == "currentprogramme")
+  {
+    guideWindow->GotoNow();
+  }
+  else if (param == "selectdate")
+  {
+    guideWindow->OpenDateSelectionDialog();
+  }
+  else if (StringUtils::StartsWithNoCase(param, "+") || StringUtils::StartsWithNoCase(param, "-"))
+  {
+    // jump back/forward n hours
+    if (std::regex_match(param, std::regex("[(-|+)|][0-9]+")))
+    {
+      guideWindow->GotoDate(std::atoi(param.c_str()));
+    }
+    else
+    {
+      CLog::Log(LOGERROR, "EpgGridControl(n) - invalid argument");
+    }
+  }
+  else if (param == "firstchannel")
+  {
+    guideWindow->GotoFirstChannel();
+  }
+  else if (param == "playingchannel")
+  {
+    guideWindow->GotoPlayingChannel();
+  }
+  else if (param == "lastchannel")
+  {
+    guideWindow->GotoLastChannel();
+  }
+  else if (param == "previousgroup")
+  {
+    guideWindow->ActivatePreviousChannelGroup();
+  }
+  else if (param == "nextgroup")
+  {
+    guideWindow->ActivateNextChannelGroup();
+  }
+  else if (param == "selectgroup")
+  {
+    guideWindow->OpenChannelGroupSelectionDialog();
+  }
+
+  return 0;
+}
+
+} // unnamed namespace
+
 // Note: For new Texts with comma add a "\" before!!! Is used for table text.
 //
 /// \page page_List_of_built_in_functions
@@ -100,6 +194,11 @@ static int SeekPercentage(const std::vector<std::string>& params)
 ///     ,
 ///     Performs a seek to the given percentage in timeshift buffer\, if timeshifting is supported
 ///   }
+///   \table_row2_l{
+///     <b>`PVR.EpgGridControl`</b>
+///     ,
+///     Control PVR Guide window's EPG grid
+///   }
 /// \table_end
 ///
 
@@ -109,5 +208,6 @@ CBuiltins::CommandMap CPVRBuiltins::GetOperations() const
            {"pvr.searchmissingchannelicons",  {"Search for missing channel icons", 0, SearchMissingIcons}},
            {"pvr.togglerecordplayingchannel", {"Toggle recording on playing channel", 0, ToggleRecordPlayingChannel}},
            {"pvr.seekpercentage",             {"Performs a seek to the given percentage in timeshift buffer", 1, SeekPercentage}},
+           {"pvr.epggridcontrol",             {"Control PVR Guide window's EPG grid", 1, EpgGridControl}},
          };
 }
diff --git a/xbmc/pvr/dialogs/CMakeLists.txt b/xbmc/pvr/dialogs/CMakeLists.txt
index c746a07299fb..39b88ed4ec7e 100644
--- a/xbmc/pvr/dialogs/CMakeLists.txt
+++ b/xbmc/pvr/dialogs/CMakeLists.txt
@@ -3,6 +3,7 @@ set(SOURCES GUIDialogPVRChannelManager.cpp
             GUIDialogPVRGroupManager.cpp
             GUIDialogPVRGuideInfo.cpp
             GUIDialogPVRChannelGuide.cpp
+            GUIDialogPVRGuideControls.cpp
             GUIDialogPVRGuideSearch.cpp
             GUIDialogPVRRadioRDSInfo.cpp
             GUIDialogPVRRecordingInfo.cpp
@@ -16,6 +17,7 @@ set(HEADERS GUIDialogPVRChannelManager.h
             GUIDialogPVRGroupManager.h
             GUIDialogPVRGuideInfo.h
             GUIDialogPVRChannelGuide.h
+            GUIDialogPVRGuideControls.h
             GUIDialogPVRGuideSearch.h
             GUIDialogPVRRadioRDSInfo.h
             GUIDialogPVRRecordingInfo.h
diff --git a/xbmc/pvr/dialogs/GUIDialogPVRGuideControls.cpp b/xbmc/pvr/dialogs/GUIDialogPVRGuideControls.cpp
new file mode 100644
index 000000000000..57baad98a490
--- /dev/null
+++ b/xbmc/pvr/dialogs/GUIDialogPVRGuideControls.cpp
@@ -0,0 +1,17 @@
+/*
+ *  Copyright (C) 2005-2018 Team Kodi
+ *  This file is part of Kodi - https://kodi.tv
+ *
+ *  SPDX-License-Identifier: GPL-2.0-or-later
+ *  See LICENSES/README.md for more information.
+ */
+
+#include "GUIDialogPVRGuideControls.h"
+
+CGUIDialogPVRGuideControls::CGUIDialogPVRGuideControls()
+  : CGUIDialog(WINDOW_DIALOG_PVR_GUIDE_CONTROLS, "DialogPVRGuideControls.xml")
+{
+  m_loadType = KEEP_IN_MEMORY;
+}
+
+CGUIDialogPVRGuideControls::~CGUIDialogPVRGuideControls() = default;
diff --git a/xbmc/pvr/dialogs/GUIDialogPVRGuideControls.h b/xbmc/pvr/dialogs/GUIDialogPVRGuideControls.h
new file mode 100644
index 000000000000..f04c892453a3
--- /dev/null
+++ b/xbmc/pvr/dialogs/GUIDialogPVRGuideControls.h
@@ -0,0 +1,18 @@
+/*
+ *  Copyright (C) 2005-2018 Team Kodi
+ *  This file is part of Kodi - https://kodi.tv
+ *
+ *  SPDX-License-Identifier: GPL-2.0-or-later
+ *  See LICENSES/README.md for more information.
+ */
+
+#pragma once
+
+#include "guilib/GUIDialog.h"
+
+class CGUIDialogPVRGuideControls : public CGUIDialog
+{
+public:
+  CGUIDialogPVRGuideControls();
+  ~CGUIDialogPVRGuideControls() override;
+};
diff --git a/xbmc/pvr/windows/GUIEPGGridContainer.cpp b/xbmc/pvr/windows/GUIEPGGridContainer.cpp
index 3de7938c6e31..8becd88ddca9 100644
--- a/xbmc/pvr/windows/GUIEPGGridContainer.cpp
+++ b/xbmc/pvr/windows/GUIEPGGridContainer.cpp
@@ -1655,6 +1655,19 @@ void CGUIEPGGridContainer::GoToDate(const CDateTime& date)
   SetBlock(offset);
 }
 
+void CGUIEPGGridContainer::GoToFirstChannel()
+{
+  GoToChannel(0);
+}
+
+void CGUIEPGGridContainer::GoToLastChannel()
+{
+  if (m_gridModel->ChannelItemsSize())
+    GoToChannel(m_gridModel->ChannelItemsSize() - 1);
+  else
+    GoToChannel(0);
+}
+
 void CGUIEPGGridContainer::GoToTop()
 {
   if (m_orientation == VERTICAL)
diff --git a/xbmc/pvr/windows/GUIEPGGridContainer.h b/xbmc/pvr/windows/GUIEPGGridContainer.h
index ffe67b56f662..38a40aee3c47 100644
--- a/xbmc/pvr/windows/GUIEPGGridContainer.h
+++ b/xbmc/pvr/windows/GUIEPGGridContainer.h
@@ -87,6 +87,10 @@ namespace PVR
     void GoToEnd();
     void GoToNow();
     void GoToDate(const CDateTime& date);
+
+    void GoToFirstChannel();
+    void GoToLastChannel();
+
     void GoToTop();
     void GoToBottom();
     void GoToMostLeft();
diff --git a/xbmc/pvr/windows/GUIWindowPVRBase.cpp b/xbmc/pvr/windows/GUIWindowPVRBase.cpp
index 9d4dfeea1dce..85688cfe2faf 100644
--- a/xbmc/pvr/windows/GUIWindowPVRBase.cpp
+++ b/xbmc/pvr/windows/GUIWindowPVRBase.cpp
@@ -185,17 +185,13 @@ bool CGUIWindowPVRBase::OnAction(const CAction& action)
   switch (action.GetID())
   {
     case ACTION_PREVIOUS_CHANNELGROUP:
+      ActivatePreviousChannelGroup();
+      return true;
+
     case ACTION_NEXT_CHANNELGROUP:
-    {
-      // switch to next or previous group
-      const std::shared_ptr<CPVRChannelGroup> channelGroup = GetChannelGroup();
-      if (channelGroup)
-      {
-        const CPVRChannelGroups* groups = CServiceBroker::GetPVRManager().ChannelGroups()->Get(channelGroup->IsRadio());
-        SetChannelGroup(action.GetID() == ACTION_NEXT_CHANNELGROUP ? groups->GetNextGroup(*channelGroup) : groups->GetPreviousGroup(*channelGroup));
-      }
+      ActivateNextChannelGroup();
       return true;
-    }
+
     case ACTION_MOVE_RIGHT:
     case ACTION_MOVE_LEFT:
     {
@@ -226,6 +222,36 @@ bool CGUIWindowPVRBase::OnBack(int actionID)
   return CGUIMediaWindow::OnBack(actionID);
 }
 
+bool CGUIWindowPVRBase::ActivatePreviousChannelGroup()
+{
+  const std::shared_ptr<CPVRChannelGroup> channelGroup = GetChannelGroup();
+  if (channelGroup)
+  {
+    const CPVRChannelGroups* groups = CServiceBroker::GetPVRManager().ChannelGroups()->Get(channelGroup->IsRadio());
+    if (groups)
+    {
+      SetChannelGroup(groups->GetPreviousGroup(*channelGroup));
+      return true;
+    }
+  }
+  return false;
+}
+
+bool CGUIWindowPVRBase::ActivateNextChannelGroup()
+{
+  const std::shared_ptr<CPVRChannelGroup> channelGroup = GetChannelGroup();
+  if (channelGroup)
+  {
+    const CPVRChannelGroups* groups = CServiceBroker::GetPVRManager().ChannelGroups()->Get(channelGroup->IsRadio());
+    if (groups)
+    {
+      SetChannelGroup(groups->GetNextGroup(*channelGroup));
+      return true;
+    }
+  }
+  return false;
+}
+
 void CGUIWindowPVRBase::ClearData()
 {
   CSingleLock lock(m_critSection);
diff --git a/xbmc/pvr/windows/GUIWindowPVRBase.h b/xbmc/pvr/windows/GUIWindowPVRBase.h
index 12063567a4da..80eff48cd412 100644
--- a/xbmc/pvr/windows/GUIWindowPVRBase.h
+++ b/xbmc/pvr/windows/GUIWindowPVRBase.h
@@ -79,6 +79,10 @@ namespace PVR
      */
     bool DoRefresh(void) { return Refresh(true); }
 
+    bool ActivatePreviousChannelGroup();
+    bool ActivateNextChannelGroup();
+    bool OpenChannelGroupSelectionDialog();
+
   protected:
     CGUIWindowPVRBase(bool bRadio, int id, const std::string& xmlFile);
 
@@ -116,8 +120,6 @@ namespace PVR
     std::atomic_bool m_bUpdating = {false};
 
   private:
-    bool OpenChannelGroupSelectionDialog(void);
-
     /*!
      * @brief Show or update the progress dialog.
      * @param strText The current status.
diff --git a/xbmc/pvr/windows/GUIWindowPVRGuide.cpp b/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
index a6ed0ad0ace2..620141d446a6 100644
--- a/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+++ b/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
@@ -11,10 +11,12 @@
 #include "FileItem.h"
 #include "GUIUserMessages.h"
 #include "ServiceBroker.h"
+#include "addons/Skin.h"
 #include "dialogs/GUIDialogBusy.h"
 #include "dialogs/GUIDialogContextMenu.h"
 #include "dialogs/GUIDialogNumeric.h"
 #include "guilib/GUIMessage.h"
+#include "guilib/GUIWindowManager.h"
 #include "guilib/LocalizeStrings.h"
 #include "input/actions/Action.h"
 #include "input/actions/ActionIDs.h"
@@ -36,6 +38,7 @@
 #include "threads/SingleLock.h"
 #include "view/GUIViewState.h"
 
+#include <functional>
 #include <memory>
 #include <utility>
 #include <vector>
@@ -120,6 +123,12 @@ void CGUIWindowPVRGuideBase::OnDeinitWindow(int nextWindowID)
     }
   }
 
+  CGUIDialog* dialog = CServiceBroker::GetGUI()->GetWindowManager().GetDialog(WINDOW_DIALOG_PVR_GUIDE_CONTROLS);
+  if (dialog && dialog->IsDialogRunning())
+  {
+    dialog->Close();
+  }
+
   CGUIWindowPVRBase::OnDeinitWindow(nextWindowID);
 }
 
@@ -171,12 +180,9 @@ void CGUIWindowPVRGuideBase::SetInvalid()
 
 void CGUIWindowPVRGuideBase::GetContextButtons(int itemNumber, CContextButtons& buttons)
 {
-  buttons.Add(CONTEXT_BUTTON_BEGIN, 19063); /* Go to begin */
-  buttons.Add(CONTEXT_BUTTON_NOW,   19070); /* Go to now */
-  buttons.Add(CONTEXT_BUTTON_DATE,  19288); /* Go to date */
-  buttons.Add(CONTEXT_BUTTON_END,   19064); /* Go to end */
-
   CGUIWindowPVRBase::GetContextButtons(itemNumber, buttons);
+
+  buttons.Add(CONTEXT_BUTTON_NAVIGATE, 19326); // Navigate...
 }
 
 void CGUIWindowPVRGuideBase::UpdateSelectedItemPath()
@@ -592,28 +598,93 @@ bool CGUIWindowPVRGuideBase::OnMessage(CGUIMessage& message)
 
 bool CGUIWindowPVRGuideBase::OnContextButton(int itemNumber, CONTEXT_BUTTON button)
 {
-  switch (button)
-  {
-    case CONTEXT_BUTTON_BEGIN:
-      return OnContextButtonBegin();
+  if (OnContextButtonNavigate(button))
+    return true;
 
-    case CONTEXT_BUTTON_NOW:
-      return OnContextButtonNow();
+  if (itemNumber < 0 || itemNumber >= m_vecItems->Size())
+    return false;
 
-    case CONTEXT_BUTTON_DATE:
-      return OnContextButtonDate();
+  return CGUIMediaWindow::OnContextButton(itemNumber, button);
+}
 
-    case CONTEXT_BUTTON_END:
-      return OnContextButtonEnd();
+namespace
+{
 
-    default:
-      break;
+template<typename A>
+class CContextMenuFunctions : public CContextButtons
+{
+public:
+  explicit CContextMenuFunctions(A* instance) : m_instance(instance) {}
+
+  void Add(bool (A::*function)(), unsigned int resId)
+  {
+    CContextButtons::Add(size(), resId);
+    m_functions.emplace_back(std::bind(function, m_instance));
   }
 
-  if (itemNumber < 0 || itemNumber >= m_vecItems->Size())
-    return false;
+  bool Call(int idx)
+  {
+    if (idx < 0 || idx >= static_cast<int>(m_functions.size()))
+      return false;
 
-  return CGUIMediaWindow::OnContextButton(itemNumber, button);
+    return m_functions[idx]();
+  }
+
+private:
+  A* m_instance = nullptr;
+  std::vector<std::function<bool()>> m_functions;
+};
+
+} // unnamed namespace
+
+bool CGUIWindowPVRGuideBase::OnContextButtonNavigate(CONTEXT_BUTTON button)
+{
+  bool bReturn = false;
+
+  if (button == CONTEXT_BUTTON_NAVIGATE)
+  {
+    if (g_SkinInfo->HasSkinFile("DialogPVRGuideControls.xml"))
+    {
+      // use controls dialog
+      CGUIDialog* dialog = CServiceBroker::GetGUI()->GetWindowManager().GetDialog(WINDOW_DIALOG_PVR_GUIDE_CONTROLS);
+      if (dialog && !dialog->IsDialogRunning())
+      {
+        dialog->Open();
+      }
+    }
+    else
+    {
+      // use context menu
+      CContextMenuFunctions<CGUIWindowPVRGuideBase> buttons(this);
+      buttons.Add(&CGUIWindowPVRGuideBase::GotoBegin, 19063); // First programme
+      buttons.Add(&CGUIWindowPVRGuideBase::Go12HoursBack, 19317); // 12 hours back
+      buttons.Add(&CGUIWindowPVRGuideBase::GotoNow, 19070); // Current programme
+      buttons.Add(&CGUIWindowPVRGuideBase::Go12HoursForward, 19318); // 12 hours forward
+      buttons.Add(&CGUIWindowPVRGuideBase::GotoEnd, 19064); // Last programme
+      buttons.Add(&CGUIWindowPVRGuideBase::OpenDateSelectionDialog, 19288); // Date selector
+      buttons.Add(&CGUIWindowPVRGuideBase::GotoFirstChannel, 19322); // First channel
+      if (CServiceBroker::GetPVRManager().IsPlayingTV() || CServiceBroker::GetPVRManager().IsPlayingRadio())
+        buttons.Add(&CGUIWindowPVRGuideBase::GotoPlayingChannel, 19323); // Playing channel
+      buttons.Add(&CGUIWindowPVRGuideBase::GotoLastChannel, 19324); // Last channel
+      buttons.Add(&CGUIWindowPVRBase::ActivatePreviousChannelGroup, 19319); // Previous group
+      buttons.Add(&CGUIWindowPVRBase::ActivateNextChannelGroup, 19320); // Next group
+      buttons.Add(&CGUIWindowPVRBase::OpenChannelGroupSelectionDialog, 19321); // Group selector
+
+      int buttonIdx = 0;
+      int lastButtonIdx = 2; // initially select "Current programme"
+
+      // loop until canceled
+      while (buttonIdx >= 0)
+      {
+        buttonIdx = CGUIDialogContextMenu::Show(buttons, lastButtonIdx);
+        lastButtonIdx = buttonIdx;
+        buttons.Call(buttonIdx);
+      }
+    }
+    bReturn = true;
+  }
+
+  return bReturn;
 }
 
 bool CGUIWindowPVRGuideBase::RefreshTimelineItems()
@@ -703,25 +774,25 @@ bool CGUIWindowPVRGuideBase::RefreshTimelineItems()
   return false;
 }
 
-bool CGUIWindowPVRGuideBase::OnContextButtonBegin()
+bool CGUIWindowPVRGuideBase::GotoBegin()
 {
   GetGridControl()->GoToBegin();
   return true;
 }
 
-bool CGUIWindowPVRGuideBase::OnContextButtonEnd()
+bool CGUIWindowPVRGuideBase::GotoEnd()
 {
   GetGridControl()->GoToEnd();
   return true;
 }
 
-bool CGUIWindowPVRGuideBase::OnContextButtonNow()
+bool CGUIWindowPVRGuideBase::GotoNow()
 {
   GetGridControl()->GoToNow();
   return true;
 }
 
-bool CGUIWindowPVRGuideBase::OnContextButtonDate()
+bool CGUIWindowPVRGuideBase::OpenDateSelectionDialog()
 {
   bool bReturn = false;
 
@@ -738,6 +809,46 @@ bool CGUIWindowPVRGuideBase::OnContextButtonDate()
   return bReturn;
 }
 
+bool CGUIWindowPVRGuideBase::Go12HoursBack()
+{
+  return GotoDate(-12);
+}
+
+bool CGUIWindowPVRGuideBase::Go12HoursForward()
+{
+  return GotoDate(+12);
+}
+
+bool CGUIWindowPVRGuideBase::GotoDate(int deltaHours)
+{
+  CGUIEPGGridContainer* epgGridContainer = GetGridControl();
+  epgGridContainer->GoToDate(epgGridContainer->GetSelectedDate() + CDateTimeSpan(0, deltaHours, 0, 0));
+  return true;
+}
+
+bool CGUIWindowPVRGuideBase::GotoFirstChannel()
+{
+  GetGridControl()->GoToFirstChannel();
+  return true;
+}
+
+bool CGUIWindowPVRGuideBase::GotoLastChannel()
+{
+  GetGridControl()->GoToLastChannel();
+  return true;
+}
+
+bool CGUIWindowPVRGuideBase::GotoPlayingChannel()
+{
+  const std::shared_ptr<CPVRChannel> channel = CServiceBroker::GetPVRManager().GetPlayingChannel();
+  if (channel)
+  {
+    GetGridControl()->SetChannel(channel);
+    return true;
+  }
+  return false;
+}
+
 void CGUIWindowPVRGuideBase::OnInputDone()
 {
   const CPVRChannelNumber channelNumber = GetChannelNumber();
diff --git a/xbmc/pvr/windows/GUIWindowPVRGuide.h b/xbmc/pvr/windows/GUIWindowPVRGuide.h
index d134d12fdf7c..8046d1c8e39d 100644
--- a/xbmc/pvr/windows/GUIWindowPVRGuide.h
+++ b/xbmc/pvr/windows/GUIWindowPVRGuide.h
@@ -52,6 +52,17 @@ namespace PVR
     void GetChannelNumbers(std::vector<std::string>& channelNumbers) override;
     void OnInputDone() override;
 
+    bool GotoBegin();
+    bool GotoEnd();
+    bool GotoNow();
+    bool GotoDate(int deltaHours);
+    bool OpenDateSelectionDialog();
+    bool Go12HoursBack();
+    bool Go12HoursForward();
+    bool GotoFirstChannel();
+    bool GotoLastChannel();
+    bool GotoPlayingChannel();
+
   protected:
     void UpdateSelectedItemPath() override;
     std::string GetDirectoryPath(void) override { return ""; }
@@ -65,10 +76,7 @@ namespace PVR
     CGUIEPGGridContainer* GetGridControl();
     void InitEpgGridControl();
 
-    bool OnContextButtonBegin();
-    bool OnContextButtonEnd();
-    bool OnContextButtonNow();
-    bool OnContextButtonDate();
+    bool OnContextButtonNavigate(CONTEXT_BUTTON button);
 
     bool ShouldNavigateToGridContainer(int iAction);
 
