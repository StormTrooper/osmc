From 6203a2c5e4d97a8ab895c5de4f215fb9c2445da7 Mon Sep 17 00:00:00 2001
From: Lukas Rusak <lorusak@gmail.com>
Date: Sat, 21 Apr 2018 14:44:57 -0700
Subject: [PATCH] windowing: add overrides for UseLimitedColor for specific
 platforms

---
 xbmc/windowing/WinSystem.cpp                | 2 +-
 xbmc/windowing/X11/WinSystemX11.cpp         | 5 +++++
 xbmc/windowing/X11/WinSystemX11.h           | 1 +
 xbmc/windowing/gbm/WinSystemGbm.cpp         | 5 +++++
 xbmc/windowing/gbm/WinSystemGbm.h           | 2 ++
 xbmc/windowing/osx/WinSystemOSX.h           | 1 +
 xbmc/windowing/osx/WinSystemOSX.mm          | 5 +++++
 xbmc/windowing/wayland/WinSystemWayland.cpp | 5 +++++
 xbmc/windowing/wayland/WinSystemWayland.h   | 2 ++
 xbmc/windowing/win10/WinSystemWin10.cpp     | 5 +++++
 xbmc/windowing/win10/WinSystemWin10.h       | 2 ++
 xbmc/windowing/windows/WinSystemWin32.cpp   | 5 +++++
 xbmc/windowing/windows/WinSystemWin32.h     | 2 ++
 13 files changed, 41 insertions(+), 1 deletion(-)

diff --git a/xbmc/windowing/WinSystem.cpp b/xbmc/windowing/WinSystem.cpp
index 68eb218d438c..f853433d7bed 100644
--- a/xbmc/windowing/WinSystem.cpp
+++ b/xbmc/windowing/WinSystem.cpp
@@ -239,7 +239,7 @@ REFRESHRATE CWinSystemBase::DefaultRefreshRate(int screen, std::vector<REFRESHRA
 
 bool CWinSystemBase::UseLimitedColor()
 {
-  return CServiceBroker::GetSettings().GetBool(CSettings::SETTING_VIDEOSCREEN_LIMITEDRANGE);
+  return false;
 }
 
 std::string CWinSystemBase::GetClipboardText(void)
diff --git a/xbmc/windowing/X11/WinSystemX11.cpp b/xbmc/windowing/X11/WinSystemX11.cpp
index b58e7b795760..09f370ac045f 100644
--- a/xbmc/windowing/X11/WinSystemX11.cpp
+++ b/xbmc/windowing/X11/WinSystemX11.cpp
@@ -456,6 +456,11 @@ bool CWinSystemX11::HasCalibration(const RESOLUTION_INFO &resInfo)
   return false;
 }
 
+bool CWinSystemX11::UseLimitedColor()
+{
+  return CServiceBroker::GetSettings().GetBool(CSettings::SETTING_VIDEOSCREEN_LIMITEDRANGE);
+}
+
 void CWinSystemX11::GetConnectedOutputs(std::vector<std::string> *outputs)
 {
   std::vector<XOutput> outs;
diff --git a/xbmc/windowing/X11/WinSystemX11.h b/xbmc/windowing/X11/WinSystemX11.h
index 19cb43a9e76a..f65025c34bac 100644
--- a/xbmc/windowing/X11/WinSystemX11.h
+++ b/xbmc/windowing/X11/WinSystemX11.h
@@ -63,6 +63,7 @@ class CWinSystemX11 : public CWinSystemBase
   void Register(IDispResource *resource) override;
   void Unregister(IDispResource *resource) override;
   bool HasCalibration(const RESOLUTION_INFO &resInfo) override;
+  bool UseLimitedColor() override;
 
   // Local to WinSystemX11 only
   Display*  GetDisplay() { return m_dpy; }
diff --git a/xbmc/windowing/gbm/WinSystemGbm.cpp b/xbmc/windowing/gbm/WinSystemGbm.cpp
index 45783bd9f170..1cfba01e0748 100644
--- a/xbmc/windowing/gbm/WinSystemGbm.cpp
+++ b/xbmc/windowing/gbm/WinSystemGbm.cpp
@@ -232,6 +232,11 @@ void CWinSystemGbm::WaitVBlank()
   m_DRM->WaitVBlank();
 }
 
+bool CWinSystemGbm::UseLimitedColor()
+{
+  return CServiceBroker::GetSettings().GetBool(CSettings::SETTING_VIDEOSCREEN_LIMITEDRANGE);
+}
+
 bool CWinSystemGbm::Hide()
 {
   return false;
diff --git a/xbmc/windowing/gbm/WinSystemGbm.h b/xbmc/windowing/gbm/WinSystemGbm.h
index 90771df278b4..639bbb8d39ab 100644
--- a/xbmc/windowing/gbm/WinSystemGbm.h
+++ b/xbmc/windowing/gbm/WinSystemGbm.h
@@ -53,6 +53,8 @@ class CWinSystemGbm : public CWinSystemBase
 
   void UpdateResolutions() override;
 
+  bool UseLimitedColor() override;
+
   bool Hide() override;
   bool Show(bool raise = true) override;
   virtual void Register(IDispResource *resource);
diff --git a/xbmc/windowing/osx/WinSystemOSX.h b/xbmc/windowing/osx/WinSystemOSX.h
index 7cdbbb85892d..33ecc7014946 100644
--- a/xbmc/windowing/osx/WinSystemOSX.h
+++ b/xbmc/windowing/osx/WinSystemOSX.h
@@ -58,6 +58,7 @@ class CWinSystemOSX : public CWinSystemBase, public ITimerCallback
   virtual bool Hide() override;
   virtual bool Show(bool raise = true) override;
   virtual void OnMove(int x, int y) override;
+  bool UseLimitedColor() override;
 
   virtual std::string GetClipboardText(void) override;
 
diff --git a/xbmc/windowing/osx/WinSystemOSX.mm b/xbmc/windowing/osx/WinSystemOSX.mm
index 4bde0d901617..27dbb0901b60 100644
--- a/xbmc/windowing/osx/WinSystemOSX.mm
+++ b/xbmc/windowing/osx/WinSystemOSX.mm
@@ -1718,6 +1718,11 @@ static void DisplayReconfigured(CGDirectDisplayID display,
   HandlePossibleRefreshrateChange();
 }
 
+bool CWinSystemOSX::UseLimitedColor()
+{
+  return CServiceBroker::GetSettings().GetBool(CSettings::SETTING_VIDEOSCREEN_LIMITEDRANGE);
+}
+
 std::unique_ptr<IOSScreenSaver> CWinSystemOSX::GetOSScreenSaverImpl()
 {
   return std::unique_ptr<IOSScreenSaver> (new COSScreenSaverOSX);
diff --git a/xbmc/windowing/wayland/WinSystemWayland.cpp b/xbmc/windowing/wayland/WinSystemWayland.cpp
index be7c40d23f27..a4f2cdd80304 100644
--- a/xbmc/windowing/wayland/WinSystemWayland.cpp
+++ b/xbmc/windowing/wayland/WinSystemWayland.cpp
@@ -443,6 +443,11 @@ void CWinSystemWayland::GetConnectedOutputs(std::vector<std::string>* outputs)
                    return UserFriendlyOutputName(pair.second); });
 }
 
+bool CWinSystemWayland::UseLimitedColor()
+{
+  return CServiceBroker::GetSettings().GetBool(CSettings::SETTING_VIDEOSCREEN_LIMITEDRANGE);
+}
+
 void CWinSystemWayland::UpdateResolutions()
 {
   CWinSystemBase::UpdateResolutions();
diff --git a/xbmc/windowing/wayland/WinSystemWayland.h b/xbmc/windowing/wayland/WinSystemWayland.h
index 786d8c722b30..7a91e6dc94ea 100644
--- a/xbmc/windowing/wayland/WinSystemWayland.h
+++ b/xbmc/windowing/wayland/WinSystemWayland.h
@@ -75,6 +75,8 @@ class CWinSystemWayland : public CWinSystemBase, IInputHandler, IWindowDecoratio
   void FinishModeChange(RESOLUTION res) override;
   void FinishWindowResize(int newWidth, int newHeight) override;
 
+  bool UseLimitedColor() override;
+
   void UpdateResolutions() override;
   int GetNumScreens() override;
   int GetCurrentScreen() override;
diff --git a/xbmc/windowing/win10/WinSystemWin10.cpp b/xbmc/windowing/win10/WinSystemWin10.cpp
index e0884b449c6e..2f6e94504789 100644
--- a/xbmc/windowing/win10/WinSystemWin10.cpp
+++ b/xbmc/windowing/win10/WinSystemWin10.cpp
@@ -739,6 +739,11 @@ std::string CWinSystemWin10::GetClipboardText()
   return KODI::PLATFORM::WINDOWS::FromW(unicode_text);
 }
 
+bool CWinSystemWin10::UseLimitedColor()
+{
+  return CServiceBroker::GetSettings().GetBool(CSettings::SETTING_VIDEOSCREEN_LIMITEDRANGE);
+}
+
 void CWinSystemWin10::NotifyAppFocusChange(bool bGaining)
 {
   m_inFocus = bGaining;
diff --git a/xbmc/windowing/win10/WinSystemWin10.h b/xbmc/windowing/win10/WinSystemWin10.h
index b988e0c911df..9e66b2e4269a 100644
--- a/xbmc/windowing/win10/WinSystemWin10.h
+++ b/xbmc/windowing/win10/WinSystemWin10.h
@@ -106,6 +106,8 @@ class CWinSystemWin10 : public CWinSystemBase
   bool Hide() override;
   bool Show(bool raise = true) override;
   std::string GetClipboardText() override;
+  bool UseLimitedColor() override;
+
   // videosync
   std::unique_ptr<CVideoSync> GetVideoSync(void *clock) override;
 
diff --git a/xbmc/windowing/windows/WinSystemWin32.cpp b/xbmc/windowing/windows/WinSystemWin32.cpp
index d0ac082c84e2..c264a0b89ca2 100644
--- a/xbmc/windowing/windows/WinSystemWin32.cpp
+++ b/xbmc/windowing/windows/WinSystemWin32.cpp
@@ -1120,6 +1120,11 @@ std::string CWinSystemWin32::GetClipboardText()
   return utf8_text;
 }
 
+bool CWinSystemWin32::UseLimitedColor()
+{
+  return CServiceBroker::GetSettings().GetBool(CSettings::SETTING_VIDEOSCREEN_LIMITEDRANGE);
+}
+
 void CWinSystemWin32::NotifyAppFocusChange(bool bGaining)
 {
   if (m_state == WINDOW_STATE_FULLSCREEN && !m_IsAlteringWindow)
diff --git a/xbmc/windowing/windows/WinSystemWin32.h b/xbmc/windowing/windows/WinSystemWin32.h
index 16ad8cb084fd..07846f55328f 100644
--- a/xbmc/windowing/windows/WinSystemWin32.h
+++ b/xbmc/windowing/windows/WinSystemWin32.h
@@ -192,6 +192,8 @@ class CWinSystemWin32 : public CWinSystemBase
   bool Hide() override;
   bool Show(bool raise = true) override;
   std::string GetClipboardText() override;
+  bool UseLimitedColor() override;
+
   // videosync
   std::unique_ptr<CVideoSync> GetVideoSync(void *clock) override;
 
